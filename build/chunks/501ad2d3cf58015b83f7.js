/*! For license information please see 501ad2d3cf58015b83f7.js.LICENSE.txt */
(dxnexivil["webpackChunkeuntae90_yolov8-nxv"]=dxnexivil["webpackChunkeuntae90_yolov8-nxv"]||[]).push([[977],{8166:function(e,t,n){n.d(t,{H:function(){return s}});var r=n(9790);function s(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&r.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}},224:function(e,t,n){n.d(t,{bk:function(){return a},fC:function(){return i}});var r=n(9790),s=n(8166);function a(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const i={kernelName:r.SYM,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;(0,s.H)(t,"abs");let i=new Float32Array(r.D5U.sizeFromShape(t.shape));return i=a(n.data.get(t.dataId).values),n.makeOutput(i,t.shape,t.dtype)}}},2779:function(e,t,n){n.d(t,{EH:function(){return i},IH:function(){return u},j4:function(){return l}});var r=n(9790),s=n(3533),a=n(6205);const i=(0,s.b)(((e,t)=>e+t)),o=(0,a.H)(((e,t,n,r)=>({real:e+n,imag:t+r}))),u=(0,a.j)(r.mm_,i,o),l={kernelName:r.mm_,backendName:"cpu",kernelFunc:u}},8607:function(e,t,n){n.d(t,{W:function(){return s},i:function(){return a}});var r=n(9790);function s(e,t,n,s,a){const i=r.D5U.sizeFromShape(s),o=r.D5U.makeZerosTypedArray(a,n);for(let r=0;r<e.length;r++){const n=e[r];if(n<0)throw new Error("Input x must be non-negative!");n>=a||(o[n]+=i>0?t[r]:1)}return o}function a(e,t,n,s=!1){const a=e.shape[0],i=e.shape[1],o=(0,r.f3b)([a,n],t.dtype);for(let r=0;r<a;r++)for(let a=0;a<i;a++){const i=e.get(r,a);if(i<0)throw new Error("Input x must be non-negative!");i>=n||o.set(s?1:t.size>0?o.get(r,i)+t.get(r,a):o.get(r,i)+1,r,i)}return o}},5003:function(e,t,n){n.d(t,{T0:function(){return u},nv:function(){return i}});var r=n(9790),s=n(3533),a=n(6205);const i=(0,s.b)(((e,t)=>e&t)),o=(0,a.j)(r.hCO,i),u={kernelName:r.hCO,backendName:"cpu",kernelFunc:o}},9258:function(e,t,n){n.d(t,{Mq:function(){return h},pj:function(){return c},sJ:function(){return l}});var r=n(9790),s=n(3533),a=n(4391),i=n(6961),o=n(1775),u=n(2186);function l(e,t,n,a){if("int32"===a){return[t,"int32",Int32Array.from(e)]}if("bool"===a){const a=r.D5U.toTypedArray([0],n),[i,o]=(0,s.b)(((e,t)=>e!==t?1:0))(t,[],e,a,"bool");return[o,"bool",i]}throw new Error(`Error in Cast: failed to cast ${n} to ${a}`)}function c(e){const{inputs:t,backend:n,attrs:s}=e,{x:h}=t,{dtype:p}=s;if("complex64"===p){if("complex64"===h.dtype)return(0,o.y)({inputs:{x:h},backend:n});const e=(0,a.l)(n,h.shape,h.dtype),t=c({inputs:{x:h},backend:n,attrs:{dtype:"float32"}}),r=(0,i.P)({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===h.dtype){const e=(0,u.k)({inputs:{input:h},backend:n}),t=c({inputs:{x:e},backend:n,attrs:{dtype:p}});return n.disposeIntermediateTensorInfo(e),t}if(!r.D5U.hasEncodingLoss(h.dtype,p)){const e=(0,o.y)({inputs:{x:h},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:p}}const d=n.data.get(h.dataId).values,[f,m,g]=l(d,h.shape,h.dtype,p);return n.makeTensorInfo(f,m,g)}const h={kernelName:r.RFZ,backendName:"cpu",kernelFunc:c}},4769:function(e,t,n){n.d(t,{__:function(){return i},y2:function(){return u}});var r=n(9790),s=n(8029),a=n(6738);const i=(0,s.a)((e=>Math.ceil(e))),o=(0,a.O)(r.gJX,i),u={kernelName:r.gJX,backendName:"cpu",kernelFunc:o}},6961:function(e,t,n){function r(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}n.d(t,{P:function(){return r},z:function(){return s}});const s={kernelName:n(9790).Zz9,backendName:"cpu",kernelFunc:r}},8926:function(e,t,n){n.d(t,{j:function(){return s}});var r=n(9790);function s(e,t,n,s){const a=r.D5U.getArrayFromDType(n,r.D5U.sizeFromShape(t));if(s&&"string"!==n){let t=0;e.forEach((e=>{const n=r.D5U.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let s=0;e.forEach((e=>{const i="string"===n?r.backend_util.fromUint8ToStringArray(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const r=n*t[1]+s;for(let t=0;t<e.shape[1];++t)a[r+t]=i[o++]}s+=e.shape[1]}))}return a}},7679:function(e,t,n){n.d(t,{Dg:function(){return o},Kx:function(){return u},tW:function(){return i}});var r=n(9790),s=n(3533),a=n(6205);const i=(0,s.b)(((e,t)=>e===t?1:0)),o=(0,a.j)(r.hdR,i,null,"bool"),u={kernelName:r.hdR,backendName:"cpu",kernelFunc:o}},1211:function(e,t,n){n.d(t,{Qq:function(){return o},Ro:function(){return i},SX:function(){return u}});var r=n(9790),s=n(8029),a=n(6738);const i=(0,s.a)((e=>Math.exp(e))),o=(0,a.O)(r.NEP,i,"float32"),u={kernelName:r.NEP,backendName:"cpu",kernelFunc:o}},969:function(e,t,n){n.d(t,{OF:function(){return i},Vu:function(){return u}});var r=n(9790),s=n(8029),a=n(6738);const i=(0,s.a)((e=>Math.expm1(e))),o=(0,a.O)(r.Y0y,i),u={kernelName:r.Y0y,backendName:"cpu",kernelFunc:o}},6574:function(e,t,n){n.d(t,{Ao:function(){return u},r6:function(){return i}});var r=n(9790),s=n(8029),a=n(6738);const i=(0,s.a)((e=>Math.floor(e))),o=(0,a.O)(r.OR,i),u={kernelName:r.OR,backendName:"cpu",kernelFunc:o}},4892:function(e,t,n){n.d(t,{EE:function(){return u}});var r=n(9790),s=n(3533),a=n(6205);const i=(0,s.b)(((e,t)=>Math.floor(e/t))),o=(0,a.j)(r.jeX,i,null,"int32"),u={kernelName:r.jeX,backendName:"cpu",kernelFunc:o}},1820:function(e,t,n){n.d(t,{m:function(){return s}});var r=n(9790);function s(e,t,n,s,a,i,o,u,l){const c=(0,r.f3b)([s,i],n);for(let r=0;r<s;r++){const n=[];let s=0;for(let t=0;t<a;t++){const i=e[r*a+t];s+=i*o[t],n.push(i)}if(s<0||s>=l/i)throw new Error(`Invalid indices: ${n} does not index into ${u}`);for(let e=0;e<i;e++)c.values[r*i+e]=t.get(...t.indexToLoc(s*i+e))}return c}},4468:function(e,t,n){n.d(t,{i:function(){return s}});var r=n(9790);function s(e,t,n){const s=(0,r.f3b)(n,e.dtype);for(let r=0;r<s.size;++r){const n=s.indexToLoc(r).slice(),a=t.locToIndex([n[0],n[2]]);n[2]=t.values[a];const i=e.locToIndex(n);0<=i&&i<e.values.length&&(s.values[r]=e.values[i])}return s}},6272:function(e,t,n){n.d(t,{Ce:function(){return u},o:function(){return i}});var r=n(9790),s=n(3533),a=n(6205);const i=(0,s.b)(((e,t)=>e>t?1:0)),o=(0,a.j)(r.iZT,i,null,"bool"),u={kernelName:r.iZT,backendName:"cpu",kernelFunc:o}},6259:function(e,t,n){n.d(t,{HL:function(){return i},V:function(){return u}});var r=n(9790),s=n(3533),a=n(6205);const i=(0,s.b)(((e,t)=>e>=t?1:0)),o=(0,a.j)(r.Acj,i,null,"bool"),u={kernelName:r.Acj,backendName:"cpu",kernelFunc:o}},1775:function(e,t,n){function r(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}n.d(t,{I:function(){return s},y:function(){return r}});const s={kernelName:n(9790).iJz,backendName:"cpu",kernelFunc:r}},8405:function(e,t,n){n.d(t,{rO:function(){return i},zh:function(){return u}});var r=n(9790),s=n(3533),a=n(6205);const i=(0,s.b)(((e,t)=>e<t?1:0)),o=(0,a.j)(r.vtC,i,null,"bool"),u={kernelName:r.vtC,backendName:"cpu",kernelFunc:o}},635:function(e,t,n){n.d(t,{lx:function(){return i},m3:function(){return u}});var r=n(9790),s=n(3533),a=n(6205);const i=(0,s.b)(((e,t)=>e<=t?1:0)),o=(0,a.j)(r.CAk,i,null,"bool"),u={kernelName:r.CAk,backendName:"cpu",kernelFunc:o}},1325:function(e,t,n){n.d(t,{b:function(){return s}});var r=n(9790);function s(e,t,n){const s=(t-e)/(n-1),a=r.D5U.makeZerosTypedArray(n,"float32");a[0]=e;for(let r=1;r<a.length;r++)a[r]=a[r-1]+s;return a}},5223:function(e,t,n){n.d(t,{vX:function(){return i},xM:function(){return u}});var r=n(9790),s=n(8029),a=n(6738);const i=(0,s.a)((e=>Math.log(e))),o=(0,a.O)(r.ZbH,i),u={kernelName:r.ZbH,backendName:"cpu",kernelFunc:o}},5126:function(e,t,n){n.d(t,{B:function(){return s}});var r=n(9790);function s(e,t,n,s){const a=r.D5U.getTypedArrayFromDType(s,r.D5U.sizeFromShape(n));for(let r=0;r<a.length;++r){const n=r*t;let s=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>s)&&(s=t)}a[r]=s}return a}},1717:function(e,t,n){n.d(t,{eJ:function(){return u},wS:function(){return i}});var r=n(9790),s=n(3533),a=n(6205);const i=(0,s.b)(((e,t)=>Math.max(e,t))),o=(0,a.j)(r.BMI,i),u={kernelName:r.BMI,backendName:"cpu",kernelFunc:o}},612:function(e,t,n){n.d(t,{u0:function(){return u},vP:function(){return i}});var r=n(9790),s=n(3533),a=n(6205);const i=(0,s.b)(((e,t)=>Math.min(e,t))),o=(0,a.j)(r.q8u,i),u={kernelName:r.q8u,backendName:"cpu",kernelFunc:o}},1917:function(e,t,n){n.d(t,{$3:function(){return i},Jp:function(){return u},f$:function(){return l}});var r=n(9790),s=n(3533),a=n(6205);const i=(0,s.b)(((e,t)=>e*t)),o=(0,a.H)(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),u=(0,a.j)(r.wYn,i,o),l={kernelName:r.wYn,backendName:"cpu",kernelFunc:u}},854:function(e,t,n){n.d(t,{AF:function(){return o},uC:function(){return i}});var r=n(9790),s=n(8166),a=n(1917);function i(e,t,n){const s=r.D5U.createScalarValue(-1,n);return(0,a.$3)([],t,s,e,n)}const o={kernelName:r.kuV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;(0,s.H)(r,"neg");const a=n.data.get(r.dataId).values,[o,u]=i(a,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}}},8584:function(e,t,n){n.d(t,{Gj:function(){return i},nP:function(){return u}});var r=n(9790),s=n(3533),a=n(6205);const i=(0,s.b)(((e,t)=>e!==t?1:0)),o=(0,a.j)(r.yQU,i,null,"bool"),u={kernelName:r.yQU,backendName:"cpu",kernelFunc:o}},9560:function(e,t,n){n.d(t,{Iz:function(){return o},Qg:function(){return i}});var r=n(9790),s=n(8166),a=n(4802);function i(e,t,n,s){const[a,i]=r.backend_util.computeOutAndReduceShapes(e,s),o=(0,r.x8V)(t,"int32"),u=r.D5U.makeZerosTypedArray(r.D5U.sizeFromShape(a),o),l=r.D5U.sizeFromShape(i);for(let r=0;r<u.length;++r){const e=r*l;let t=1;for(let r=0;r<l;++r)t*=n[e+r];u[r]=t}return{outVals:u,outShape:a,outDtype:o}}const o={kernelName:r.DlI,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:u}=t,{axis:l,keepDims:c}=o;(0,s.H)(u,"prod");const h=u.shape.length,p=r.D5U.parseAxisParam(l,u.shape),d=r.backend_util.getAxesPermutation(p,h);let f=p,m=u;const g=[];null!=d&&(m=(0,a.p)({inputs:{x:u},backend:n,attrs:{perm:d}}),g.push(m),f=r.backend_util.getInnerMostAxes(f.length,h));const y=n.data.get(m.dataId).values,{outVals:b,outShape:x,outDtype:w}=i(m.shape,m.dtype,y,f);let v=x;return c&&(v=r.backend_util.expandShapeToKeepDim(x,p)),g.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(v,w,b)}}},9885:function(e,t,n){n.d(t,{c:function(){return o}});var r=n(9790);function s(e,t,n,r){const s=[];let a=0;const i=new Array(t.length-1+n.length).fill(null).map((()=>[0]));(function(e,t){for(let n=0;n<e.length;++n){const r=e[n],s=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}})(n,r);let o=1;for(let u=0;u<t.length-1;++u){o*=t[u];const e=t[u+1];for(let t=1;t<o+1;++t)i[u].push(t*e)}for(let u=0;u<e.length;++u){let r=e[u],o=e[u]+1;for(let e=0;e<n.length;++e){const s=n[e],a=e+t.length-1;if(a>=0){const e=i[a],t=e[e.length-1]-s[r];for(let n=r;n<o;++n)i[a].push(s[n+1]+t)}r=s[r],o=s[o]}o!==r&&(s.push([r,o]),a+=o-r)}return{outSplits:i,valueSlices:s,numValues:a}}function a(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function i(e,t,n,s,i){const o=t.slice();o[0]=i;const u=r.D5U.getArrayFromDType(n,r.D5U.sizeFromShape(o)),l=e.length;return function(e,t,n,r,s,i){const o=a(t,2)[1],u=a(i,2)[1];let l=0;for(const a of n)for(let t=a[0];t<a[1];++t){for(let n=0;n<r;++n)s[l*u+n]=e[t*o+n];++l}}(e,t,s,0===l?0:l/t[0],u,o),[u,o]}function o(e,t,n,a,o,u,l,c){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,s)=>{if(e<0||e>=n){const a=r.D5U.indexToLoc(s,t.length,r.D5U.computeStrides(t)).join(",");throw new Error(`indices[${a}] = ${e} is not in [0, ${n})`)}}))}(u,l,t[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");const h=a[0],{outSplits:p,valueSlices:d,numValues:f}=s(u,l,e,h),m=function(e){const t=[];for(let n=0;n<e.length;++n){const s=r.D5U.getArrayFromDType("int32",e[n].length);t.push(s),e[n].forEach(((e,t)=>s[t]=e))}return t}(p),g=i(n,a,o,d,f);return[m,g[0],g[1]]}},6486:function(e,t,n){n.d(t,{S:function(){return a}});var r=n(9790);const s=2147483647;function a(e,t,n,a,i,o,u){if(t.length>1)throw new Error("starts must be a scalar or vector");if(i.length>1)throw new Error("limits must be a scalar or vector");if(u.length>1)throw new Error("deltas must be a scalar or vector");const l=0===t.length,c=0===i.length,h=0===u.length,p=[];l||p.push(t[0]),c||p.push(i[0]),h||p.push(u[0]);for(let r=1;r<p.length;++r)if(p[r]!==p[r-1])throw new Error("starts, limits, and deltas must have the same shape");const d=0===p.length?1:p[0],f=r.D5U.getArrayFromDType("int32",d+1);f[0]=0;for(let r=0;r<d;++r){const t=l?e[0]:e[r],n=c?a[0]:a[r],i=h?o[0]:o[r];if(0===i)throw new Error("Requires delta != 0");let u;if(i>0&&n<t||i<0&&n>t)u=0;else if(u=Math.ceil(Math.abs((n-t)/i)),u>s)throw new Error(`Requires ((limit - start) / delta) <= ${s}`);f[r+1]=f[r]+u}const m=r.D5U.getArrayFromDType(n,f[d]);let g=0;for(let r=0;r<d;++r){const t=f[r+1]-f[r];let n=l?e[0]:e[r];const s=h?o[0]:o[r];for(let e=0;e<t;++e)m[g++]=n,n+=s}return[f,m]}},8306:function(e,t,n){n.d(t,{p:function(){return u}});var r=n(9790),s=r.backend_util.RowPartitionType;class a{constructor(e,t,n,s,a,i,o,u,l,c){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=s,this.valuesDType=a,this.defaultValue=i,this.defaultValueShape=o,this.rowPartitionValues=u,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=r.backend_util.getRowPartitionTypesHelper(c),this.raggedRank=r.backend_util.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===s.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===s.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case s.VALUE_ROWIDS:return a.getMaxWidthValueRowID(t);case s.ROW_SPLITS:return a.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${s[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let a=1;a<t;++a){const t=e[a];t!==r&&(r=t,s=Math.max(a-n,s),n=a)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return o(e,n)}calculateOutputSize(e){const t=this.valuesShape;r.backend_util.validateDefaultValueShape(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=r.backend_util.combineRaggedTensorToTensorShapes(this.raggedRank,n,t);s[0]<0&&(s[0]=e);for(let r=1;r<=this.raggedRank;++r)s[r]<0&&(s[r]=this.getMaxWidth(r));return s}calculateFirstParentOutputIndex(e,t,n){const s=Math.min(e,n),a=[];let i=0;for(let r=0;r<s;++r,i+=t)a.push(i);for(let r=s;r<e;++r)a.push(-1);return r.D5U.assert(a.length===e,(()=>"Final length of result must be equal to firstDimension.")),a}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,a=[];for(let i=0;i<s-1;++i){const s=e[i+1]-e[i];let o=Math.min(r,s),u=t[i];-1===u&&(o=0);for(let e=0;e<o;++e)a.push(u),u+=n;for(let e=0;e<s-o;++e)a.push(-1)}if(s>0&&a.length!==e[s-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,a=[];if(0===s)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let u=t[o];a.push(u);for(let l=1;l<s;++l){const s=e[l];if(s===o)u>=0&&(++i,i<r?u+=n:u=-1);else{if(i=0,o=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);u=t[s]}a.push(u)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,r){const a=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case s.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,n,r);case s.ROW_SPLITS:if(a.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,n,r);default:throw new Error(`Unsupported partition type: ${s[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case s.FIRST_DIM_SIZE:return e[0];case s.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case s.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${s[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let r=n.length-2;r>=0;--r)n[r]=n[r+1]*t[r+1];const s=o(t,!1),a=r.D5U.getArrayFromDType(this.valuesDType,r.D5U.sizeFromShape(s));if(n[0]*t[0]>0){let r=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){r=this.calculateOutputIndex(e-1,r,n[e],t[e])}this.setOutput(this.raggedRank,r,a,s)}return[s,a]}setOutput(e,t,n,s){if(0===n.length)return;const a=this.values,o=n;let u=s.slice();u=u.slice(e+1);const l=r.D5U.sizeFromShape(u),c=t.length;let h=this.defaultValue;if(h.length!==l&&1!==h.length){const e=this.defaultValueShape;(0,r.lub)((()=>{const t=(0,r.XLQ)(h,e),n=(0,r.UFq)(t,u);h=n.dataSync()}))}let p=0,d=0,f=0;for(let r=0;r<=c;++r){let e=r<c?t[r]:-1;if(e!==f){if(d<f){const e=a.subarray(p*l);i(o.subarray(d*l),e,(f-d)*l)}if(r>=c){e=Math.floor(n.length/l)}if(e>f)if(1===this.defaultValue.length)o.subarray(f*l,e*l).fill(this.defaultValue[0]),f=e;else for(;e>f;){i(o.slice(f*l),h,l),++f}e<0?(p=r+1,d=f):(p=r,d=f,f=d+1)}else++f}}}function i(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function o(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function u(e,t,n,r,s,i,o,u,l,c){return new a(e,t,n,r,s,i,o,u,l,c).compute()}},9230:function(e,t,n){n.d(t,{b:function(){return s}});var r=n(9790);function s(e,t,n,s){if(e===t||e<t&&n<0||t<e&&n>1)return r.D5U.makeZerosTypedArray(0,s);const a=Math.abs(Math.ceil((t-e)/n)),i=r.D5U.makeZerosTypedArray(a,s);t<e&&1===n&&(n=-1),i[0]=e;for(let r=1;r<i.length;r++)i[r]=i[r-1]+n;return i}},2186:function(e,t,n){function r(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}n.d(t,{O:function(){return s},k:function(){return r}});const s={kernelName:n(9790).xJR,backendName:"cpu",kernelFunc:r}},7742:function(e,t,n){n.d(t,{FY:function(){return u},zd:function(){return i}});var r=n(9790),s=n(8029),a=n(6738);const i=(0,s.a)((e=>1/Math.sqrt(e))),o=(0,a.O)(r.bV0,i),u={kernelName:r.bV0,backendName:"cpu",kernelFunc:o}},1:function(e,t,n){n.d(t,{N:function(){return s}});var r=n(9790);function s(e,t,n,s,a,i,o,u,l,c){const h=[s/a,a],p=e.values,d=t.values;if(0===s)return(0,r.f3b)(n,t.dtype);const f=l instanceof r.YDk?l:(0,r.f3b)(h,t.dtype);"string"===typeof l||"number"===typeof l?f.values.fill(l):"boolean"===typeof l&&f.values.fill(+l);for(let r=0;r<i;r++){const e=[];let i=0;for(let t=0;t<o;t++){const n=p[r*o+t];e.push(n),i+=n*u[t]}if(i<0||i>=s/a)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<a;n++)c?f.values[i*a+n]+=d[r*a+n]:f.values[i*a+n]=0===t.rank?d[0]:d[r*a+n]}return f}},108:function(e,t,n){n.d(t,{BP:function(){return u},VY:function(){return i},XD:function(){return o}});var r=n(9790),s=n(8029),a=n(6738);const i=(0,s.a)((e=>1/(1+Math.exp(-e)))),o=(0,a.A)(r.a5O,(e=>1/(1+Math.exp(-e)))),u={kernelName:r.a5O,backendName:"cpu",kernelFunc:o}},2578:function(e,t,n){n.d(t,{C6:function(){return o},rT:function(){return a},tP:function(){return i}});var r=n(9790),s=n(8166);function a(e,t,n,s,a){const i=r.kuN.isSliceContinous(s,t,n),o=r.D5U.sizeFromShape(n),u=r.D5U.computeStrides(s);if(i){const n=r.kuN.computeFlatOffset(t,u);return"string"===a?e.slice(n,n+o):e.subarray(n,n+o)}const l="string"===a?r.backend_util.fromUint8ToStringArray(e):e,c=(0,r.f3b)(s,a,l),h=(0,r.f3b)(n,a);for(let r=0;r<h.size;++r){const e=h.indexToLoc(r),n=e.map(((e,n)=>e+t[n]));h.set(c.get(...n),...e)}return"string"===a?r.backend_util.fromStringArrayToUint8(h.values):h.values}function i(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{begin:u,size:l}=i;(0,s.H)(o,"slice");const[c,h]=r.kuN.parseSliceParams(o,u,l);r.kuN.assertParamsValid(o,c,h);const p=a(n.data.get(o.dataId).values,c,h,o.shape,o.dtype);return n.makeTensorInfo(h,o.dtype,p)}const o={kernelName:r.p2w,backendName:"cpu",kernelFunc:i}},2123:function(e,t,n){n.d(t,{c:function(){return s}});var r=n(9790);function s(e,t,n,s,a,i,o){const u=t[0],l=i[0],c=new Array(l),h=new Array(u),p=t[1];if(0===l){if(0!==u)throw new Error(r.backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(u));return[r.D5U.getArrayFromDType(n,0),[0,p],r.D5U.getArrayFromDType(a,0),c,h]}let d=!0,f=0;const m=new Array(l).fill(0);for(let y=0;y<u;++y){const t=e[y*p];if(t<0)throw new Error(r.backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(y,t));if(t>=l)throw new Error(r.backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(y,t,l));++m[t],d=d&&t>=f,f=t}let g=!0;for(let r=0;r<l;++r){const e=0===m[r];c[r]=e,g=g&&!e,m[r]=Math.max(m[r],1),r>0&&(m[r]+=m[r-1])}if(g&&d){const t=e,n=s;for(let e=0;e<u;++e)h[e]=e;return[t,[u,p],n,c,h]}{const t=m[l-1],i=r.D5U.getArrayFromDType(n,t*p),d=r.D5U.getArrayFromDType(a,t),f=new Array(l).fill(0);for(let n=0;n<u;++n){const t=e[n*p],r=(0===t?0:m[t-1])+f[t];f[t]++;for(let s=0;s<p;++s)i[r*p+s]=e[n*p+s];d[r]=s[n],h[n]=r}for(let e=0;e<l;++e){if(0===f[e]){const t=0===e?0:m[e-1];i[t*p+0]=e;for(let e=1;e<p;++e)i[t*p+e]=0;d[t]=o}}return[i,[t,p],d,c,h]}}},3849:function(e,t,n){n.d(t,{U:function(){return s}});var r=n(9790);function s(e,t,n,s,a){const i=r.D5U.sizeFromShape(s),o=t[0],u=a.length,l=[];let c=1,h=-1;for(let g=0;g<u;++g){const e=a[g];if(-1===e){if(-1!==h)throw new Error(r.backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(h,g));h=g,l.push(1)}else{if(e<0)throw new Error(r.backend_util.getSparseReshapeNegativeOutputDimErrorMessage(g,e));c*=e,l.push(e)}}if(-1!==h){if(c<=0)throw new Error(r.backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(i/c);if(c*e!==i)throw new Error(r.backend_util.getSparseReshapeInputOutputMultipleErrorMessage(s,l));l[h]=e}if(r.D5U.sizeFromShape(l)!==i)throw new Error(r.backend_util.getSparseReshapeInputOutputMismatchErrorMessage(s,l));const p=s.length,d=[];if(p>0){d[p-1]=1;for(let e=p-2;e>=0;--e)d[e]=d[e+1]*s[e+1]}const f=[];if(u>0){f[u-1]=1;for(let e=u-2;e>=0;--e)f[e]=f[e+1]*l[e+1]}const m=r.D5U.getArrayFromDType(n,o*u);for(let r=0;r<o;++r){let t=0;for(let n=0;n<p;++n)t+=e[r*p+n]*d[n];for(let e=0;e<u;++e)m[r*u+e]=Math.trunc(t/f[e]),t%=f[e]}return[m,[o,u],l]}},3989:function(e,t,n){n.d(t,{V:function(){return s}});var r=n(9790);function s(e,t,n,s,a,i=!1,o=0){const u=s.length,l=[t[0],e.length/t[0]],c=l[1],h=u>0?a[u-1]+1:0;if(h<0)throw new Error(r.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const p=t.slice();p[0]=h;const d=p.reduce(((e,t)=>e*t),1),f=r.D5U.getArrayFromDType(n,d);if(0===u)return h>0&&f.fill(o),[f,p];if(h<=0)throw new Error(r.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,y=0,b=a[m];for(;;){let t=0;if(g<u){if(t=a[g],b===t){++g;continue}if(b>=t)throw new Error(r.backend_util.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(b<0||b>=h)throw new Error(r.backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b,h));b>y&&f.fill(o,y*c,b*c);for(let n=m;n<g;++n){const t=s[n];if(t<0||t>=l[0])throw new Error(r.backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,s[n],l[0]));for(let n=0;n<c;n++)f[b*c+n]+=e[t*c+n]}if(i)for(let e=0;e<c;e++)f[b*c+e]/=g-m;if(m=g,++g,y=b+1,b=t,g>u)break}return y<h&&f.fill(o,y*c,h*c),[f,p]}},440:function(e,t,n){n.d(t,{cz:function(){return u},zT:function(){return i}});var r=n(9790),s=n(8029),a=n(6738);const i=(0,s.a)((e=>Math.sqrt(e))),o=(0,a.A)(r.FKq,(e=>Math.sqrt(e))),u={kernelName:r.FKq,backendName:"cpu",kernelFunc:o}},212:function(e,t,n){n.d(t,{MS:function(){return u}});var r=n(9790),s=n(3533),a=n(6205);const i=(0,s.b)(((e,t)=>{const n=e-t;return n*n})),o=(0,a.j)(r._tC,i),u={kernelName:r._tC,backendName:"cpu",kernelFunc:o}},7693:function(e,t,n){n.d(t,{P:function(){return i},j:function(){return u}});var r=n(9790),s=n(8029),a=n(6738);const i=(0,s.a)(((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:s}=t;return e.replace(new RegExp(n,r?"g":""),s)})),o=(0,a.O)(r.e0R,i),u={kernelName:r.e0R,backendName:"cpu",kernelFunc:o}},2210:function(e,t,n){n.d(t,{t:function(){return s}});var r=n(9790);function s(e,t,n,s){const a=(0,r.f3b)(e,t.dtype);for(let r=0;r<a.size;r++){const e=a.indexToLoc(r),i=new Array(e.length);for(let t=0;t<i.length;t++)i[t]=e[t]*n[t]+s[t];a.set(t.get(...i),...e)}return a}},6841:function(e,t,n){n.d(t,{A:function(){return a}});var r=n(9790);class s{constructor(e,t,n,s,a,i){this.separator=r.D5U.encodeString(e),this.nGramWidths=t,this.leftPad=r.D5U.encodeString(n),this.rightPad=r.D5U.encodeString(s),this.padWidth=a,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let i=0;i<s;++i){const o=this.getPadWidth(a),u=Math.max(0,o-i),l=Math.max(0,o-(s-(i+1))),c=a-(u+l),h=t+(u>0?0:i-o);let p=0;p+=u*this.leftPad.length;for(let t=0;t<c;++t)p+=e[h+t].length;p+=l*this.rightPad.length;p+=(u+l+c-1)*this.separator.length,n[r+i]=new Uint8Array(p);const d=n[r+i];let f=0;const m=e=>e.forEach((e=>d[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,s=t.length;if(s>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<s;++r){let s=t[r]>=e;if(s=s&&t[r]<=n,!s)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=s-1,i=r.D5U.getArrayFromDType("int32",s);if(0===n||0===s){const e=new Array(n);for(let t=0;t<=a;++t)i[t]=0;return[e,i]}i[0]=0;for(let r=1;r<=a;++r){const e=t[r]-t[r-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),i[r]=i[r-1]+n}const o=new Array(i[a]);for(let r=0;r<a;++r){const n=t[r];let s=i[r];if(this.nGramWidths.forEach((a=>{const i=this.getNumNGrams(t[r+1]-t[r],a);this.createNGrams(e,n,o,s,i,a),s+=i})),this.preserveShort&&s===i[r]){const a=t[r+1]-t[r];if(0===a)continue;this.createNGrams(e,n,o,s,1,a+2*this.padWidth)}}return[o,i]}}function a(e,t,n,r,a,i,o,u){return new s(n,r,a,i,o,u).compute(e,t)}},8639:function(e,t,n){n.d(t,{Q:function(){return a}});var r=n(9790);function s(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let a=e.indexOf(s);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||r.push(t),a=(e=e.subarray(a+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(s,a);n&&0===t.length||r.push(t),s=a+1}}function a(e,t,n){const a=e.length,i=[];let o=0,u=0;const l=new Array(a);for(let r=0;r<a;++r){const a=i.length;s(e[r],t,n,i);const c=i.length-a;l[r]=c,o+=c,u=Math.max(u,c)}const c=r.D5U.getArrayFromDType("int32",2*o),h=new Array(o),p=[a,u];let d=0;for(let r=0;r<a;++r)for(let e=0;e<l[r];++e)c[2*d]=r,c[2*d+1]=e,h[d]=i[d],++d;return[c,h,p]}},6626:function(e,t,n){n.d(t,{h:function(){return s}});var r=n(9790);function s(e,t){const n=r.D5U.getArrayFromDType("int32",e.length);for(let s=0;s<e.length;++s)n[s]=r.D5U.fingerPrint64(e[s]).modulo(t).getLowBitsUnsigned();return n}},1649:function(e,t,n){n.d(t,{GR:function(){return l},VY:function(){return i},lu:function(){return u}});var r=n(9790),s=n(3533),a=n(6205);const i=(0,s.b)(((e,t)=>e-t)),o=(0,a.H)(((e,t,n,r)=>({real:e-n,imag:t-r}))),u=(0,a.j)(r.Tr8,i,o),l={kernelName:r.Tr8,backendName:"cpu",kernelFunc:u}},7723:function(e,t,n){n.d(t,{R:function(){return s}});var r=n(9790);function s(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const s=(0,r.f3b)(n,e.dtype);for(let r=0;r<s.values.length;++r){const t=s.indexToLoc(r),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const a=e.locToIndex(n);s.values[r]=e.values[a]}return s}},9556:function(e,t,n){n.d(t,{W:function(){return i}});var r=n(9790);const s=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function a(e,t,n=0,i=e.length-1){for(;i>n;){if(i-n>600){const r=i-n+1,s=t-n+1,o=Math.log(r),u=.5*Math.exp(2*o/3),l=.5*Math.sqrt(o*u*(r-u)/r)*Math.sign(s-r/2);a(e,t,Math.max(n,Math.floor(t-s*u/r+l)),Math.min(i,Math.floor(t+(r-s)*u/r+l)))}const o=e[t];let u=n,l=i;for(r.D5U.swap(e,n,t),s(e[i],o)>0&&r.D5U.swap(e,n,i);u<l;){for(r.D5U.swap(e,u,l),u++,l--;s(e[u],o)<0;)u+=1;for(;s(e[l],o)>0;)l-=1}0===s(e[n],o)?r.D5U.swap(e,n,l):(l+=1,r.D5U.swap(e,l,i)),l<=t&&(n=l+1),t<=l&&(i=l-1)}}function i(e,t,n,i,o){const u=t[t.length-1],[l,c]=[e.length/u,u],h=r.D5U.getTypedArrayFromDType(n,l*i),p=r.D5U.getTypedArrayFromDType("int32",l*i);for(let r=0;r<l;r++){const t=r*c,n=e.subarray(t,t+c);let u=new Array(n.length);n.forEach(((e,t)=>u[t]={value:e,index:t})),i<u.length&&(a(u,i),u=u.slice(0,i)),o&&u.sort(s);const l=r*i,d=h.subarray(l,l+i),f=p.subarray(l,l+i);for(let e=0;e<i;e++)d[e]=u[e].value,f[e]=u[e].index}const d=t.slice();return d[d.length-1]=i,[(0,r.f3b)(d,n,h),(0,r.f3b)(d,"int32",p)]}},4802:function(e,t,n){n.d(t,{b:function(){return o},p:function(){return i}});var r=n(9790),s=n(8166),a=n(7107);function i(e){const{inputs:t,attrs:n,backend:r}=e,{x:i}=t,{perm:o}=n;(0,s.H)(i,"transpose");const u=new Array(i.shape.length);for(let s=0;s<u.length;s++)u[s]=i.shape[o[s]];const l=r.data.get(i.dataId).values,c=(0,a.H)(l,i.shape,i.dtype,o,u);return{dataId:r.write(c,u,i.dtype),shape:u,dtype:i.dtype}}const o={kernelName:r.G3Y,backendName:"cpu",kernelFunc:i}},7107:function(e,t,n){n.d(t,{H:function(){return s}});var r=n(9790);function s(e,t,n,s,a){const i=t.length,o=r.D5U.sizeFromShape(t),u=r.D5U.computeStrides(t),l=r.D5U.computeStrides(a),c=r.D5U.getTypedArrayFromDType(n,r.D5U.sizeFromShape(a));for(let h=0;h<o;++h){const t=r.D5U.indexToLoc(h,i,u),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[s[e]];c[r.D5U.locToIndex(n,i,l)]=e[h]}return c}},5638:function(e,t,n){n.d(t,{S:function(){return s}});var r=n(9790);function s(e,t,n,s){const a=r.D5U.parseAxisParam(t,n)[0],i=[1,n[0],1];for(let r=0;r<a;r++)i[0]*=n[r];i[1]=n[a];for(let r=a+1;r<n.length;r++)i[2]*=n[r];const o=new Map,u=new Int32Array(n[a]),l=new r.YDk(i,s,e),c=[],h=1===i[0]&&1===i[2];for(let r=0;r<n[a];r++){let t;if(h)t=e[r].toString();else{const e=[];for(let t=0;t<i[0];t++)for(let n=0;n<i[2];n++)e.push(l.get(t,r,n));t=e.join(",")}const n=o.get(t);if(null!=n)u[r]=n;else{const e=o.size;o.set(t,e),u[r]=e,c.push(r)}}const p=i.slice();p[1]=o.size;const d=new r.YDk(p,s);c.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)d.set(l.get(n,e,r),n,t,r)}));const f=n.slice();return f[a]=p[1],{outputValues:d.values,outputShape:f,indices:u}}},5226:function(e,t,n){n.d(t,{addImpl:function(){return s.EH},bincountImpl:function(){return a.W},bincountReduceImpl:function(){return a.i},bitwiseAndImpl:function(){return i.nv},castImpl:function(){return o.sJ},ceilImpl:function(){return u.__},concatImpl:function(){return l.j},equalImpl:function(){return c.tW},expImpl:function(){return h.Ro},expm1Impl:function(){return p.OF},floorImpl:function(){return d.r6},gatherNdImpl:function(){return f.m},gatherV2Impl:function(){return m.i},greaterEqualImpl:function(){return y.HL},greaterImpl:function(){return g.o},lessEqualImpl:function(){return x.lx},lessImpl:function(){return b.rO},linSpaceImpl:function(){return w.b},logImpl:function(){return v.vX},maxImpl:function(){return k.B},maximumImpl:function(){return I.wS},minimumImpl:function(){return S.vP},multiplyImpl:function(){return N.$3},negImpl:function(){return T.uC},notEqualImpl:function(){return C.Gj},prodImpl:function(){return $.Qg},raggedGatherImpl:function(){return E.c},raggedRangeImpl:function(){return A.S},raggedTensorToTensorImpl:function(){return _.p},rangeImpl:function(){return D.b},rsqrtImpl:function(){return R.zd},scatterImpl:function(){return O.N},sigmoidImpl:function(){return F.VY},simpleAbsImpl:function(){return r.bk},sliceImpl:function(){return M.rT},sparseFillEmptyRowsImpl:function(){return B.c},sparseReshapeImpl:function(){return L.U},sparseSegmentReductionImpl:function(){return z.V},sqrtImpl:function(){return U.zT},staticRegexReplaceImpl:function(){return P.P},stridedSliceImpl:function(){return V.t},stringNGramsImpl:function(){return W.A},stringSplitImpl:function(){return G.Q},stringToHashBucketFastImpl:function(){return H.h},subImpl:function(){return j.VY},tileImpl:function(){return X.R},topKImpl:function(){return q.W},transposeImpl:function(){return K.H},uniqueImpl:function(){return Y.S}});var r=n(224),s=n(2779),a=n(8607),i=n(5003),o=n(9258),u=n(4769),l=n(8926),c=n(7679),h=n(1211),p=n(969),d=n(6574),f=(n(4892),n(1820)),m=n(4468),g=n(6272),y=n(6259),b=n(8405),x=n(635),w=n(1325),v=n(5223),k=n(5126),I=n(1717),S=n(612),N=n(1917),T=n(854),C=n(8584),$=n(9560),E=n(9885),A=n(6486),_=n(8306),D=n(9230),R=n(7742),O=n(1),F=n(108),M=n(2578),B=n(2123),L=n(3849),z=n(3989),U=n(440),P=(n(212),n(7693)),V=n(2210),W=n(6841),G=n(8639),H=n(6626),j=n(1649),X=n(7723),q=n(9556),K=n(7107),Y=n(5638)},3533:function(e,t,n){n.d(t,{b:function(){return s}});var r=n(9790);function s(e){return(t,n,s,a,i)=>{const o=r.backend_util.assertAndGetBroadcastShape(t,n),u=o.length,l=r.D5U.computeStrides(o),c=r.D5U.sizeFromShape(o),h=r.D5U.getTypedArrayFromDType(i,c),p=t.length,d=n.length,f=r.D5U.computeStrides(t),m=r.D5U.computeStrides(n),g=r.backend_util.getBroadcastDims(t,o),y=r.backend_util.getBroadcastDims(n,o);if(g.length+y.length===0)for(let r=0;r<h.length;++r)h[r]=e(s[r%s.length],a[r%a.length]);else for(let b=0;b<h.length;++b){const t=r.D5U.indexToLoc(b,u,l),n=t.slice(-p);g.forEach((e=>n[e]=0));const i=r.D5U.locToIndex(n,p,f),o=t.slice(-d);y.forEach((e=>o[e]=0));const c=r.D5U.locToIndex(o,d,m);h[b]=e(s[i],a[c])}return[h,o]}}},6205:function(e,t,n){n.d(t,{H:function(){return u},j:function(){return o}});var r=n(9790),s=n(8166),a=n(9258),i=n(6961);function o(e,t,n,o){return null==n?({inputs:n,backend:a})=>{const{a:i,b:u}=n,l=a;(0,s.H)([i,u],e);const c=l.data.get(i.dataId).values,h=l.data.get(u.dataId).values,p="string"===i.dtype?r.backend_util.fromUint8ToStringArray(c):c,d="string"===i.dtype?r.backend_util.fromUint8ToStringArray(h):h,f=o||i.dtype,[m,g]=t(i.shape,u.shape,p,d,f);return l.makeTensorInfo(g,f,m)}:({inputs:e,backend:r})=>{const{a:s,b:u}=e,l=r;if("complex64"===s.dtype||"complex64"===u.dtype){const e=(0,a.pj)({inputs:{x:s},backend:l,attrs:{dtype:"complex64"}}),t=l.data.get(e.dataId),r=t.complexTensorInfos.imag,o=l.data.get(t.complexTensorInfos.real.dataId).values,c=l.data.get(r.dataId).values,h=(0,a.pj)({inputs:{x:u},backend:l,attrs:{dtype:"complex64"}}),p=l.data.get(h.dataId),d=p.complexTensorInfos.imag,f=l.data.get(p.complexTensorInfos.real.dataId).values,m=l.data.get(d.dataId).values,[g,y,b]=n(s.shape,u.shape,o,c,f,m),x=l.makeTensorInfo(b,"float32",g),w=l.makeTensorInfo(b,"float32",y),v=(0,i.P)({inputs:{real:x,imag:w},backend:l});return l.disposeIntermediateTensorInfo(e),l.disposeIntermediateTensorInfo(h),l.disposeIntermediateTensorInfo(x),l.disposeIntermediateTensorInfo(w),v}{const e=l.data.get(s.dataId).values,n=l.data.get(u.dataId).values,r=o||s.dtype,[a,i]=t(s.shape,u.shape,e,n,r);return l.makeTensorInfo(i,r,a)}}}function u(e){return(t,n,s,a,i,o)=>{const u=r.backend_util.assertAndGetBroadcastShape(t,n),l=r.D5U.sizeFromShape(u),c=u.length,h=r.D5U.computeStrides(u),p=r.D5U.getTypedArrayFromDType("float32",l),d=r.D5U.getTypedArrayFromDType("float32",l),f=r.backend_util.getBroadcastDims(t,u),m=r.backend_util.getBroadcastDims(n,u),g=r.backend_util.mergeRealAndImagArrays(s,a),y=r.backend_util.mergeRealAndImagArrays(i,o),b=t.length,x=r.D5U.computeStrides(t),w=n.length,v=r.D5U.computeStrides(n);if(f.length+m.length===0)for(let r=0;r<p.length;r++){const t=r%g.length,n=r%y.length,s=e(g[2*t],g[2*t+1],y[2*n],y[2*n+1]);p[r]=s.real,d[r]=s.imag}else for(let k=0;k<p.length;k++){const t=r.D5U.indexToLoc(k,c,h),n=t.slice(-b);f.forEach((e=>n[e]=0));const s=r.D5U.locToIndex(n,b,x),a=t.slice(-w);m.forEach((e=>a[e]=0));const i=r.D5U.locToIndex(a,w,v),o=e(g[2*s],g[2*s+1],y[2*i],y[2*i+1]);p[k]=o.real,d[k]=o.imag}return[p,d,u]}}},8029:function(e,t,n){n.d(t,{a:function(){return s}});var r=n(9790);function s(e){return(t,n,s)=>{const a=r.D5U.getArrayFromDType(n,t.length);for(let r=0;r<t.length;++r)a[r]=e(t[r],s);return a}}},6738:function(e,t,n){n.d(t,{A:function(){return i},O:function(){return o}});var r=n(9790),s=n(8166),a=n(8029);function i(e,t,n){return o(e,(0,a.a)(t),n)}function o(e,t,n){return({inputs:a,attrs:i,backend:o})=>{const{x:u}=a;(0,s.H)(u,e);const l=o,c=l.data.get(u.dataId).values;let h;if("string"===u.dtype){if(!Array.isArray(c))throw new Error("String tensor's value was not an instance of Array");h=r.backend_util.fromUint8ToStringArray(c)}else h=c;const p=n||u.dtype,d=t(h,p,i);return l.makeTensorInfo(u.shape,p,d)}}},4391:function(e,t,n){n.d(t,{l:function(){return a}});var r=n(9790),s=n(6961);function a(e,t,n="float32"){if("complex64"===n){const n=a(e,t,"float32"),r=a(e,t,"float32");return(0,s.P)({inputs:{real:n,imag:r},backend:e})}const i=r.D5U.makeZerosTypedArray(r.D5U.sizeFromShape(t),n);return e.makeTensorInfo(t,n,i)}},891:function(e,t,n){n.d(t,{ic:function(){return Jt}});var r=n(9790);const s={},a={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function i(e,t){if(!(e in s)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if((0,r.OBj)().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete s[e]}),!1),(0,r.OBj)().getBool("SOFTWARE_WEBGL_ENABLED")&&(a.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",a)||n.getContext("experimental-webgl",a);return n.getContext("webgl2",a)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;s[e]=n}const n=s[e];return null==n||n.isContextLost()?(delete s[e],i(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),s[e])}var o,u,l;function c(e,t){return[t,e]}function h(e){const t=r.D5U.sizeFromShape(e),n=Math.ceil(t/4);return r.D5U.sizeToSquarishShape(n)}function p(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function d(e,t){const n=e;let s,a,i,o,u,l,c,h,p,d;return 2===(0,r.OBj)().getNumber("WEBGL_VERSION")?(s=n.R32F,a=n.R16F,i=n.RGBA16F,o=n.RGBA32F,u=n.RED,c=4,h=1,p=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(s=e.RGBA,a=e.RGBA,i=e.RGBA,o=n.RGBA,u=e.RGBA,c=4,h=4,p=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:o,textureFormatFloat:u,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:h,textureTypeHalfFloat:p,textureTypeFloat:d}}function f(e,t){const n=t();return(0,r.OBj)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(o||(o={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(u||(u={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(l||(l={}));function m(e){return!!((0,r.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function g(e,t){return N(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const y=/ERROR: [0-9]+:([0-9]+):/g;function b(e,t){const n=y.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const s=+n[1],a=e.split("\n"),i=a.length.toString().length+2,o=a.map(((e,t)=>r.D5U.rightPad((t+1).toString(),i)+e));let u=0;for(let r=0;r<o.length;r++)u=Math.max(o[r].length,u);const l=o.slice(0,s-1),c=o.slice(s-1,s),h=o.slice(s);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${r.D5U.rightPad(c[0],u)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}function x(e,t){if(f(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function w(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(f(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),f(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i))),f(e,(()=>e.enableVertexAttribArray(o))),!0)}function v(e,t,n,r){f(e,(()=>function(e,t,n){T(e,n),f(e,(()=>e.activeTexture(e.TEXTURE0+n))),f(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),f(e,(()=>e.uniform1i(n,r)))}function k(e,t,n){f(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),f(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function I(e,t){f(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),f(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function S(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function N(e,t,n){const r=f(e,(()=>t()));if(null==r)throw new Error(n);return r}function T(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function C(e,t=2){return r.D5U.sizeFromShape(e.slice(0,e.length-t))}function $(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function E(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[C(e),...$(e)]),t}function A(e){return e%2===0}function _(e,t){if(e=e.slice(-2),t=t.slice(-2),r.D5U.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(A(n)&&A(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&A(e[0])&&A(t[0])}let D,R;function O(e,t){return null!=e.getExtension(t)}function F(e){try{if(null!=i(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function M(e){if(0===e)return!1;const t=i(e);if(1!==e){if(O(t,"EXT_color_buffer_float"))return B(t);const e="EXT_color_buffer_half_float";if(O(t,e)){const n=t.getExtension(e);return function(e,t){const n=d(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}if(!O(t,"OES_texture_float"))return!1;if(!O(t,"WEBGL_color_buffer_float"))return!1;return B(t)}function B(e){const t=d(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function L(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&r.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const z=(0,r.OBj)();function U(){let e,t,n,s,a,i,o,u,l,c;return 2===(0,r.OBj)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",s="in",a="texture",i="outputColor",o="out vec4 outputColor;",u=(0,r.OBj)().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",s="varying",a="texture2D",i="gl_FragColor",o="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:a,output:i,defineOutput:o,defineSpecialNaN:u,defineSpecialInf:l,defineRound:c}}function P(e,t,n="index"){const s=r.D5U.computeStrides(t);return s.map(((t,r)=>`${`int ${e[r]} = ${n} / ${t}`}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function V(e,t,n="index"){const s=r.D5U.computeStrides(t);return s.map(((t,r)=>`${`int ${e[r]} = ${n} / outShapeStrides[${r}]`}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function W(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let a=n-3;a>=0;--a)s[a]=`(${s[a+1]} * ${r[a+1]})`;return s}(e.map(((e,t)=>t)),t);return r.map(((t,s)=>`${`int ${e[s]} = ${n} / ${r[s]}`}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`};`)).join("")}function G(e){const t=r.D5U.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}z.registerFlag("HAS_WEBGL",(()=>z.getNumber("WEBGL_VERSION")>0)),z.registerFlag("WEBGL_VERSION",(()=>F(2)?2:F(1)?1:0)),z.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),z.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===z.get("WEBGL_VERSION"))),z.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),z.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),z.registerFlag("WEBGL_PACK",(()=>z.getBool("HAS_WEBGL"))),z.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>z.getBool("WEBGL_PACK"))),z.registerFlag("WEBGL_PACK_CLIP",(()=>z.getBool("WEBGL_PACK"))),z.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>z.getBool("WEBGL_PACK"))),z.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>z.getBool("WEBGL_PACK"))),z.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>z.getBool("WEBGL_PACK"))),z.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>z.getBool("WEBGL_PACK"))),z.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>z.getBool("WEBGL_PACK"))),z.registerFlag("WEBGL_PACK_REDUCE",(()=>z.getBool("WEBGL_PACK"))),z.registerFlag("WEBGL_LAZILY_UNPACK",(()=>z.getBool("WEBGL_PACK"))),z.registerFlag("WEBGL_CONV_IM2COL",(()=>z.getBool("WEBGL_PACK"))),z.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==D){const t=i(e);D=t.getParameter(t.MAX_TEXTURE_SIZE)}return D}(z.getNumber("WEBGL_VERSION")))),z.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==R){const t=i(e);R=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,R)}(z.getNumber("WEBGL_VERSION")))),z.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=z.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=i(e);return t=O(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:O(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),z.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>z.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!r.C2$.isMobile())),z.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=i(e);if(1===e){if(!O(t,"OES_texture_float"))return!1}else if(!O(t,"EXT_color_buffer_float"))return!1;return B(t)}(z.getNumber("WEBGL_VERSION")))),z.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!z.getBool("WEBGL_FORCE_F16_TEXTURES")&&z.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),z.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>M(z.getNumber("WEBGL_VERSION")))),z.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=z.getNumber("WEBGL_VERSION"))&&null!=i(e).fenceSync;var e})),z.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>z.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),z.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!==typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),z.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>r.C2$.isMobile()?1:-1),(e=>{if("number"!==typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),z.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),z.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),z.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),z.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),z.registerFlag("WEBGL_EXP_CONV",(()=>!1)),z.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>z.getBool("IS_TEST"))),z.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),z.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),z.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),z.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const H="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:j}=r.backend_util;function X(e,t,n){const s=[];if(e.forEach((e=>{const t=r.D5U.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=se(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:s.push(`uniform int ${e.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${e.name}Shape;`)}s.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;")}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{s.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const a=s.join("\n"),i=e.map((e=>function(e,t,n=!1,s){let a="";a+=n?K(e,s):q(e,s);e.shapeInfo.logicalShape.length<=t.logicalShape.length&&(a+=n?function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),a="get"+s+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,u=j(e.shapeInfo.logicalShape,t.logicalShape),l=re(o),c=o-i;let h;const p=["x","y","z","w","u","v"];h=0===i?"":o<2&&u.length>=1?"coords = 0;":u.map((e=>`coords.${p[e+c]} = 0;`)).join("\n");let d="";d=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+c]}`)).join(", ");let f="return outputValue;";const m=1===r.D5U.sizeFromShape(e.shapeInfo.logicalShape),g=r.D5U.sizeFromShape(t.logicalShape),y=1===g;if(1!==i||m||y){if(m&&!y)f=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){const e=i-2,t=i-1;u.indexOf(e)>-1&&u.indexOf(t)>-1?f="return vec4(outputValue.x);":u.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${l} coords = getOutputCoords();\n      ${h}\n      vec4 outputValue = get${s}(${d});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),a="get"+s+"AtOutCoords",i=t.texShape,o=e.shapeInfo.texShape,u=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&u===l&&null==e.shapeInfo.flatOffset&&r.D5U.arraysEqual(o,i))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=re(l),h=j(e.shapeInfo.logicalShape,t.logicalShape),p=l-u;let d;const f=["x","y","z","w","u","v"];d=0===u?"":l<2&&h.length>=1?"coords = 0;":h.map((e=>`coords.${f[e+p]} = 0;`)).join("\n");let m="";m=l<2&&u>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${f[t+p]}`)).join(", ");return`\n    float ${a}() {\n      ${c} coords = getOutputCoords();\n      ${d}\n      return get${s}(${m});\n    }\n  `}(e,t));return a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),o=t.texShape,u=U(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let c,h,p=function(e){const t=`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Y}\n    ${Q}\n    ${Z}\n  `;return t}(u);t.isPacked?(c=function(e,t,n){switch(e.length){case 0:return ee();case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===r[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `;if(1===r[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(r.D5U.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),a=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),a=s*Math.ceil(e[e.length-2]/2);let i=a,o="",u="b, r, c";for(let l=2;l<e.length-1;l++)i*=e[e.length-l-1],o=`\n      int b${l} = index / ${i};\n      index -= b${l} * ${i};\n    `+o,u=`b${l}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),h=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(c=function(e,t,n){switch(e.length){case 0:return ee();case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){if(r.D5U.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n){return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${V(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`}const r=P(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n){return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${V(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `}const r=P(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=P(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=P(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,o,n.enableShapeUniforms),h=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),n.packedInputs&&(p+=J);return[p,l,h,a,c,i,n.userCode].join("\n")}function q(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,a]=e.shapeInfo.texShape;if(1===s&&1===a)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=te(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${ne(e)}\n      }\n    `;const s=e.shapeInfo.texShape,a=s[0],i=s[1];if(1===i&&1===a)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=te(n);if(1===i)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(1===a)return t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(t)return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e.shapeInfo.texShape;if(null!=i&&r.D5U.arraysEqual(n,i)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `;return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${i[1]}.0, ${i[0]}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `}const{newShape:o,keptDims:u}=r.D5U.squeezeShape(n),l=o;if(l.length<n.length){const n=["row","col"];return`\n      ${q(ae(e,l),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${ie(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${ne(e)}\n      }\n    `;const c=i[0],h=i[1],p=te(s);if(1===h)return t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;if(1===c)return t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${h}.0, 0.5);\n      return sampleTexture(${s}, uv);\n    }\n  `;if(t)return`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s}Shape[1] + col + ${p};\n        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n        return sampleTexture(${s}, uv);\n      }\n    `;return`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${p};\n    vec2 uv = uvFromFlat(${c}, ${h}, index);\n    return sampleTexture(${s}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n[1]*n[2],o=n[2],{newShape:u,keptDims:l}=r.D5U.squeezeShape(n),c=u;if(c.length<n.length){const n=["row","col","depth"];return`\n        ${q(ae(e,c),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${ie(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${o}, 1)));\n        ${ne(e)}\n      }\n    `;const h=e.shapeInfo.texShape,p=h[0],d=h[1],f=e.shapeInfo.flatOffset;if(d===i&&null==f)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${s}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${p}.0);\n          return sampleTexture(${s}, uv);\n        }\n      `;if(d===o&&null==f)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${p}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const m=te(s);if(t)return`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${s}Shape[1] * ${s}Shape[2];\n      int stride1 = ${s}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${m};\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n      return sampleTexture(${s}, uv);\n    }\n    `;return`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${o} + depth + ${m};\n        vec2 uv = uvFromFlat(${p}, ${d}, index);\n        return sampleTexture(${s}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n[3],o=n[2]*i,u=n[1]*o,{newShape:l,keptDims:c}=r.D5U.squeezeShape(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${q(ae(e,l),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${ie(n,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${u}, ${o}, ${i}, 1)));\n        ${ne(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1],m=`int stride2 = ${s}Shape[3];`,g=`int stride1 = ${s}Shape[2] * stride2;`,y=`int stride0 = ${s}Shape[1] * stride1;`;if(f===u&&null==h)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${m}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;if(f===i&&null==h)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;const b=te(s);if(t)return`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${m}\n      ${g}\n      ${y}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${b});\n      return sampleTexture(${s}, uv);\n    }\n  `;return`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${o} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${f}, index + ${b});\n      return sampleTexture(${s}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],i=t[3]*a,o=t[2]*i,u=t[1]*o,{newShape:l,keptDims:c}=r.D5U.squeezeShape(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${q(ae(e,l))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${ie(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${o}, ${i}, ${a})) +\n          depth3;\n        ${ne(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];if(f===u&&null==h)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=te(n);return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${o} + depth * ${i} +\n          depth2 * ${a} + depth3 + ${m};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:i}=r.D5U.squeezeShape(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${q(ae(e,a))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${ie(t,i)});\n      }\n    `}const o=t[5],u=t[4]*o,l=t[3]*u,c=t[2]*l,h=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${c}, ${l}, ${u})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${ne(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,f=d[0],m=d[1];if(m===h&&null==p)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===o&&null==p)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const g=te(n);return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${c} + depth * ${l} +\n          depth2 * ${u} + depth3 * ${o} + depth4 + ${g};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function K(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=U();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=U();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e.shapeInfo.texShape,o=i[0],u=i[1],l=U();if(null!=i&&r.D5U.arraysEqual(n,i))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${u}.0, ${o}.0);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `;const c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],h=Math.ceil(n[1]/2);return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${h}, ${c[0]}, ${c[1]}, row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const r=[1,2],a=["b","row","col"];return`\n        ${K(ae(e,n.slice(1)),t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${ie(a,r)});\n        }\n      `}const o=U();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=i[0],l=i[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${h}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=U();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],h=Math.ceil(a[i-1]/2);let p=h*Math.ceil(a[i-2]/2),d="int b, int row, int col",f=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let m=2;m<i-1;m++)d=`int b${m}, `+d,p*=a[i-m-1],f=`b${m} * ${p} + `+f;return`\n    vec4 ${r}(${d}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const Y="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Q="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Z="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",J="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function ee(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function te(e){return`offset${e}`}function ne(e){const t=e.name,n=r.D5U.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function re(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function se(e,t,n){const{newShape:s,keptDims:a}=r.D5U.squeezeShape(t),i=t.length,o=e&&3===i&&1===t[0],u=o?t.slice(1):s,l=!e&&i>1&&!r.D5U.arraysEqual(t,n)&&s.length<i||o;return{useSqueezeShape:l,uniformShape:l?u:t,keptDims:a}}function ae(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function ie(e,t){return t.map((t=>e[t])).join(", ")}function oe(e,t,n,s){const a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=a.map((e=>e.shapeInfo)),o={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},u=X(a,o,t),l=function(e,t){const n=N(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(f(e,(()=>e.shaderSource(n,t))),f(e,(()=>e.compileShader(n))),(0,r.OBj)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw b(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,u),c=e.createProgram(l);return(0,r.OBj)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:u,webGLProgram:c,inShapeInfos:i,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(c),Object.assign({program:t,fragmentShader:l,source:u,webGLProgram:c,inShapeInfos:i,outShapeInfo:o},ue(e,t,c)))}function ue(e,t,n){const s=[],a=[];let i,o,u,l=null,c=null;c=e.getUniformLocation(n,"NAN",!1),1===(0,r.OBj)().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const h=!1;for(const r of t.variableNames){const a={name:r,uniform:e.getUniformLocation(n,r,h),offset:e.getUniformLocation(n,`offset${r}`,h)};t.enableShapeUniforms&&(a.shape=e.getUniformLocation(n,`${r}Shape`,h),a.texShape=e.getUniformLocation(n,`${r}TexShape`,h)),s.push(a)}if(t.enableShapeUniforms&&(i=e.getUniformLocation(n,"outShape",h),u=e.getUniformLocation(n,"outShapeStrides",h),o=e.getUniformLocation(n,"outTexShape",h)),t.customUniforms)for(const r of t.customUniforms)a.push(e.getUniformLocation(n,r.name,h));return{variablesLocations:s,customUniformLocations:a,infLoc:l,nanLoc:c,outShapeLocation:i,outShapeStridesLocation:u,outTexShapeLocation:o}}function le(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const s=e.logicalShape,a=t[n],i=a.shape;if(!r.D5U.arraysEqual(s,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${i} must match`);if(e.isUniform&&a.isUniform)return;const o=e.texShape,u=a.isUniform?null:a.texData.texShape;if(!r.D5U.arraysEqual(o,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${u} must match`)}))}function ce(e){return(0,r.OBj)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class he{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=o.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=U();this.outputShape=e,this.enableShapeUniforms=ce(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?V(["r","c","d"],e):P(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class pe{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=o.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=U();this.outputShape=e,this.enableShapeUniforms=ce(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?V(["r","c","d"],e):P(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class de{constructor(e){this.variableNames=["A"],this.outTexUsage=u.DOWNLOAD;const t=U();this.outputShape=e,this.userCode=`\n      ${H}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class fe{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=u.DOWNLOAD;const t=U();this.outputShape=e,this.userCode=`\n      ${H}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const me={R:0,G:1,B:2,A:3};class ge{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=U();this.outputShape=e,this.enableShapeUniforms=ce(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let a="";for(let i=0;i<n.length;i++){a+=`\n          if(offset == ${i}) {\n            result = values[${me[n[i]]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":G(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${a}\n        }\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class ye{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=U();this.outputShape=e,this.enableShapeUniforms=ce(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let t=0;t<=1;t++){const s=2*a+t;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${a};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":G(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function be(e){const t=U();return function(e,t){const n=N(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(f(e,(()=>e.shaderSource(n,t))),f(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function xe(e){return function(e,t){const n=N(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return f(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),f(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function we(e){return function(e,t){const n=N(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return f(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),f(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function ve(e,t,n,s,a,i){(function(e,t){const n=(0,r.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)})(t,n);const o=function(e){return N(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),u=e.TEXTURE_2D;return f(e,(()=>e.bindTexture(u,o))),f(e,(()=>e.texParameteri(u,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),f(e,(()=>e.texParameteri(u,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),f(e,(()=>e.texParameteri(u,e.TEXTURE_MIN_FILTER,e.NEAREST))),f(e,(()=>e.texParameteri(u,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===(0,r.OBj)().getNumber("WEBGL_VERSION")?f(e,(()=>e.texImage2D(u,0,s,t,n,0,a,i,null))):f(e,(()=>e.texStorage2D(u,1,s,t,n))),f(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:o,texShape:[n,t]}}function ke(e){return e.internalFormatFloat}function Ie(e){return e.internalFormatHalfFloat}function Se(e){return e.downloadTextureFormat}function Ne(e){return e.internalFormatPackedFloat}function Te(e){return e.internalFormatPackedHalfFloat}function Ce(e,t,n,r,s,a,i,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=p(e,t);return n*r*4}(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}class $e{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=(0,r.OBj)().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){s[e]=t}(t,e)):this.gl=i(t),e=this.gl,2===(0,r.OBj)().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>f(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>f(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>f(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>f(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>f(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>f(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>f(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>f(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,r.OBj)().getNumber("WEBGL_VERSION")){const e="OES_texture_half_float";if(this.textureFloatExtension=g(this.gl,"OES_texture_float"),O(this.gl,e))this.textureHalfFloatExtension=g(this.gl,e);else if((0,r.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),O(this.gl,a))this.colorBufferHalfFloatExtension=g(this.gl,a);else if((0,r.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",O(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!O(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=xe(this.gl),this.indexBuffer=we(this.gl),this.framebuffer=function(e){return N(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=d(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,r.OBj)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;f(e,(()=>e.finish())),f(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),f(e,(()=>e.deleteFramebuffer(this.framebuffer))),f(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),f(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),f(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=c(t,n);return ve(e,s,a,ke(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=c(t,n);return ve(e,s,a,Ie(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=c(t,n);return ve(e,s,a,Se(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){f(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===(0,r.OBj)().getNumber("WEBGL_VERSION")?f(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):f(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===(0,r.OBj)().getNumber("WEBGL_VERSION")?f(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):f(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),f(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),function(e,t,n,s,a,i){let o,u,l;f(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(o=new Uint8Array(n*s*4),u=e.UNSIGNED_BYTE,l=e.RGBA):(o=new Float32Array(n*s*4),u=e.FLOAT,l=i.internalFormatPackedFloat),o.set(a),2===(0,r.OBj)().getNumber("WEBGL_VERSION")?f(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,u,o))):f(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,u,o))),f(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=p(t,n);return ve(e,s,a,Te(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=p(t,n);return ve(e,s,a,Ne(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(I(this.gl,this.framebuffer),this.outputTexture=null),f(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[s,a]=c(t,n),i=new Uint8Array(t*n*4);return f(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return Ce(this.gl,e,0,0,0,s,a)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const s=e.createBuffer();f(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const a=16*t*n;return f(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),f(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),f(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}(this.gl,t,n);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,r.OBj)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return f(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=be(t));const n=function(e){return N(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);f(t,(()=>t.attachShader(n,this.vertexShader))),f(t,(()=>t.attachShader(n,e))),function(e,t){if(f(e,(()=>e.linkProgram(t))),!(0,r.OBj)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const s=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&x(t,s),s}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;f(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){f(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),w(e,t,"clipSpacePos",n,3,20,0)&&w(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(f(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&x(this.gl,this.program),f(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return N(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),f(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),v(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=p(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&x(this.gl,this.program),S(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}f(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),f(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=g(this.gl,2===(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await r.D5U.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in(0,r.OBj)().platform&&(n=(0,r.OBj)().platform.setTimeoutCustom.bind((0,r.OBj)().platform)),r.D5U.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),k(this.gl,e,this.framebuffer),this.debug&&S(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(k(this.gl,this.outputTexture,this.framebuffer),this.debug&&S(this.gl)):I(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;k(r,e,this.framebuffer),this.debug&&S(r),this.outputTexture=e,f(r,(()=>r.viewport(0,0,t,n))),f(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),f(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}var Ee=n(5226);const{addImpl:Ae,bincountImpl:_e,bincountReduceImpl:De,bitwiseAndImpl:Re,castImpl:Oe,ceilImpl:Fe,concatImpl:Me,equalImpl:Be,expImpl:Le,expm1Impl:ze,floorImpl:Ue,gatherNdImpl:Pe,gatherV2Impl:Ve,greaterImpl:We,greaterEqualImpl:Ge,lessImpl:He,lessEqualImpl:je,linSpaceImpl:Xe,logImpl:qe,maxImpl:Ke,maximumImpl:Ye,minimumImpl:Qe,multiplyImpl:Ze,negImpl:Je,notEqualImpl:et,prodImpl:tt,raggedGatherImpl:nt,raggedRangeImpl:rt,raggedTensorToTensorImpl:st,rangeImpl:at,rsqrtImpl:it,scatterImpl:ot,sigmoidImpl:ut,simpleAbsImpl:lt,sliceImpl:ct,sparseFillEmptyRowsImpl:ht,sparseReshapeImpl:pt,sparseSegmentReductionImpl:dt,sqrtImpl:ft,staticRegexReplaceImpl:mt,stridedSliceImpl:gt,stringNGramsImpl:yt,stringSplitImpl:bt,stringToHashBucketFastImpl:xt,subImpl:wt,tileImpl:vt,topKImpl:kt,transposeImpl:It,uniqueImpl:St}=Ee;function Nt(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function Tt(e,t){return 1===t?[e]:Nt(e,t)}class Ct{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=ce(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=Tt("rc",this.rank),t=re(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2);return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1]};\n      bool rEdge = rp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2]};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){return`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class $t{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=ce(this.outputShape.length);let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2===1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${a}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${a>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=t,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?W(["r","c","d"],"inputShape"):P(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":G(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class Et{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=_t(t,n),s=Dt(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=At(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].pop();return this.usedTextures[s].push(e),e}let i;return r===l.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===l.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===l.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===l.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===l.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,s){if(null==this.freeTextures)return;const a=_t(n,s),i=Dt(t,a,s);i in this.freeTextures||(this.freeTextures[i]=[]);const o=At(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,s),u=(0,r.OBj)().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==u&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const l=this.usedTextures[i],c=l&&l.indexOf(e);if(null==c||c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[c]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${this.numFreeTextures+this.numUsedTextures})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function At(e,t,n,r,s){const a=function(e,t){switch(e){case l.PACKED_2X2_FLOAT32:return Ne(t);case l.PACKED_2X2_FLOAT16:return Te(t);case l.UNPACKED_FLOAT32:return ke(t);case l.UNPACKED_FLOAT16:return Ie(t);case l.PACKED_4X1_UNSIGNED_BYTE:return Se(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(s){const[t,n]=p(e[0],e[1]);i=t*n}else{const[t,n]=c(e[0],e[1]);i=t*n}const o=function(e,t){if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function _t(e,t){if(e===u.UPLOAD)return l.PACKED_2X2_FLOAT32;if(e===u.RENDER||null==e)return function(e){return(0,r.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?l.PACKED_2X2_FLOAT32:l.UNPACKED_FLOAT32:e?l.PACKED_2X2_FLOAT16:l.UNPACKED_FLOAT16}(t);if(e===u.DOWNLOAD||e===u.PIXELS)return l.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Dt(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class Rt{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=ce(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Ot="if (isnan(x)) return x;",Ft="return x;",Mt="return abs(x);";const Bt="return (x >= 0.0) ? x : (exp(x) - 1.0);",Lt=Ot+"\n  return (x < 0.0) ? 0.0 : x;\n",zt=Ot+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",Ut="return x;",Pt="return 1.0 / (1.0 + exp(-1.0 * x));",Vt="return x;",Wt="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",Gt="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Ht="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",jt="return 1.0 / (1.0 + exp(-1.0 * x));";class Xt{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=ce(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class qt{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=ce(this.outputShape.length);const t=e.length,n=Tt("rc",t),r=re(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const Kt=r.GDt.ZA,Yt={};const Qt=(0,r.OBj)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Zt extends r.Zuw{nextDataId(){return Zt.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,r.OBj)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof $e)t=e;else{const n=i((0,r.OBj)().getNumber("WEBGL_VERSION"),e);t=new $e(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=i((0,r.OBj)().getNumber("WEBGL_VERSION"));t=new $e(e),this.binaryCache=((n=(0,r.OBj)().getNumber("WEBGL_VERSION"))in Yt||(Yt[n]={}),Yt[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Et(this.gpgpu),this.numMBBeforeWarning=null==(0,r.OBj)().global.screen?1024:(0,r.OBj)().global.screen.height*(0,r.OBj)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new r.JLz(this,(0,r.SRH)())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,s,a){const i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,s]},o.texShape=[r,s];const u=E(t),l=new ge(u,!1,a),c=this.runWebGLProgram(l,[i],n,[[r,s]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),c.dataId}write(e,t,n){if(((0,r.OBj)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,r.OBj)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:u.UPLOAD,refCount:1}),s}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,s,a){if((0,r.OBj)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:u.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:a,slice:i,shape:o,isPacked:u}=t;if(null!=i){let t;t=u?new Xt(o,Ut):new Rt(o,Ut);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;const l=null!=this.activeTimers;let c,h;if(l&&(c=r.D5U.now()),"complex64"===s){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);h=r.backend_util.mergeRealAndImagArrays(e,t)}else h=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=r.D5U.now()-c),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:s,slice:a,dtype:i,complexTensorInfos:o,isPacked:u}=t;if(null!=a){let t;t=u?new Xt(s,Ut):new Rt(s,Ut);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:i}],i),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if((0,r.OBj)().getBool("DEBUG")&&!(0,r.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,r.OBj)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,c,p=null;if("complex64"!==i&&(0,r.OBj)().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);p=this.gpgpu.createBufferFromTexture(t.texture.texture,...h(s))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]);c=r.backend_util.mergeRealAndImagArrays(e[0],e[1])}else if(null==p)c=this.getValuesFromTexture(e);else{const e=r.D5U.sizeFromShape(s);c=this.gpgpu.downloadFloat32MatrixFromBuffer(p,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=p){const e=this.gpgpu.gl;f(e,(()=>e.deleteBuffer(p)))}const d=this.convertAndCacheOnCPU(e,c),m=this.pendingRead.get(e);return this.pendingRead.delete(e),m.forEach((e=>e(d))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,r.SRH)().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){const n=this.texData.get(e),{values:s,shape:a,slice:i,dtype:o,isPacked:u,texture:l}=n;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=u?new Xt(a,Ut):new Rt(a,Ut);const r=this.runWebGLProgram(n,[{dataId:e,shape:a,dtype:o}],o),s=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),s}if(null==l)throw null!=s?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,t.customTexShape),h=(0,r.SRH)().makeTensorFromTensorInfo(c),p=this.texData.get(c.dataId);return Object.assign({tensorRef:h},p.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>r.D5U.decodeString(e)));return(0,r.f3b)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,r.f3b)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!m(n)){if((0,r.OBj)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:s}=this.texData.get(e),a=r.D5U.sizeFromShape(t);if((0,r.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...h(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const i=(0,r.OBj)().getBool("WEBGL_PACK")&&!0===s,o=i?E(t):t,u=i?new fe(o):new de(o),l=this.runWebGLProgram(u,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(l.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),p}timerAvailable(){return(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=r.D5U.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=r.D5U.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,s&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);o.kernelMs=r.D5U.sum(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:r.D5U.now(),endMs:null}}endTimer(e){return(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=r.D5U.now(),e)}async getQueryTime(e){if((0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);return e.endMs-e.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Qt){return(0,r.OBj)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&r.D5U.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){r.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Kt(e.shape,t)}packedUnaryOp(e,t,n){const s=new Xt(e.shape,t),a=this.compileAndRun(s,[e],n);return(0,r.SRH)().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=lt(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Mt,e.dtype);const t=new Rt(e.shape,Mt),n=this.compileAndRun(t,[e]);return(0,r.SRH)().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&r.D5U.isString(n[0])){const a=n.map((e=>r.D5U.encodeString(e)));s=this.write(a,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){return(0,r.SRH)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new qt(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Ct(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[C(e.shape),...$(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[C(t),...$(t)],a=new $t(s,n),i=this.runWebGLProgram(a,[r],e.dtype,[n],!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:s,shape:a,dtype:i}=n;if(null!=t){const e=r.D5U.sizeFromShape(a);r.D5U.assert(e<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const o=E(a);let u;u=s?new pe(o):new he(o);const l=[null!=t?t:h(o)];return{dtype:i,shape:a,dataId:this.runWebGLProgram(u,[{shape:o,dtype:i,dataId:e}],i,l,!0,t).dataId}}runWebGLProgram(e,t,n,s,a=!1,i){const u=this.makeTensorInfo(e.outputShape,n),l=this.texData.get(u.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===o.DENSE){const t=null!=i?i:h(e.outputShape);l.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(l.usage=e.outTexUsage),0===r.D5U.sizeFromShape(u.shape))return l.values=r.D5U.getTypedArrayFromDType(u.dtype,0),u;const c=[],p=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&r.D5U.sizeFromShape(t.shape)<=(0,r.OBj)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),c.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!_(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),c.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(u.dataId);const d={shape:u.shape,texData:l,isUniform:!1},f=function(e,t,n){let s="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const i=t.texData.texShape,{useSqueezeShape:o,uniformShape:u,keptDims:l}=se(e.packedInputs,t.shape,i);let c="",h="",p="";if(1===u.length&&e.packedInputs){const e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];c=`${e[0]>1}_${e[1]>1}`}else if(2!==u.length||e.packedInputs){if(u.length>2&&!e.packedInputs){const e=r.D5U.computeStrides(u);p=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else h=`${u[0]>1}_${u[1]>1}`;const d=t.shape.length,f=2===u.length&&r.D5U.arraysEqual(t.shape,i),m=1===r.D5U.sizeFromShape(t.shape),g=r.backend_util.getBroadcastDims(t.shape,n.shape),y=!e.packedInputs&&d===n.shape.length&&r.D5U.arraysEqual(i,n.texData.texShape);s+=`${d}_${y}_${o?l:""}_${u.length}_${m}_${g}_${f}_${c}_${h}_${p}_${e.packedInputs||u.length>2?"":`${i[0]>1}_${i[1]>1}`}_${a}`}else s+=`${t.shape}_${t.isUniform?"uniform":t.texData.texShape}_${a}`}));let a=e.constructor.name;return a+="_"+s+"_"+e.userCode+`${(0,r.OBj)().getNumber("WEBGL_VERSION")}`,a}(e,p,d),m=this.getAndSaveBinary(f,(()=>oe(this.gpgpu,e,p,d))),g=null!=this.activeTimers;let y;g&&(y=this.startTimer()),(0,r.OBj)().get("ENGINE_COMPILE_ONLY")||function(e,t,n,s,a){t.program.enableShapeUniforms||(le(t.inShapeInfos,n),le([t.outShapeInfo],[s]));const i=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,o[0],o[1]):e.setOutputMatrixTexture(i.texture,o[0],o[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===(0,r.OBj)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<n.length;++l){const s=n[l],{uniform:a,offset:i,shape:o,texShape:u}=t.variablesLocations[l];if(o){const{uniformShape:n}=se(t.program.packedInputs,s.shape,s.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(u&&e.gl.uniform2i(u,s.texData.texShape[0],s.texData.texShape[1]),null!=a)if(s.isUniform)if(r.D5U.sizeFromShape(s.shape)<2)e.gl.uniform1f(a,s.uniformValues[0]);else{let t=s.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=s.texData.slice&&null!=i&&e.gl.uniform1i(i,s.texData.slice.flatOffset),e.setInputMatrixTexture(s.texData.texture.texture,a,l)}const u=t.outShapeLocation;if(u)switch(s.shape.length){case 1:e.gl.uniform1iv(u,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(u,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(u,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(u,new Int32Array(s.shape))}if(t.outShapeStridesLocation){const n=r.D5U.computeStrides(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&a)for(let r=0;r<t.program.customUniforms.length;++r){const n=t.program.customUniforms[r],s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}}e.executeProgram()}(this.gpgpu,m,p,d,s),c.forEach((e=>this.disposeIntermediateTensorInfo(e))),g&&(y=this.endTimer(y),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(y)}));const b=(0,r.OBj)().getNumber("WEBGL_FLUSH_THRESHOLD");if(b>0){const e=r.D5U.now();e-this.lastGlFlushTime>b&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,r.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&!1===a){const e=this.unpackTensor(u);return this.disposeIntermediateTensorInfo(u),e}return u}compileAndRun(e,t,n,r,s=!1){return this.runWebGLProgram(e,t,n=n||t[0].dtype,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!(0,r.OBj)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,r.lub)((()=>{if(!(0,r.OBj)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,r.OBj)().getBool("DEBUG");(0,r.OBj)().set("DEBUG",!1);const t=this.abs((0,r.iD$)(1e-8)).dataSync()[0];if((0,r.OBj)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:s,values:a,texture:i,usage:o,isPacked:l}=t;if(null!=i)return;const c=null!=this.activeTimers;let h;c&&(h=r.D5U.now());let d=t.texShape;if(null==d&&(d=function(e,t=!1){let n=(0,r.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=(0,r.OBj)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(s===1/0&&(0,r.OBj)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=n/2),t&&(n*=2,s*=2,1===(e=e.map(((t,n)=>n>=e.length-2?r.D5U.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=r.D5U.squeezeShape(e);e=t.newShape}let a=r.D5U.sizeFromShape(e),i=null;e.length<=1&&a<=n?i=[1,a]:2===e.length&&e[0]<=n&&e[1]<=n?i=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?i=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?i=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?i=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(i=[e[0],e[1]*e[2]*e[3]]);const o=null!=i&&Math.max(...i)>s&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(null==i||o)if(t){const t=C(e);let n=2,s=2;e.length&&([n,s]=$(e)),a=t*(n/2)*(s/2),i=r.D5U.sizeToSquarishShape(a).map((e=>2*e))}else i=r.D5U.sizeToSquarishShape(a);return i}(n,l),t.texShape=d),null!=a){const e=E(n);let i,o=d[1],f=d[0];const m=a instanceof Uint8Array||a instanceof Uint8ClampedArray;!l&&m||([o,f]=p(d[0],d[1])),i=l?new ye(e,m):new ge(e,m);const g=m?[f,o]:d,y=this.makeTensorInfo(g,s),b=this.texData.get(y.dataId);b.usage=m?u.PIXELS:u.UPLOAD,b.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),o,f,a);const x=this.runWebGLProgram(i,[y],s,[[f,o]],!0),w=this.texData.get(x.dataId);t.texShape=w.texShape,t.isPacked=w.isPacked,t.usage=w.usage,(0,r.OBj)().get("ENGINE_COMPILE_ONLY")?this.disposeData(x.dataId):(t.texture=w.texture,t.values=null,this.texData.delete(x.dataId)),this.disposeIntermediateTensorInfo(y),c&&(this.uploadWaitMs+=r.D5U.now()-h)}else{const e=this.acquireTexture(d,o,s,l);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*r.D5U.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await(0,r.glt)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw b(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:s,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:o}=ue(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=s,e.outShapeLocation=a,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:s,height:a,width:i,channels:o}=e,u=(0,r.SRH)().backend;if(!u.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=u.writeTexture(s,t,n,a,i,o);return(0,r.SRH)().makeTensorFromDataId(l,t,n,u)}}Zt.nextDataId=0;const Jt="4.10.0";r.C2$.isBrowser()&&(0,r.jqO)("webgl",(()=>new Zt),2);const en="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class tn{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=ce(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const nn="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class rn{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;this.enableShapeUniforms=ce(a);let i="";if(s)if(0===a||1===r.D5U.sizeFromShape(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(i=`\n          ${re(a)} coords = getOutputCoords();\n        `,1===a)i+=this.enableShapeUniforms?"\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=Tt("coords",a);i+=this.enableShapeUniforms?`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function sn(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const an={kernelName:r.iJz,backendName:"webgl",kernelFunc:sn};function on(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=sn({inputs:{x:r},backend:n}),u=sn({inputs:{x:s},backend:n});return i.complexTensorInfos={real:o,imag:u},a}const un={kernelName:r.Zz9,backendName:"webgl",kernelFunc:on},ln="return (a < 0.) ? b * a : a;",cn="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const hn={kernelName:r.J$2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{alpha:i}=s,o=n.makeTensorInfo([],"float32",r.D5U.createScalarValue(i,"float32")),u=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new rn(cn,a.shape,o.shape):new tn(ln,a.shape,o.shape),l=n.runWebGLProgram(u,[a,o],"float32");return n.disposeIntermediateTensorInfo(o),l}},pn="return (a < 0.) ? b * a : a;",dn="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const fn={kernelName:r.o0g,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s,alpha:a}=t,i=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new rn(dn,s.shape,a.shape):new tn(pn,s.shape,a.shape);return n.runWebGLProgram(i,[s,a],"float32")}},mn="if (isnan(x)) return x;";function gn({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:a,backend:i})=>{const{x:o}=a,u=i,l=s||o.dtype;if(u.shouldExecuteOnCPU([o])&&null!=n){const e=u.texData.get(o.dataId),t=n(e.values,l);return u.makeTensorInfo(o.shape,l,t)}let c;return c=(0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new Xt(o.shape,t):new Rt(o.shape,e),u.runWebGLProgram(c,[o],l)}}function yn({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:a,dtype:i}){return({inputs:o,backend:u})=>{const{a:l,b:c}=o,h=u;if(s&&"complex64"===l.dtype){const t=h.texData.get(l.dataId),n=h.texData.get(c.dataId),[s,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,s]=t,a={dataId:n.dataId,dtype:n.dtype,shape:l.shape},i={dataId:s.dataId,dtype:s.dtype,shape:c.shape},o=new tn(e,l.shape,c.shape);return h.runWebGLProgram(o,[a,i],(0,r.x8V)(n.dtype,s.dtype))})),i=on({inputs:{real:s,imag:a},backend:h});return h.disposeIntermediateTensorInfo(s),h.disposeIntermediateTensorInfo(a),i}const p=i||(0,r.x8V)(l.dtype,c.dtype);if(("string"===l.dtype||"string"===c.dtype||h.shouldExecuteOnCPU([l,c]))&&null!=a){const e=h.texData.get(l.dataId).values,t=h.texData.get(c.dataId).values,n="string"===l.dtype?r.backend_util.fromUint8ToStringArray(e):e,s="string"===l.dtype?r.backend_util.fromUint8ToStringArray(t):t,[i,o]=a(l.shape,c.shape,n,s,p),u=h.makeTensorInfo(o,p);return h.texData.get(u.dataId).values=i,u}let d;return d=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new rn(t,l.shape,c.shape,n):new tn(e,l.shape,c.shape),h.runWebGLProgram(d,[l,c],p)}}function bn(e,t=!1){if("linear"===e)return t?Vt:Ft;if("relu"===e)return t?Gt:Lt;if("elu"===e)return t?Wt:Bt;if("relu6"===e)return t?Ht:zt;if("prelu"===e)return t?dn:pn;if("leakyrelu"===e)return t?cn:ln;if("sigmoid"===e)return t?jt:Pt;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class xn{constructor(e,t,n,r=!1,s=!1,a=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=ce(this.outputShape.length);const l=Math.ceil((r?e[1]:e[2])/2),c=r?"i * 2, rc.y":"rc.y, i * 2",h=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],d=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",m="";i&&(f=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const g=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",b="rc.x";e[0]<t[0]?y=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(b=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${f}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${y};\n        int batchB = ${b};\n        for (int i = 0; i < ${l}; i++) {\n          vec4 a = getMatrixA(batchA, ${c});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${d[0]});\n          result += (${p[1]} * ${d[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}const wn={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class vn{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=r.backend_util.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const kn="return a * b;";function In(e){const{inputs:t,backend:n}=e,{a:s,b:a}=t,i=r.backend_util.upcastType(s.dtype,a.dtype);if("complex64"===s.dtype){const e=n.texData.get(s.dataId),t=n.texData.get(a.dataId),r=new vn(wn.REAL,s.shape,a.shape),i=new vn(wn.IMAG,s.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(r,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=on({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([s,a])){const e=n.texData.get(s.dataId),t=n.texData.get(a.dataId),[r,o]=Ze(s.shape,a.shape,e.values,t.values,i),u=n.makeTensorInfo(o,i);return n.texData.get(u.dataId).values=r,u}let o;return o=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new rn(kn,s.shape,a.shape):new tn(kn,s.shape,a.shape),n.runWebGLProgram(o,[s,a],i)}const Sn={kernelName:r.wYn,backendName:"webgl",kernelFunc:In};function Nn(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{shape:i}=s,o=n,u=r.D5U.sizeFromShape(a.shape),l=r.D5U.inferFromImplicitShape(i,u),c=r.D5U.sizeFromShape(l);r.D5U.assert(u===c,(()=>`The new shape (${l}) has ${c} elements and the old shape (${a.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`));const h=o.texData.get(a.dataId);return!h.isPacked||_(a.shape,l)||null!==h.texture&&_(h.shape,l)?(o.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):function(e,t,n){const r=[C(e.shape),...$(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[C(t),...$(t)],i=new $t(a,r),o=n.runWebGLProgram(i,[s],e.dtype,[r],!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(a,l,o)}const Tn={kernelName:r.HZH,backendName:"webgl",kernelFunc:Nn};class Cn{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:a,outSize:i}=e;this.outputShape=[s,i];const o=4*Math.floor(n/4),u=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${r.D5U.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class $n{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}function En(e,t,n,s){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],s=r.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}(e.shape);let i=e;for(let r=0;r<a.length;r++){const{inSize:o,windowSize:u,outSize:l}=a[r];let c,h;c="mean"===n?0===r?new Cn({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new Cn({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new $n({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=i,i=s.runWebGLProgram(c,[i],t),h.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(h)}return i}class An{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;const r=re(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let s=0;s<e.length;s++)r[e[s]]=n[s];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class _n{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=re(this.rank),s=Nt("rc",this.rank),a=new Array(this.rank);for(let l=0;l<t.length;l++)a[t[l]]=s[l];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Dn(e,t,n){const s=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _n(e.shape,t):new An(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function Rn(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;return function(e,t,n,s){const a=e.shape.length,i=r.D5U.parseAxisParam(t,e.shape);let o=i;const u=r.backend_util.getAxesPermutation(o,a),l=null!=u;let c=e;l&&(c=Dn(e,u,s),o=r.backend_util.getInnerMostAxes(o.length,a)),r.backend_util.assertAxesAreInnerMostDims("sum",o,a);const[h,p]=r.backend_util.computeOutAndReduceShapes(c.shape,o);let d=h;n&&(d=r.backend_util.expandShapeToKeepDim(h,i));const f=r.D5U.sizeFromShape(p),m=Nn({inputs:{x:c},attrs:{shape:[r.D5U.sizeFromShape(e.shape)/f,f]},backend:s}),g=En(m,(0,r.z4k)(e.dtype),"sum",s),y=Nn({inputs:{x:g},attrs:{shape:d},backend:s});return s.disposeIntermediateTensorInfo(m),s.disposeIntermediateTensorInfo(g),l&&s.disposeIntermediateTensorInfo(c),y}(a,i,o,n)}const On={kernelName:r.GBy,backendName:"webgl",kernelFunc:Rn};function Fn(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=new Array(s.shape.length);for(let l=0;l<o.length;l++)o[l]=s.shape[a[l]];let u;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId),t=It(e.values,s.shape,s.dtype,a,o);u=i.makeTensorInfo(o,s.dtype);i.texData.get(u.dataId).values=t}else u=Dn(s,a,i);return u}const Mn={kernelName:r.G3Y,backendName:"webgl",kernelFunc:Fn},Bn=1e3;function Ln({a:e,b:t,transposeA:n,transposeB:s,backend:a,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:u=0,activation:l=null}){const c=e.shape.length,h=t.shape.length,p=n?e.shape[c-2]:e.shape[c-1],d=s?t.shape[h-1]:t.shape[h-2],f=n?e.shape[c-1]:e.shape[c-2],m=s?t.shape[h-2]:t.shape[h-1],g=e.shape.slice(0,-2),y=t.shape.slice(0,-2),b=r.D5U.sizeFromShape(g),x=r.D5U.sizeFromShape(y),w=r.Jyw.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,m]);r.D5U.assert(p===d,(()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`));const v=n?[b,p,f]:[b,f,p],k=s?[x,m,d]:[x,d,m],I=Nn({inputs:{x:e},backend:a,attrs:{shape:v}}),S=Nn({inputs:{x:t},backend:a,attrs:{shape:k}}),N=[I,S],T=Math.max(b,x),C=n?I.shape[1]:I.shape[2],$=null!=i,E=null!=o,A="leakyrelu"===l,_=null!=l?bn(l,!0):null;let D;if((1===f||1===m)&&C>Bn&&!1===($||E||A||null!=_)){let e=I,t=S;n&&(e=Fn({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),N.push(e)),s&&(t=Fn({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),N.push(t));const r=1===m;let i=e;1!==m&&(i=Nn({inputs:{x:e},backend:a,attrs:{shape:[T,C,1]}}),N.push(i));const o=1===m?2:1;let u=t;r&&(u=Nn({inputs:{x:t},backend:a,attrs:{shape:[T,1,C]}}),N.push(u));const l=In({inputs:{a:i,b:u},backend:a});D=Rn({inputs:{x:l},backend:a,attrs:{axis:o,keepDims:!0}}),N.push(l)}else{const l=(0,r.x8V)(e.dtype,t.dtype),c=new xn(v,k,[T,f,m],n,s,$,_,E,A),h=[I,S];if(null!=i&&h.push(i),E&&h.push(o),A){const e=a.makeTensorInfo([],"float32",r.D5U.createScalarValue(u,"float32"));h.push(e),N.push(e)}D=a.runWebGLProgram(c,h,l)}const R=Nn({inputs:{x:D},backend:a,attrs:{shape:w}});N.push(D);for(const r of N)a.disposeIntermediateTensorInfo(r);return R}const zn={kernelName:r.usg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return Ln({a:s,b:a,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},Un="return abs(x);";const Pn={kernelName:r.SYM,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const e=n.texData.get(s.dataId),t=lt(e.values);return n.makeTensorInfo(s.shape,s.dtype,t)}let a;return a=(0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Xt(s.shape,Un):new Rt(s.shape,Un),n.runWebGLProgram(a,[s],s.dtype)}},Vn=gn({opSnippet:Ot+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Wn={kernelName:r.VGw,backendName:"webgl",kernelFunc:Vn},Gn=gn({opSnippet:Ot+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Hn={kernelName:r.SpW,backendName:"webgl",kernelFunc:Gn},jn="return a + b;",Xn=yn({opSnippet:jn,packedOpSnippet:jn,supportsComplex:!0,cpuKernelImpl:Ae}),qn={kernelName:r.mm_,backendName:"webgl",kernelFunc:Xn};class Kn{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class Yn{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const Qn={kernelName:r.Xze,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,a=n;if(1===a.length)return sn({inputs:{x:a[0]},backend:s});if(a.length>(0,r.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:s}),r=e({inputs:a.slice(t),backend:s});return e({inputs:[n,r],backend:s})}const i=a.map((e=>e.dtype)).reduce(((e,t)=>(0,r.x8V)(e,t))),o=a.map((e=>e.shape)),u=(0,r.OBj)().getBool("WEBGL_PACK")?new Yn(a[0].shape,o):new Kn(a[0].shape,o);return s.runWebGLProgram(u,a,i)}};const Zn={kernelName:r.oT6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,u=a.shape.length,l=r.D5U.parseAxisParam(i,a.shape);let c=l;const h=r.backend_util.getAxesPermutation(c,u);let p=a;null!=h&&(p=Fn({inputs:{x:a},backend:n,attrs:{perm:h}}),c=r.backend_util.getInnerMostAxes(c.length,u)),r.backend_util.assertAxesAreInnerMostDims("all",c,u);const[d,f]=r.backend_util.computeOutAndReduceShapes(p.shape,c),m=Nn({inputs:{x:p},backend:n,attrs:{shape:[-1,r.D5U.sizeFromShape(f)]}}),g=En(m,m.dtype,"all",n);let y;if(o){y=Nn({inputs:{x:g},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(d,l)}})}else y=Nn({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),y}};const Jn={kernelName:r.IKK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,u=a.shape.length,l=r.D5U.parseAxisParam(i,a.shape);let c=l;const h=r.backend_util.getAxesPermutation(c,u);let p=a;null!=h&&(p=Fn({inputs:{x:a},backend:n,attrs:{perm:h}}),c=r.backend_util.getInnerMostAxes(c.length,u)),r.backend_util.assertAxesAreInnerMostDims("any",c,u);const[d,f]=r.backend_util.computeOutAndReduceShapes(p.shape,c),m=Nn({inputs:{x:p},backend:n,attrs:{shape:[-1,r.D5U.sizeFromShape(f)]}}),g=En(m,m.dtype,"any",n);let y;if(o){y=Nn({inputs:{x:g},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(d,l)}})}else y=Nn({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),y}};class er{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${"max"===t?">":"<"} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class tr{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,r.D5U.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=Math.ceil(e[e.length-1]/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=re(o),l=Tt("coords",o);let c,h;if(1===a){h=o+1;const e=re(h);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else h=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),d="."+p[h-1],f=p.map((e=>"int "+e)),m=Tt("sourceLocR",h-1).concat("inIdx.r"),g=Tt("sourceLocG",h-1).concat("inIdx.g"),y=Tt("sourceLocB",h-1).concat("inIdx.b"),b=Tt("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=s?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function nr(e,t,n,s=null){let a=t.shape[0],i=t.shape[1];null!=s&&(a=s.shape[0],i=s.shape[1]);const o=r.backend_util.computeOptimalWindowSize(i),u={windowSize:o,inSize:i,batchSize:a,outSize:Math.ceil(i/o)},l=new er(u,n,null==s),c=[t];null!=s&&c.push(s);const h=e.runWebGLProgram(l,c,"int32");if(1===h.shape[1])return h;const p=nr(e,t,n,h);return e.disposeIntermediateTensorInfo(h),p}function rr(e,t,n,s=null){const a=null!=s?s.shape:t.shape,i=r.backend_util.computeOptimalWindowSize(a[a.length-1]),o=new tr(a,i,n,null==s),u=e.runWebGLProgram(o,null==s?[t]:[t,s],"int32");if(u.shape.length===t.shape.length){const r=rr(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function sr(e,t,n,s){const a=[n];if(r.backend_util.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),a,t.shape.length),!(0,r.OBj)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],i=e.texData.get(t.dataId);let o=t;null!==i&&i.isPacked&&(o=e.unpackTensor(t),n.push(o));const[u,l]=r.backend_util.computeOutAndReduceShapes(o.shape,a),c=r.D5U.sizeFromShape(l),h=Nn({inputs:{x:o},backend:e,attrs:{shape:[-1,c]}});n.push(h);const p=nr(e,h,s);n.push(p);const d=Nn({inputs:{x:p},backend:e,attrs:{shape:u}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return rr(e,t,s)}const ar={kernelName:r.sJF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i}=s;let o=r.D5U.parseAxisParam(i,a.shape);const u=r.backend_util.getAxesPermutation(o,a.shape.length);let l=a;const c=[];null!=u&&(l=Fn({inputs:{x:a},backend:n,attrs:{perm:u}}),c.push(l),o=r.backend_util.getInnerMostAxes(o.length,l.shape.length)),r.backend_util.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);const h=sr(n,l,o[0],"max");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}};const ir={kernelName:r.aJk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i}=s;let o=r.D5U.parseAxisParam(i,a.shape);const u=r.backend_util.getAxesPermutation(o,a.shape.length);let l=a;const c=[];null!=u&&(l=Fn({inputs:{x:a},backend:n,attrs:{perm:u}}),c.push(l),o=r.backend_util.getInnerMostAxes(o.length,l.shape.length)),r.backend_util.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);const h=sr(n,l,o[0],"min");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},or=gn({opSnippet:Ot+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),ur={kernelName:r.M2y,backendName:"webgl",kernelFunc:or},lr=gn({opSnippet:Ot+"return log(x + sqrt(x * x + 1.0));"}),cr={kernelName:r.qw7,backendName:"webgl",kernelFunc:lr},hr=gn({opSnippet:Ot+"\n  return atan(x);\n"}),pr={kernelName:r.jMg,backendName:"webgl",kernelFunc:hr},dr=yn({opSnippet:en+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+nn+"\n  return result;\n"}),fr={kernelName:r.QCc,backendName:"webgl",kernelFunc:dr},mr=gn({opSnippet:Ot+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),gr={kernelName:r.Oyi,backendName:"webgl",kernelFunc:mr};class yr{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t;let m="0.0";if(f||(m="-1.0 / 1e-20"),n){return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${">="} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`:`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let g=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(g="avgValue / max(count, 1.0)");const y=4*Math.floor(a/4),b=a%4,x=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${m};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${m});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${y}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${x}\n          }\n\n          int xC = xCCorner + ${y};\n          if (${1===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${x}\n          } else if (${2===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${x}\n          } else if (${3===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${x}\n          }\n        }\n        setOutput(${g});\n      }\n    `}}class br{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${">="} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / max(count, 1.0)");const v=4*Math.floor(a/4),k=a%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n        }\n        setOutput(${w});\n      }\n    `}}const xr={kernelName:r.JhU,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;L(a,"avgPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=s;r.D5U.assert(r.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=r.backend_util.computePool2DInfo(a.shape,i,o,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&r.D5U.arraysEqual(c.inShape,c.outShape))return sn({inputs:{x:a},backend:n});const h=new yr(c,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}};const wr={kernelName:r._k9,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l,dataFormat:c}=s,h=r.backend_util.computePool3DInfo(a.shape,i,o,[1,1,1],u,l,c),p=new br(h,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}};class vr{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.effectiveFilterHeight,n=e.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n      const float avgMultiplier = float(${1/(e.filterHeight*e.filterWidth)});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t};\n            wR += ${e.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${n};\n            wC+= ${e.dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class kr{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.effectiveFilterDepth,n=e.effectiveFilterHeight,r=e.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n      const float avgMultiplier = float(${1/(e.filterDepth*e.filterHeight*e.filterWidth)});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${t};\n            wD += ${e.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${e.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${n};\n              wR += ${e.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${r};\n                wC += ${e.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Ir={kernelName:r.IMb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:i}=t,o=i,{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=s,p=r.backend_util.computePool3DInfo(o.shape,u,l,[1,1,1],c,h),d=new kr(p);return n.runWebGLProgram(d,[a],o.dtype)}};const Sr={kernelName:r.ROF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:i}=t,o=i;L([a,i],"avgPoolGrad");const{filterSize:u,strides:l,pad:c}=s,h=r.backend_util.computePool2DInfo(o.shape,u,l,1,c),p=new vr(h);return n.runWebGLProgram(p,[a],o.dtype)}};const Nr={kernelName:r.XLW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return Ln({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class Tr{constructor(e,t,n,s,a,i){this.outputShape=[],this.variableNames=["x","mean","variance"],r.backend_util.assertAndGetBroadcastShape(e,t),r.backend_util.assertAndGetBroadcastShape(e,n);let o="0.0";null!=s&&(r.backend_util.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="1.0";null!=a&&(r.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Cr{constructor(e,t,n,s,a,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],r.backend_util.assertAndGetBroadcastShape(e,t),r.backend_util.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";null!=s&&(r.backend_util.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=a&&(r.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const $r={kernelName:r.sHE,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,mean:a,variance:i,offset:o,scale:u}=e;r.D5U.assert(a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),r.D5U.assert(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),r.D5U.assert(null==u||a.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const c=[s,a,i];let h=null;null!=o&&(h=o.shape,c.push(o));let p=null;null!=u&&(p=u.shape,c.push(u));const d=(0,r.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new Cr(s.shape,a.shape,i.shape,h,p,l):new Tr(s.shape,a.shape,i.shape,h,p,l);return t.runWebGLProgram(d,c,c[0].dtype)}};class Er{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=re(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return Ar.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${Ar[t]} = start[${t}] + coords.${Ar[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const Ar=["x","y","z","w","u","v"];class _r{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=re(this.rank),n=Tt("coords",this.rank),r=Tt("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function Dr(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{begin:i,size:o}=s,[u,l]=r.kuN.parseSliceParams(a,i,o);if(r.kuN.assertParamsValid(a,u,l),0===r.D5U.sizeFromShape(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=ct(e.values,u,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}const{isPacked:c}=n.texData.get(a.dataId),h=r.kuN.isSliceContinous(a.shape,u,l);if(c||!h){const e=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _r(l):new Er(l);return n.runWebGLProgram(e,[a],a.dtype,[u])}return n.uploadToGPU(a.dataId),function(e,t,n,s){const a=s.texData.get(e.dataId),i=s.makeTensorInfo(n,e.dtype),o=s.texData.get(i.dataId);Object.assign(o,a),o.refCount=1,o.shape=n,o.dtype=e.dtype;let u=r.kuN.computeFlatOffset(t,r.D5U.computeStrides(e.shape));a.slice&&(u+=a.slice.flatOffset),o.slice={flatOffset:u,origDataId:a.slice&&a.slice.origDataId||e.dataId};const l=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,l+1),i}(a,u,l,n)}const Rr={kernelName:r.p2w,backendName:"webgl",kernelFunc:Dr},Or={kernelName:r.zws,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:i,crops:o}=s;r.D5U.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const u=i.reduce(((e,t)=>e*t)),l=r.backend_util.getReshaped(a.shape,i,u),c=r.backend_util.getPermuted(l.length,i.length),h=r.backend_util.getReshapedPermuted(a.shape,i,u),p=r.backend_util.getSliceBeginCoords(o,i.length),d=r.backend_util.getSliceSize(h,o,i.length),f=[],m=Nn({inputs:{x:a},backend:n,attrs:{shape:l}}),g=Fn({inputs:{x:m},backend:n,attrs:{perm:c}}),y=Nn({inputs:{x:g},backend:n,attrs:{shape:h}}),b=Dr({inputs:{x:y},backend:n,attrs:{begin:p,size:d}});return f.push(m),f.push(g),f.push(y),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}};const Fr={kernelName:r.zvY,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),u=n.readSync(a.dataId),l=_e(o,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,l)}};const Mr={kernelName:r.hCO,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:s,b:a}=t,i=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=(0,r.OBj)().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([s,a])||1===o){const e=n.texData.get(s.dataId).values,t=n.texData.get(a.dataId).values,[r,i]=Re(s.shape,a.shape,e,t,s.dtype),o=n.makeTensorInfo(i,s.dtype);return n.texData.get(o.dataId).values=r,o}let u;return u=i?new rn("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",s.shape,a.shape,!1):new tn("\n  return float(int(a.r) & int(b.r));\n",s.shape,a.shape),n.runWebGLProgram(u,[s,a],s.dtype)}};const Br={kernelName:r.eEB,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:a}=t,i=n.readSync(s.dataId),o=n.readSync(a.dataId),u=r.backend_util.assertAndGetBroadcastShape(Array.from(i),Array.from(o));return n.makeTensorInfo([u.length],"int32",Int32Array.from(u))}},Lr=yn({opSnippet:"return float(a != b);",cpuKernelImpl:et,dtype:"bool"}),zr={kernelName:r.yQU,backendName:"webgl",kernelFunc:Lr};function Ur(e){const{inputs:t,backend:n}=e,{input:r}=t;return sn({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const Pr={kernelName:r.xJR,backendName:"webgl",kernelFunc:Ur},Vr="return float(int(x));";const Wr={kernelName:r.RFZ,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s,attrs:a}=t,{x:i}=n,{dtype:o}=a;if("complex64"===o){if("complex64"===i.dtype)return sn({inputs:{x:i},backend:s});const t=r.lls(i.shape),n=e({inputs:{x:i},backend:s,attrs:{dtype:"float32"}}),a=on({inputs:{real:n,imag:t},backend:s});return t.dispose(),s.disposeIntermediateTensorInfo(n),a}if("complex64"===i.dtype){const t=Ur({inputs:{input:i},backend:s}),n=e({inputs:{x:t},backend:s,attrs:{dtype:o}});return s.disposeIntermediateTensorInfo(t),n}if(!r.D5U.hasEncodingLoss(i.dtype,o)){const e=sn({inputs:{x:i},backend:s});return{dataId:e.dataId,shape:e.shape,dtype:o}}if(s.shouldExecuteOnCPU([i])){const e=s.texData.get(i.dataId).values,[t,n,r]=Oe(e,i.shape,i.dtype,o);return s.makeTensorInfo(t,n,r)}if("int32"===o)return function(e,t){const n=new Rt(e.shape,Vr),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,s);if("bool"===o){const e=s.makeTensorInfo([],"bool",r.D5U.getTypedArrayFromDType("bool",1)),t=Lr({inputs:{a:i,b:e},backend:s});return s.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${o}`)}},Gr="return ceil(x);",Hr=gn({opSnippet:Gr,packedOpSnippet:Gr,cpuKernelImpl:Fe}),jr={kernelName:r.gJX,backendName:"webgl",kernelFunc:Hr};class Xr{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class qr{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const Kr={kernelName:r.xnO,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{clipValueMin:i,clipValueMax:o}=s;let u;return u=(0,r.OBj)().getBool("WEBGL_PACK_CLIP")?new qr(a.shape):new Xr(a.shape),n.runWebGLProgram(u,[a],a.dtype,[[i],[o]])}};class Yr{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function Qr(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const Zr={kernelName:r.yj2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new Yr(r.shape),i=[Qr(r,s.complexTensorInfos.real),Qr(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class Jr{constructor(e){this.outputShape=[],this.outputShape=r.backend_util.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let r=1;r<t.length;r++)t[r]=t[r-1]+e[r][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let r=1;r<t.length;r++){n.push(`else if (yC < ${t[r]}) setOutput(getT${r}(yR, yC-${t[r-1]}));`)}n.push(`else setOutput(getT${t.length}(yR, yC-${t[t.length-1]}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class es{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=r.backend_util.computeOutShape(e,t);const n=this.outputShape,s=n.length,a=re(s),i=Tt("coords",s),o=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map(((e,t)=>`T${t}`));const u=new Array(e.length-1);u[0]=e[0][t];for(let r=1;r<u.length;r++)u[r]=u[r-1]+e[r][t];const l=o[t],c=o.slice(-2),h=o.join();let p=`if (${l} < ${u[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${c.join()}));\n        }`;for(let r=1;r<u.length;r++){const e=u[r-1];p+=`\n        if (${l} < ${u[r]}  && ${l} >= ${u[r-1]}) {\n          return getChannel(\n            getT${r}(${ts(o,l,e)}),\n            vec2(${ts(c,l,e)}));\n        }`}const d=u[u.length-1];p+=`\n        return getChannel(\n          getT${u.length}(${ts(o,l,d)}),\n          vec2(${ts(c,l,d)}));`,this.userCode=`\n      float getValue(${o.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[s-1]} = ${i[s-1]} + 1;\n        if (${i[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[s-2]} = ${i[s-2]} + 1;\n        if (${i[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[s-1]} = ${i[s-1]} - 1;\n        if (${i[s-2]} < ${n[s-2]} &&\n            ${i[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function ts(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function ns(e){const{inputs:t,backend:n}=e,{input:r}=t;return sn({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const rs={kernelName:r.J_u,backendName:"webgl",kernelFunc:ns};function ss(e,t,n){const s=e[0].dtype;if("complex64"===s){const r=e.map((e=>Ur({inputs:{input:e},backend:n}))),s=e.map((e=>ns({inputs:{input:e},backend:n}))),a=ss(r,t,n),i=ss(s,t,n),o=on({inputs:{real:a,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===s&&(a=!0),a){const a=e.map((e=>{const s=r.D5U.sizeFromShape(e.shape.slice(t));return Nn({inputs:{x:e},backend:n,attrs:{shape:[-1,s]}})})),i=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=r.backend_util.computeOutShape(a.map((e=>e.shape)),1),u=Me(i,o,s,1===a[0].shape[0]),l=r.backend_util.computeOutShape(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,s,u);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const i=e.filter((e=>r.D5U.sizeFromShape(e.shape)>0)),o=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(1===i.length){const t=o?new Rt(e[0].shape,Ut):new Xt(e[0].shape,Ut);return n.runWebGLProgram(t,e,s)}const u=(0,r.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>u){const e=[];for(let s=0;s<i.length;s+=u){const r=i.slice(s,s+u);e.push(ss(r,t,n))}const r=ss(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(o){const e=new es(i.map((e=>e.shape)),t);return n.runWebGLProgram(e,i,s)}const{tensors2D:l,outShape:c}=function(e,t,n){const s=r.backend_util.computeOutShape(e.map((e=>e.shape)),t),a=e.map((e=>Nn({inputs:{x:e},attrs:{shape:[-1,r.D5U.sizeFromShape(e.shape.slice(t))]},backend:n})));return{tensors2D:a,outShape:s}}(i,t,n),h=new Jr(l.map((e=>e.shape))),p=n.runWebGLProgram(h,l,s);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=Nn({inputs:{x:p},attrs:{shape:c},backend:n});return n.disposeIntermediateTensorInfo(p),d}function as(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s,i=r.D5U.parseAxisParam(a,t[0].shape)[0],o=t.map((e=>e.shape));r.backend_util.assertParamsConsistent(o,i);const u=r.backend_util.computeOutShape(t.map((e=>e.shape)),i);if(0===r.D5U.sizeFromShape(u))return n.makeTensorInfo(u,t[0].dtype,[]);const l=t.filter((e=>r.D5U.sizeFromShape(e.shape)>0));return 1===l.length?sn({inputs:{x:l[0]},backend:n}):ss(l,i,n)}const is={kernelName:r.Eh3,backendName:"webgl",kernelFunc:as};class os{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",w="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class us{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ls{constructor(e,t=!1,n=null,s=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ce(this.outputShape.length);const i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,h=c;let p="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let r=0;r<c;r++)p+=`\n           vec4 xTexelC${2*r};\n           int xTexelC${2*r}Ready;\n           vec4 xTexelC${2*r+1};\n           int xTexelC${2*r+1}Ready;\n           vec4 xC${r};`;p+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let r=0;r<c;r++)p+=`\n           xTexelC${2*r} = vec4(0.0);\n           xTexelC${2*r}Ready = 0;\n           xTexelC${2*r+1} = vec4(0.0);\n           xTexelC${2*r+1}Ready = 0;\n           xC${r} = vec4(0.0);`;p+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let g=0;g<(h+1)/2;g++){const t=2*g;if(p+=`\n           xC = xCCorner + ${t*u};\n           `,1===o){if(t<c&&(i%2===1?(p+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n               `,p+=1===u&&t>0?`\n                 xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                   } else {\n                     xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                   }\n                   `):p+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xC${t} = xTexelC${t};\n                 `,t+1<c)){const e=i%2===0?r.D5U.nearestLargerEven(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(p+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                     xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${t+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${t+1}Ready = 1;\n                   }\n                   `,p+=u>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                     } else {\n                      xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                     }\n                     `:`\n                     xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                     `):p+=1===e?`\n                     xC${t+1} = xTexelC${t};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                       xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${t+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${t+1}Ready = 1;\n                     }\n\n                     xC${t+1} = xTexelC${t+1};\n                     `}}else t<c&&(i%2===1?(p+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n               `,t+1<c&&(p+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                 `)):(p+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(\n                   xTexelC${t}.xy, xTexelC${t+1}.xy);\n               `,t+1<c&&(p+=`\n                   xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                 `)));t<c&&(p+=`\n             wTexel = getW(r, ${t}, d1, d2);\n             dotProd += xC${t}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${t}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,t+1<c&&(p+=`\n               wTexel = getW(r, ${t+1}, d1, d2);\n               dotProd += xC${t+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${t+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}p+="\n     }\n   ",p+="\n     }\n   ",p+="\n     }\n   ";let d="",f="";n&&(d=s?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:a?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${p}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${m}\n         ${f}\n         setOutput(result);\n       }\n     `}}class cs{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=ce(this.outputShape.length);const{dataFormat:n}=t,r=U(),s="channelsLast"===n,a=s?1:2,i=s?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let l=0;l<=1;l++)for(let e=0;e<=1;e++)u+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${l};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*l+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*l+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function hs(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function ps({x:e,filter:t,convInfo:n,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape,c=s.texData.get(e.dataId),h=n.inChannels,p=l[0]*l[1]*l[2],d=n.outChannels,f="channelsLast"===n.dataFormat;let m;const g=[];if(null!=i){const e=hs(i.shape,f);null!=e&&(i=Nn({inputs:{x:i},backend:s,attrs:{shape:e}}),g.push(i))}if(null!=a){const e=hs(a.shape,f);null!=e&&(a=Nn({inputs:{x:a},backend:s,attrs:{shape:e}}),g.push(a))}if(!((1===p||1===d)&&h>Bn)&&c.isPacked&&f&&null!=c.texture&&l[2]%2!==0&&r.D5U.arraysEqual(c.shape.slice(-3),l.slice(-3))){const h={dataId:e.dataId,shape:[1,l[0]*l[1]*(l[2]+1),n.inChannels],dtype:e.dtype},p=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,r.D5U.assert(_(c.shape,h.shape),(()=>`packed reshape ${c.shape} to ${h.shape} isn't free`));const d=Nn({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(d);const f=Ln({a:h,b:d,backend:s,transposeA:false,transposeB:false,bias:a,activation:u,preluActivationWeights:i,leakyreluAlpha:o}),y=s.texData.get(f.dataId);r.D5U.assert(y.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=p,y.shape=n.outShape,m=sn({inputs:{x:f},backend:s}),m.shape=n.outShape,g.push(f)}else{const r=n.outHeight*n.outWidth,l=Nn({inputs:{x:e},backend:s,attrs:{shape:f?[n.batchSize,r,n.inChannels]:[n.batchSize,n.inChannels,r]}}),c=Nn({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=Ln({a:f?l:c,b:f?c:l,transposeA:!f,transposeB:false,backend:s,bias:a,activation:u,preluActivationWeights:i,leakyreluAlpha:o});m=Nn({inputs:{x:h},backend:s,attrs:{shape:n.outShape}}),g.push(l),g.push(c),g.push(h)}for(const r of g)s.disposeIntermediateTensorInfo(r);return m}function ds({x:e,filter:t,convInfo:n,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const{filterWidth:l,filterHeight:c,inChannels:h,outWidth:p,outHeight:d,dataFormat:f}=n,m="channelsLast"===f,g=l*c*h,y=d*p,b=[n.batchSize,g,y],x=[];if(null!=i){const e=hs(i.shape,m);null!=e&&(i=Nn({inputs:{x:i},backend:s,attrs:{shape:e}}),x.push(i))}if(null!=a){const e=hs(a.shape,m);null!=e&&(a=Nn({inputs:{x:a},backend:s,attrs:{shape:e}}),x.push(a))}const w=Nn({inputs:{x:t},backend:s,attrs:{shape:[1,g,r.D5U.sizeFromShape(t.shape)/g]}});x.push(w);const v=new cs(b,n),k=s.runWebGLProgram(v,[e],"float32",[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]]),I=Nn({inputs:{x:k},backend:s,attrs:{shape:b}});x.push(k),x.push(I);const S=null!=a,N=null!=i,T="leakyrelu"===u,C=u?bn(u,!0):null,$=new xn(m?I.shape:w.shape,m?w.shape:I.shape,m?[n.batchSize,y,n.outChannels]:[n.batchSize,n.outChannels,y],!0,!1,S,C,N,T),E=m?[I,w]:[w,I];if(a&&E.push(a),N&&E.push(i),T){const e=s.makeTensorInfo([],"float32",r.D5U.createScalarValue(o,"float32"));E.push(e),x.push(e)}const A=s.runWebGLProgram($,E,"float32"),_=Nn({inputs:{x:A},backend:s,attrs:{shape:n.outShape}});x.push(A);for(const r of x)s.disposeIntermediateTensorInfo(r);return _}const fs={kernelName:r.mhS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:u,dataFormat:l,dilations:c,dimRoundingMode:h}=s,p=r.backend_util.convertConv2DDataFormat(l),d=r.backend_util.computeConv2DInfo(a.shape,i.shape,o,c,u,h,!1,p);let f;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===p&&(0,r.OBj)().getBool("WEBGL_EXP_CONV")){const e=new ls(d);f=n.runWebGLProgram(e,[a,i],"float32",[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]])}else if((0,r.OBj)().getBool("WEBGL_CONV_IM2COL"))f=ds({x:a,filter:i,convInfo:d,backend:n});else{const e=new os(d);f=n.runWebGLProgram(e,[a,i],"float32")}else f=ps({x:a,filter:i,convInfo:d,backend:n});const m=Nn({inputs:{x:f},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class ms{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${"channelsLast"===e.dataFormat?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class gs{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r="channelsLast"===e.dataFormat;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${r?3:1}];\n\n        ivec2 dyCorner = ivec2(coords[${r?1:2}], coords[${r?2:3}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${r}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ys{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${e.strideDepth} - ${e.padInfo.front};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class bs{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${e.strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const xs={kernelName:r.wUP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:i}=t,{strides:o,pad:u,dataFormat:l,dimRoundingMode:c,filterShape:h}=s,p=r.backend_util.convertConv2DDataFormat(l),d=r.backend_util.computeConv2DInfo(a.shape,h,o,1,u,c,!1,p),f=new ms(d);return n.runWebGLProgram(f,[a,i],"float32")}};class ws{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=ce(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const vs={kernelName:r.wm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{inputShape:o,strides:u,pad:l,dataFormat:c,dimRoundingMode:h}=s,p=r.backend_util.convertConv2DDataFormat(c),d=r.backend_util.computeConv2DInfo(o,i.shape,u,1,l,h,!1,p);if((0,r.OBj)().getBool("WEBGL_PACK")&&"channelsLast"===p){const e=[[d.strideHeight,d.strideWidth]],t=new ws(d);return n.runWebGLProgram(t,[a,i],"float32",e)}{const e=new gs(d);return n.runWebGLProgram(e,[a,i],"float32")}}};const ks={kernelName:r.x12,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:u,dilations:l}=s,c=r.backend_util.computeConv3DInfo(a.shape,i.shape,o,l,u),h=new us(c);return n.runWebGLProgram(h,[a,i],"float32")}};const Is={kernelName:r.o2y,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:i}=t,{strides:o,pad:u,filterShape:l}=s,c=r.backend_util.computeConv3DInfo(a.shape,l,o,1,u),h=new ys(c);return n.runWebGLProgram(h,[a,i],"float32")}};const Ss={kernelName:r.ik2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{pad:o,strides:u,inputShape:l}=s,c=r.backend_util.computeConv3DInfo(l,i.shape,u,1,o),h=new bs(c);return n.runWebGLProgram(h,[a,i],"float32")}},Ns=gn({opSnippet:mn+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${nn}\n  return result;\n`}),Ts={kernelName:r.mc4,backendName:"webgl",kernelFunc:Ns},Cs=gn({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),$s={kernelName:r.TR1,backendName:"webgl",kernelFunc:Cs};class Es{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const p="bilinear"===r?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const As={kernelName:r.VcC,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new Es(s.shape,a.shape,o,u,l);return n.runWebGLProgram(c,[s,a,i],"float32")}};var _s;(function(e){e.Prod="*",e.Sum="+"})(_s||(_s={}));class Ds{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,a=n?this.op===_s.Prod?"1.0":"0.0":`getX(${Rs(s,"coords",this.op)})`,i=this.outputShape[this.outputShape.length-1];let o="",u="";n?(o=r?"end != "+(i-1):"end != 0",u=r?"end + 1":"end - 1"):(o=r?`end + pow2 < ${i}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${re(s)} coords = getOutputCoords();\n        int end = ${Os(s,"coords",this.op)};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${o}) {\n          int idx = ${u};\n          ${Os(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${Rs(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function Rs(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function Os(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function Fs(e,t,n,s,a,i){const o=t.shape.length,u=r.backend_util.getAxesPermutation([s],o);let l=t;null!=u&&(l=Fn({inputs:{x:t},backend:n,attrs:{perm:u}}));const c=r.backend_util.getInnerMostAxes(1,o)[0];if(c!==o-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const h=l.shape[c];let p=sn({inputs:{x:l},backend:n});for(let r=0;r<=Math.ceil(Math.log2(h))-1;r++){const t=new Ds(e,l.shape,!1,i),s=p;p=n.runWebGLProgram(t,[p],p.dtype,[[r]]),n.disposeIntermediateTensorInfo(s)}if(a){const t=new Ds(e,l.shape,a,i),r=p;p=n.runWebGLProgram(t,[p],p.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=u){const e=Fn({inputs:{x:p},backend:n,attrs:{perm:r.backend_util.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(l),e}return p}const Ms={kernelName:r.Byc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return Fs(_s.Prod,s,n,a,i,o)}};const Bs={kernelName:r.iHb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return Fs(_s.Sum,s,n,a,i,o)}};const Ls={kernelName:r.QRR,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=_e(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=De(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class zs{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Us={kernelName:r.T0n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r,o=s.shape[0],u=("NHWC"===i?s.shape[1]:s.shape[2])*a,l=("NHWC"===i?s.shape[2]:s.shape[3])*a,c=("NHWC"===i?s.shape[3]:s.shape[1])/(a*a),h=new zs("NHWC"===i?[o,u,l,c]:[o,c,u,l],a,i);return n.runWebGLProgram(h,[s],s.dtype)}};class Ps{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ce(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class Vs{constructor(e,t=!1,n=null,s=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ce(this.outputShape.length);const i=e.outChannels/e.inChannels,o=e.padInfo.left,u=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,h=e.filterWidth,p=h;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let r=0;r<h;r++)d+=`\n          vec4 xTexelC${2*r};\n          int xTexelC${2*r}Ready;\n          vec4 xTexelC${2*r+1};\n          int xTexelC${2*r+1}Ready;\n          vec4 xC${r};`;d+=`\n    for (int r = 0; r < ${c}; r++) {\n      `;for(let r=0;r<h;r++)d+=`\n          xTexelC${2*r} = vec4(0.0);\n          xTexelC${2*r}Ready = 0;\n          xTexelC${2*r+1} = vec4(0.0);\n          xTexelC${2*r+1}Ready = 0;\n          xC${r} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let y=0;y<(p+1)/2;y++){const e=2*y;if(d+=`\n          xC = xCCorner + ${e*l};\n          `,1===u){if(e<h&&(o%2===1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,d+=1===l&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<h)){const t=o%2===0?r.D5U.nearestLargerEven(l):l;l%2===0&&o%2===1||l%2!==0&&o%2!==1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,d+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):d+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<h&&(o%2===1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<h&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<h&&(d+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<h&&(d+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<h&&(d+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let f="",m="";n&&(f=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${g}\n        ${m}\n        setOutput(result);\n      }\n    `}}const Ws={kernelName:r.cie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:u,dilations:l,dimRoundingMode:c}=s;let h=l;null==h&&(h=[1,1]),r.D5U.assert(r.backend_util.eitherStridesOrDilationsAreOne(o,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${h}'`));const p=r.backend_util.computeConv2DInfo(a.shape,i.shape,o,h,u,c,!0);let d;return d=(0,r.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?new Vs(p):new Ps(p),n.runWebGLProgram(d,[a,i],"float32",[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]])}};class Gs{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${e.outChannels/e.inChannels} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Hs{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${r}; dm++) {\n              int d2 = d1 * ${r} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const js={kernelName:r.sL$,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:i}=t,{strides:o,dilations:u,pad:l,dimRoundingMode:c,filterShape:h}=s,p=r.backend_util.computeConv2DInfo(a.shape,h,o,u,l,c,!0),d=new Gs(p);return n.runWebGLProgram(d,[a,i],"float32")}};const Xs={kernelName:r.y7R,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{strides:o,dilations:u,pad:l,dimRoundingMode:c,inputShape:h}=s,p=r.backend_util.computeConv2DInfo(h,i.shape,o,u,l,c,!0),d=new Hs(p);return n.runWebGLProgram(d,[a,i],"float32")}};class qs{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const Ks={kernelName:r.$w,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,a=[...s.shape,...s.shape],i=r.D5U.sizeFromShape(s.shape),o=Nn({inputs:{x:s},backend:n,attrs:{shape:[i]}}),u=new qs(i),l=n.runWebGLProgram(u,[o],o.dtype),c=Nn({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),c}};class Ys{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const Qs={kernelName:r.p4S,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:u,dilations:l}=s,c=r.backend_util.computeDilation2DInfo(a.shape,i.shape,o,u,"NHWC",l);let h;const p=new Ys(c);h=n.runWebGLProgram(p,[a,i],"float32");const d=Nn({inputs:{x:h},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(h),d}};const Zs={kernelName:r.$g6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:a}=s,i=t,{allDims:o,summedDims:u,idDims:l}=r.backend_util.decodeEinsumEquation(a,i.length);r.backend_util.checkEinsumDimSizes(o.length,l,i);const{path:c,steps:h}=r.backend_util.getEinsumComputePath(u,l),p=h.length;let d=null,f=o.length;const m=[];for(let g=0;g<p;++g){for(const e of h[g]){const{permutationIndices:t,expandDims:s}=r.backend_util.getEinsumPermutation(f,l[e]);let a;r.backend_util.isIdentityPermutation(t)?a=i[e]:(a=Fn({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),m.push(a));const o=a.shape.slice();for(let e=0;e<s.length;++e)o.splice(s[e],0,1);r.D5U.arraysEqual(a.shape,o)||(a=Nn({inputs:{x:a},backend:n,attrs:{shape:o}}),m.push(a)),null===d?d=a:(d=In({inputs:{a:a,b:d},backend:n}),m.push(d))}g<p-1&&(c[g]>=0&&(d=Rn({inputs:{x:d},backend:n,attrs:{axis:c[g]-(o.length-f),keepDims:!1}}),m.push(d)),f--)}for(const r of m)r!==d&&n.disposeIntermediateTensorInfo(r);return d}},Js=gn({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),ea={kernelName:r.SX0,backendName:"webgl",kernelFunc:Js},ta={kernelName:r.HEU,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:s,y:a}=t,i=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new rn("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,a.shape):new tn("return (b >= 0.0) ? a : a * (b + 1.0);",s.shape,a.shape);return n.runWebGLProgram(i,[s,a],s.dtype)}},na=yn({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Be}),ra={kernelName:r.hdR,backendName:"webgl",kernelFunc:na},sa=gn({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${r.backend_util.ERF_P};\n  float a1 = ${r.backend_util.ERF_A1};\n  float a2 = ${r.backend_util.ERF_A2};\n  float a3 = ${r.backend_util.ERF_A3};\n  float a4 = ${r.backend_util.ERF_A4};\n  float a5 = ${r.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),aa={kernelName:r.Omj,backendName:"webgl",kernelFunc:sa},ia=gn({opSnippet:mn+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Le,dtype:"float32"}),oa={kernelName:r.NEP,backendName:"webgl",kernelFunc:ia};function ua(e){const{inputs:t,attrs:n,backend:s}=e,{dim:a}=n,{input:i}=t,o=i.shape.length,u=i.shape.slice();let l=a;return a<0&&(r.D5U.assert(-(o+1)<=a,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),l=o+a+1),u.splice(l,0,1),Nn({inputs:{x:i},backend:s,attrs:{shape:u}})}const la={kernelName:r.YFo,backendName:"webgl",kernelFunc:ua},ca="return exp(x) - 1.0;",ha=gn({opSnippet:ca,packedOpSnippet:ca,cpuKernelImpl:ze}),pa={kernelName:r.Y0y,backendName:"webgl",kernelFunc:ha};class da{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function fa(e,t,n){const s=n.texData.get(e.dataId),a=r.D5U.sizeFromShape(e.shape),i=e.shape[e.shape.length-1],o=Nn({inputs:{x:e},backend:n,attrs:{shape:[a/i,i]}}),u=o.shape,l=new da("real",u,t),c=new da("imag",u,t),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:u},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:u}],p=n.runWebGLProgram(l,h,"float32"),d=n.runWebGLProgram(c,h,"float32"),f=on({inputs:{real:p,imag:d},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d);const m=Nn({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}const ma={kernelName:r.vwp,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return fa(r,!1,n)}};class ga{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function ya(e){const{backend:t,attrs:n}=e,{shape:s,value:a}=n;let{dtype:i}=n;if(i=i||r.D5U.inferDtype(a),"string"===i){const e=r.D5U.getArrayFromDType(i,r.D5U.sizeFromShape(s));return e.fill(a),t.makeTensorInfo(s,i,e)}{const e=new ga(s,a);return t.runWebGLProgram(e,[],i,[[a]])}}const ba={kernelName:r.deh,backendName:"webgl",kernelFunc:ya};class xa{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const wa={kernelName:r.Uyb,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new xa(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},va="return floor(x);",ka=gn({opSnippet:va,packedOpSnippet:va,cpuKernelImpl:Ue}),Ia={kernelName:r.OR,backendName:"webgl",kernelFunc:ka},Sa=yn({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Na={kernelName:r.jeX,backendName:"webgl",kernelFunc:Sa};class Ta{constructor(e){this.variableNames=["A"];const t=U(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Ca{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=U(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const $a={kernelName:r.eBW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e;let{pixels:a}=t;const{numChannels:i}=s,o="undefined"!==typeof HTMLVideoElement&&a instanceof HTMLVideoElement,l="undefined"!==typeof HTMLImageElement&&a instanceof HTMLImageElement,[c,h]=o?[a.videoWidth,a.videoHeight]:[a.width,a.height],p=[h,c],d=[h,c,i];if(l||o){const e=(0,r.OBj)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=Ea&&e===Aa||(Aa=e,Ea=document.createElement("canvas").getContext("2d",{willReadFrequently:Aa})),Ea.canvas.width=c,Ea.canvas.height=h,Ea.drawImage(a,0,0,c,h),a=Ea.canvas}const f=n.makeTensorInfo(p,"int32");n.texData.get(f.dataId).usage=u.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),a);const m=(0,r.OBj)().getBool("WEBGL_PACK")?new Ca(d):new Ta(d),g=n.runWebGLProgram(m,[f],"int32");return n.disposeData(f.dataId),g}};let Ea,Aa=(0,r.OBj)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const _a={kernelName:r._V0,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i,bias:o,preluActivationWeights:u}=t,{strides:l,pad:c,dataFormat:h,dilations:p,dimRoundingMode:d,activation:f,leakyreluAlpha:m}=s,g=r.backend_util.convertConv2DDataFormat(h),y=r.backend_util.computeConv2DInfo(a.shape,i.shape,l,p,c,d,!1,g);let b;const x=[],w=null!=o,v=null!=u,k="leakyrelu"===f,I=()=>{const e=[a,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=Nn({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return x.push(t),t}return e};if(w&&e.push(t(o,h)),v&&e.push(t(u,h)),k){const t=n.makeTensorInfo([],"float32",r.D5U.createScalarValue(m,"float32"));e.push(t),x.push(t)}return e};if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(y.strideWidth<=2&&"channelsLast"===g&&(0,r.OBj)().getBool("WEBGL_EXP_CONV")){const e=f?bn(f,!0):null,t=new ls(y,w,e,v,k),r=[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]],s=I();b=n.runWebGLProgram(t,s,"float32",r)}else if((0,r.OBj)().getBool("WEBGL_CONV_IM2COL"))b=ds({x:a,filter:i,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});else{const e=f?bn(f,!1):null,t=new os(y,w,e,v,k),r=I();b=n.runWebGLProgram(t,r,"float32")}else b=ps({x:a,filter:i,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});const S=Nn({inputs:{x:b},backend:n,attrs:{shape:y.outShape}});return x.push(b),x.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};const Da={kernelName:r.luS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i,bias:o,preluActivationWeights:u}=t,{strides:l,pad:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s,m=[];let g=h;null==g&&(g=[1,1]),r.D5U.assert(r.backend_util.eitherStridesOrDilationsAreOne(l,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`));const y=r.backend_util.computeConv2DInfo(a.shape,i.shape,l,g,c,p,!0),b=(0,r.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels===1,x=d?bn(d,b):null,w=[a,i],v=null!=o,k=null!=u,I="leakyrelu"===d;if(v&&w.push(o),k&&w.push(u),I){const e=n.makeTensorInfo([],"float32",r.D5U.createScalarValue(f,"float32"));w.push(e),m.push(e)}let S;S=b?new Vs(y,v,x,k,I):new Ps(y,v,x,k,I);const N=n.runWebGLProgram(S,w,"float32",[[y.padInfo.top,y.padInfo.left],[y.strideHeight,y.strideWidth],[y.dilationHeight,y.dilationWidth],[y.inHeight,y.inWidth]]);return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};class Ra{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=re(n.length);let a="\n    int index;";for(let i=0;i<this.sliceDim;i++)a+=`\n          index = round(getIndices(coords[0], ${i}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};\n          flattenIndex += index * ${this.strides[i]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${a}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const Oa={kernelName:r.q1x,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:a}=t,i=a.shape,o=i[i.length-1],u=r.D5U.sizeFromShape(s.shape),[l,c,h,p]=r.backend_util.prepareAndValidate(s,a),d=Nn({inputs:{x:a},backend:n,attrs:{shape:[c,o]}}),f=Nn({inputs:{x:s},backend:n,attrs:{shape:[r.D5U.sizeFromShape(s.shape)/h,h]}});if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(s),r=Pe(e,t,s.dtype,c,o,h,p,s.shape,u);return n.makeTensorInfo(l,s.dtype,r.values)}const m=new Ra(o,p,[c,h],s.shape),g=n.runWebGLProgram(m,[f,d],f.dtype),y=Nn({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}};class Fa{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=re(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let s=0;s<e.length;s++)r.push(2===s?"index":`${n[s]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function Ma(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,indices:i}=t,{axis:o,batchDims:u}=s,l=r.D5U.parseAxisParam(o,a.shape)[0];if((0,r.OBj)().get("DEBUG")){const e=n.readSync(i.dataId),t=a.shape[l];for(let n=0;n<e.length;++n){const s=e[n];r.D5U.assert(s<=t-1&&s>=0,(()=>`GatherV2: the index value ${s} is not in [0, ${t-1}]`))}}const c=r.backend_util.segment_util.collectGatherOpShapeInfo(a,i,l,u),h=r.D5U.sizeFromShape(i.shape),p=[],d=Nn({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=Nn({inputs:{x:i},backend:n,attrs:{shape:[c.batchSize,h/c.batchSize]}});p.push(d),p.push(f);const m=[c.batchSize,c.outerSize,h/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([a,i])||"string"===a.dtype){const e=n.bufferSync(f),t=n.bufferSync(d),r=Ve(t,e,m);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c.outputShape,r.dtype,r.values)}const g=new Fa(d.shape,m),y=n.runWebGLProgram(g,[d,f],d.dtype);p.push(y);const b=Nn({inputs:{x:y},backend:n,attrs:{shape:c.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}const Ba={kernelName:r.qi_,backendName:"webgl",kernelFunc:Ma},La=yn({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:We,dtype:"bool"}),za={kernelName:r.iZT,backendName:"webgl",kernelFunc:La},Ua=yn({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:Ge}),Pa={kernelName:r.Acj,backendName:"webgl",kernelFunc:Ua};const Va={kernelName:r.Qg5,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return fa(r,!0,n)}},Wa=gn({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Ga={kernelName:r.avt,backendName:"webgl",kernelFunc:Wa},Ha=gn({opSnippet:"return float(isinf(x));",dtype:"bool"}),ja={kernelName:r.iWB,backendName:"webgl",kernelFunc:Ha},Xa=gn({opSnippet:"return float(isnan(x));",dtype:"bool"}),qa={kernelName:r.r7n,backendName:"webgl",kernelFunc:Xa},Ka=yn({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:He,dtype:"bool"}),Ya={kernelName:r.vtC,backendName:"webgl",kernelFunc:Ka},Qa=yn({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:je,dtype:"bool"}),Za={kernelName:r.CAk,backendName:"webgl",kernelFunc:Qa};const Ja={kernelName:r.e7N,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=Xe(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},ei=gn({opSnippet:mn+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:qe}),ti={kernelName:r.ZbH,backendName:"webgl",kernelFunc:ei},ni=gn({opSnippet:mn+"\n  return log(1.0 + x);\n"}),ri={kernelName:r.kU,backendName:"webgl",kernelFunc:ni},si=yn({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),ai={kernelName:r.PYm,backendName:"webgl",kernelFunc:si},ii=gn({opSnippet:"return float(!(x >= 1.0));"}),oi={kernelName:r.VfG,backendName:"webgl",kernelFunc:ii},ui=yn({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),li={kernelName:r.MZg,backendName:"webgl",kernelFunc:ui};class ci{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class hi{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const pi={kernelName:r.eZ0,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{depthRadius:i,bias:o,alpha:u,beta:l}=s,c=(0,r.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new hi(a.shape,i,o,u,l):new ci(a.shape,i,o,u,l);return n.runWebGLProgram(c,[a],a.dtype)}};class di{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const fi={kernelName:r.Hhh,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,h=new di(s.shape,o,u,l,c);return n.runWebGLProgram(h,[s,a,i],s.dtype)}};function mi(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reductionIndices:i,keepDims:o}=s,u=a.shape.length,l=r.D5U.parseAxisParam(i,a.shape);let c=l;const h=r.backend_util.getAxesPermutation(c,u),p=null!=h,d=n.shouldExecuteOnCPU([a]);let f=a;if(p){if(d){const e=n.texData.get(f.dataId).values,t=new Array(u);for(let n=0;n<t.length;n++)t[n]=a.shape[h[n]];const r=It(e,a.shape,a.dtype,h,t);f=n.makeTensorInfo(t,a.dtype);n.texData.get(f.dataId).values=r}else f=Dn(a,h,n);c=r.backend_util.getInnerMostAxes(c.length,u)}r.backend_util.assertAxesAreInnerMostDims("max",c,u);const[m,g]=r.backend_util.computeOutAndReduceShapes(f.shape,c);let y,b=m;if(o&&(b=r.backend_util.expandShapeToKeepDim(m,l)),d){const e=n.texData.get(f.dataId),t=Ke(e.values,r.D5U.sizeFromShape(g),b,a.dtype);y=n.makeTensorInfo(b,a.dtype);n.texData.get(y.dataId).values=t}else y=function(e,t,n,s){const a=r.D5U.sizeFromShape(t),i=Nn({inputs:{x:e},attrs:{shape:[r.D5U.sizeFromShape(e.shape)/a,a]},backend:s}),o=En(i,e.dtype,"max",s),u=Nn({inputs:{x:o},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(o),u}(f,g,b,n);return p&&n.disposeIntermediateTensorInfo(f),y}const gi={kernelName:r.YoZ,backendName:"webgl",kernelFunc:mi},yi=yn({opSnippet:en+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+nn+"\n  return result;\n",cpuKernelImpl:Ye}),bi={kernelName:r.BMI,backendName:"webgl",kernelFunc:yi};const xi={kernelName:r.mTV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;L(a,"maxPool");const{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=s;r.D5U.assert(r.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=r.backend_util.computePool2DInfo(a.shape,i,o,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&r.D5U.arraysEqual(c.inShape,c.outShape))return sn({inputs:{x:a},backend:n});const h=new yr(c,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}};const wi={kernelName:r.OAf,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=s,h=r.backend_util.computePool3DInfo(a.shape,i,o,[1,1,1],u,c,l),p=new br(h,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}};class vi{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.effectiveFilterHeight,n=e.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${n-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t};\n          wR += ${e.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${t*n-1} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${n} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ki{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.effectiveFilterDepth,n=e.effectiveFilterHeight,r=e.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${n-1-e.padInfo.top}, ${r-1-e.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${t};\n           wD += ${e.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${e.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${n};\n              wR += ${e.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${r};\n                wC += ${e.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${t*n*r-1} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${n} * ${r} +\n                  wR * ${r} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Ii={kernelName:r.OU7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:i}=t,o=i,{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=s,p=r.backend_util.computePool3DInfo(o.shape,u,l,[1,1,1],c,h),d=new br(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new ki(p),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}};const Si={kernelName:r.OV7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:i,output:o}=t,u=i;L([i,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:h,dimRoundingMode:p}=s,d=r.backend_util.computePool2DInfo(u.shape,l,c,1,h,p),f=new yr(d,"max",!0),m=n.runWebGLProgram(f,[u],u.dtype),g=new vi(d),y=n.runWebGLProgram(g,[a,m],u.dtype);return n.disposeIntermediateTensorInfo(m),y}};const Ni={kernelName:r.vFR,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:a,strides:i,pad:o,includeBatchInIndex:u}=t,l=n;r.D5U.assert(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const c=[1,1];r.D5U.assert(r.backend_util.eitherStridesOrDilationsAreOne(i,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=r.backend_util.computePool2DInfo(s.shape,a,i,c,o),[p,d]=function(e,t,n,r){let s=new yr(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new yr(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(s,u,h,l);return[p,d]}};const Ti={kernelName:r.q2K,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{keepDims:a,axis:i}=t,o=n,u=s.shape.length,l=r.D5U.parseAxisParam(i,s.shape);let c=l;const h=r.backend_util.getAxesPermutation(c,u),p=null!=h,d=o.shouldExecuteOnCPU([s]),f=[];let m=s;if(p){if(d){const e=o.texData.get(m.dataId).values,t=new Array(u);for(let r=0;r<t.length;r++)t[r]=s.shape[h[r]];const n=It(e,s.shape,s.dtype,h,t);m=o.makeTensorInfo(t,s.dtype);o.texData.get(m.dataId).values=n}else m=Dn(s,h,o);f.push(m),c=r.backend_util.getInnerMostAxes(c.length,u)}r.backend_util.assertAxesAreInnerMostDims("sum",c,u);const[g,y]=r.backend_util.computeOutAndReduceShapes(m.shape,c);let b=g;a&&(b=r.backend_util.expandShapeToKeepDim(g,l));const x=function(e,t,n,s){const a=r.D5U.sizeFromShape(t),i=Nn({inputs:{x:e},attrs:{shape:[r.D5U.sizeFromShape(e.shape)/a,a]},backend:s}),o=En(i,"float32","mean",s),u=Nn({inputs:{x:o},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(o),u}(m,y,b,o);for(const r of f)o.disposeIntermediateTensorInfo(r);return x}};const Ci={kernelName:r.c17,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,u=a.shape.length,l=r.D5U.parseAxisParam(i,a.shape);let c=l;const h=r.backend_util.getAxesPermutation(c,u);let p=a;null!=h&&(p=Fn({inputs:{x:a},backend:n,attrs:{perm:h}}),c=r.backend_util.getInnerMostAxes(c.length,a.shape.length)),r.backend_util.assertAxesAreInnerMostDims("min",c,u);const[d,f]=r.backend_util.computeOutAndReduceShapes(p.shape,c),m=Nn({inputs:{x:p},backend:n,attrs:{shape:[-1,r.D5U.sizeFromShape(f)]}}),g=En(m,m.dtype,"min",n);let y;if(o){y=Nn({inputs:{x:g},backend:n,attrs:{shape:r.backend_util.expandShapeToKeepDim(d,l)}})}else y=Nn({inputs:{x:g},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),y}},$i=yn({opSnippet:en+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+nn+"\n  return result;\n",cpuKernelImpl:Qe}),Ei={kernelName:r.q8u,backendName:"webgl",kernelFunc:$i};class Ai{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=re(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class _i{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=re(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Tt("rc",r),u=Tt("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const Di={kernelName:r.jQs,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s}=e,{paddings:a,mode:i}=n,o=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _i(s.shape,a,i):new Ai(s.shape,a,i);return t.runWebGLProgram(o,[s],s.dtype)}},Ri=yn({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+nn+"\n  return result;\n"}),Oi={kernelName:r.Vbg,backendName:"webgl",kernelFunc:Ri};class Fi{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const Mi=yn({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Bi={kernelName:r.oHH,backendName:"webgl",kernelFunc:Mi},Li="return a - b;",zi=yn({opSnippet:Li,packedOpSnippet:Li,supportsComplex:!0,cpuKernelImpl:wt}),Ui={kernelName:r.Tr8,backendName:"webgl",kernelFunc:zi};function Pi(e){const{inputs:t,backend:n,attrs:s}=e,{logits:a}=t,{dim:i}=s,o=r.D5U.parseAxisParam([i],a.shape),u=mi({inputs:{x:a},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=r.backend_util.expandShapeToKeepDim(u.shape,o),c=Nn({inputs:{x:u},backend:n,attrs:{shape:l}}),h=zi({inputs:{a:a,b:c},backend:n}),p=ia({inputs:{x:h},backend:n}),d=Rn({inputs:{x:p},backend:n,attrs:{axis:o,keepDims:!1}}),f=Nn({inputs:{x:d},backend:n,attrs:{shape:l}}),m=Mi({inputs:{a:p,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}const Vi={kernelName:r.Gcp,backendName:"webgl",kernelFunc:Pi};const Wi={kernelName:r.NZg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,u=o?s:Pi({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=new Fi(u.shape[0],u.shape[1],a),c=n.runWebGLProgram(l,[u],"int32",[[i]]);return o||n.disposeIntermediateTensorInfo(u),c}},Gi=Ot+"\n  return -x;\n";const Hi={kernelName:r.kuV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){const e=n.texData.get(s.dataId),[t,r]=Je(e.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,t)}let a;return a=(0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Xt(s.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new Rt(s.shape,Gi),n.runWebGLProgram(a,[s],s.dtype)}},ji=r.GDt.GP;const Xi={kernelName:r.uv1,backendName:"webgl",kernelFunc:function(e){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:a,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:l}=s,c=n.readSync(a.dataId),h=n.readSync(i.dataId),{selectedIndices:p}=ji(c,h,o,u,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},qi=r.GDt.qP;const Ki={kernelName:r.cye,backendName:"webgl",kernelFunc:function(e){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:a,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:l,padToMaxOutputSize:c}=s,h=n.readSync(a.dataId),p=n.readSync(i.dataId),{selectedIndices:d,validOutputs:f}=qi(h,p,o,u,l,c);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},Yi=r.GDt.pA;const Qi={kernelName:r.W0H,backendName:"webgl",kernelFunc:function(e){r.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:a,scores:i}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:l,softNmsSigma:c}=s,h=n.readSync(a.dataId),p=n.readSync(i.dataId),d=o,f=u,m=l,g=c,{selectedIndices:y,selectedScores:b}=Yi(h,p,d,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class Zi{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const Ji={kernelName:r.we_,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:a}=t,{dtype:i,depth:o,onValue:u,offValue:l}=s,c=r.D5U.sizeFromShape(a.shape),h=new Zi(c,o,u,l),p=Nn({inputs:{x:a},backend:n,attrs:{shape:[c]}}),d=n.runWebGLProgram(h,[p],i);n.disposeIntermediateTensorInfo(p);const f=Nn({inputs:{x:d},backend:n,attrs:{shape:[...a.shape,o]}});return n.disposeIntermediateTensorInfo(d),f}};function eo(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=Ur({inputs:{input:r},backend:n}),t=eo({inputs:{x:e},backend:n}),s=ns({inputs:{input:r},backend:n}),a=eo({inputs:{x:s},backend:n}),i=on({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return ya({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const to={kernelName:r.RuY,backendName:"webgl",kernelFunc:eo};const no={kernelName:r.qWM,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=Ur({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=ns({inputs:{input:s},backend:r}),i=eo({inputs:{x:a},backend:r}),o=on({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return ya({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}};const ro={kernelName:r.QiL,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s;if(1===t.length)return ua({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,o=t[0].dtype;t.forEach((e=>{r.D5U.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),r.D5U.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],l=as({inputs:t.map((e=>{const t=ua({inputs:{input:e},backend:n,attrs:{dim:a}});return u.push(t),t})),backend:n,attrs:{axis:a}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class so{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=re(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class ao{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=re(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Tt("rc",r),u=Tt("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let f=0,m=1===r?2:4;f<m;f++)d+=`\n        ${h[f]}\n        if (${p}) {\n          result[${f}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${f}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const io=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{paddings:i,constantValue:o}=s;if(0===r.D5U.sizeFromShape(a.shape)){return ya({backend:n,attrs:{shape:i.map(((e,t)=>e[0]+a.shape[t]+e[1])),value:o,dtype:a.dtype}})}const u=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ao(a.shape,i,o):new so(a.shape,i,o);return n.runWebGLProgram(u,[a],a.dtype,[[o]])},oo={kernelName:r.lyA,backendName:"webgl",kernelFunc:io},uo=yn({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+nn+"\n  return result;\n"}),lo={kernelName:r.pe_,backendName:"webgl",kernelFunc:uo};const co={kernelName:r.DlI,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,u=a.shape.length,l=[],c=r.D5U.parseAxisParam(i,a.shape);let h=c;const p=r.backend_util.getAxesPermutation(h,u);let d,f=a;if(null!=p&&(f=Fn({inputs:{x:a},backend:n,attrs:{perm:p}}),h=r.backend_util.getInnerMostAxes(h.length,u),l.push(f)),r.backend_util.assertAxesAreInnerMostDims("prod",h,u),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:s}=tt(f.shape,f.dtype,e,h);d=n.makeTensorInfo(r,s,t)}else{const[e,t]=r.backend_util.computeOutAndReduceShapes(f.shape,h),s=r.D5U.sizeFromShape(t),i=Nn({inputs:{x:f},backend:n,attrs:{shape:[-1,s]}}),o=En(i,(0,r.z4k)(a.dtype),"prod",n);d=Nn({inputs:{x:o},backend:n,attrs:{shape:e}}),l.push(i),l.push(o)}if(o){l.push(d);const e=r.backend_util.expandShapeToKeepDim(d.shape,c);d=Nn({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};const ho={kernelName:r.dDz,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,u=s.map((e=>n.readSync(e.dataId))),l=s.map((e=>e.shape)),c=n.readSync(a.dataId),h=n.readSync(i.dataId),[p,d,f]=nt(u,l,c,a.shape,a.dtype,h,i.shape,o),m=p.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,d);return m.concat([g])}};const po={kernelName:r.CQl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=rt(i,r.shape,r.dtype,o,s.shape,u,a.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],r.dtype,c)]}};const fo={kernelName:r.BiW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,l=n.readSync(s.dataId),c=n.readSync(a.dataId),h=n.readSync(i.dataId),p=o.map((e=>n.readSync(e.dataId))),d=o.map((e=>e.shape)),[f,m]=st(l,s.shape,c,a.shape,a.dtype,h,i.shape,p,d,u);return n.makeTensorInfo(f,a.dtype,m)}},mo=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=at(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},go={kernelName:r.e6w,backendName:"webgl",kernelFunc:mo},yo=gn({opSnippet:"return 1.0 / x;"}),bo={kernelName:r.$HU,backendName:"webgl",kernelFunc:yo},xo=gn({opSnippet:Ot+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),wo={kernelName:r.qkr,backendName:"webgl",kernelFunc:xo},vo=gn({opSnippet:Ot+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),ko={kernelName:r.SbG,backendName:"webgl",kernelFunc:vo};class Io{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class So{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const No={kernelName:r._Yw,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:o,size:u}=s,[l,c]=u,h=(0,r.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new So(a.shape,l,c,i,o):new Io(a.shape,l,c,i,o);return n.runWebGLProgram(h,[a],"float32")}};class To{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Co={kernelName:r.zbQ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new To(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class $o{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class Eo{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${r?"0.5":"0.0"})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const Ao={kernelName:r.dpD,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:o,size:u}=s,[l,c]=u,h=(0,r.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Eo(a.shape,l,c,i,o):new $o(a.shape,l,c,i,o);return n.runWebGLProgram(h,[a],a.dtype)}};class _o{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Do={kernelName:r.Hmb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new _o(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class Ro{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=re(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class Oo{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=Tt("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=re(n);function o(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const Fo={kernelName:r.mKl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{dims:i}=s,o=a.shape.length,u=r.D5U.parseAxisParam(i,a.shape);if(0===o)return sn({inputs:{x:a},backend:n});const l=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Oo(a.shape,u):new Ro(a.shape,u);return n.runWebGLProgram(l,[a],a.dtype)}};class Mo{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"===typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Bo={kernelName:r.b9H,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:a,fillValue:i,center:o}=t,u=n,l=new Mo(s.shape,i),[c,h]=r.backend_util.getImageCenter(o,s.shape[1],s.shape[2]),p=[[c,h,Math.sin(a),Math.cos(a)]];return u.runWebGLProgram(l,[s],s.dtype,p)}},Lo=gn({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),zo={kernelName:r.e07,backendName:"webgl",kernelFunc:Lo},Uo=gn({opSnippet:"return inversesqrt(x);",cpuKernelImpl:it}),Po={kernelName:r.bV0,backendName:"webgl",kernelFunc:Uo};class Vo{constructor(e,t,n,r,s,a,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const u=re(s.length),l=re(a.length);let c="";1===n?c="i":2===n&&(c="i, j");let h="";1===r?h="i":2===r&&(h="i, coords[1]");let p="";o&&(p="coords[0], coords[1]");this.userCode=`\n        ${u} strides = ${u}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${`getIndices(${c})`});\n              flattenedIndex += index * ${t>1?"strides[j]":"strides"};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${`getUpdates(${h})`};\n              found = true;\n            }\n          }\n          setOutput(mix(${`getDefaultValue(${p})`}, sum, float(found)));\n        }\n      `}}class Wo{constructor(e,t,n,r,s,a,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const u=re(s.length),l=re(a.length);let c="";1===n?c="i":2===n&&(c="i, j");let h="";1===r?h="i":2===r&&(h="i, coords[1]");let p="";o&&(p="coords[0], coords[1]");this.userCode=`\n        ${u} strides = ${u}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${`getIndices(${c})`});\n              flattenedIndex += index.xz * ${t>1?"strides[j]":"strides"};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${t>1?"strides[j + 1]":"strides"};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${`getUpdates(${h})`};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${`getDefaultValue(${p})`}, sum, found));\n        }\n      `}}const Go={kernelName:r.xQA,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:a,updates:i}=t,{shape:o}=s,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:p}=r.backend_util.calculateShapes(i,a,o),d=[p/c,c];if(0===p)return n.makeTensorInfo(o,a.dtype);const f=Nn({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=Nn({inputs:{x:i},backend:n,attrs:{shape:[l,c]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));let y;y=(0,r.OBj)().getBool("WEBGL_PACK")?new Wo(l,u,f.shape.length,m.shape.length,h,d):new Vo(l,u,f.shape.length,m.shape.length,h,d);const b=n.runWebGLProgram(y,[m,f,g],m.dtype),x=Nn({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),x}};class Ho{constructor(e,t,n,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=2===(0,r.OBj)().getNumber("WEBGL_VERSION")?"while (left < right) {":a;this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${"left"===s?"<":"<="} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const jo={kernelName:r.nr8,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=new Ho(s.shape[0],s.shape[1],a.shape[1],i);return n.runWebGLProgram(o,[s,a],"int32",[[s.shape[1]]])}};class Xo{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=re(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const qo={kernelName:r.PhF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:a,e:i}=t,o=new Xo(s.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(o,[s,a,i],(0,r.x8V)(a.dtype,i.dtype))}},Ko=gn({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${r.backend_util.SELU_SCALEALPHA};\n  float scale = ${r.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),Yo={kernelName:r.oFR,backendName:"webgl",kernelFunc:Ko},Qo=gn({opSnippet:mn+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:ut}),Zo={kernelName:r.a5O,backendName:"webgl",kernelFunc:Qo},Jo=gn({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),eu={kernelName:r.i5y,backendName:"webgl",kernelFunc:Jo},tu=gn({opSnippet:mn+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${nn}\n  return result;\n`}),nu={kernelName:r.RQH,backendName:"webgl",kernelFunc:tu},ru=gn({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),su={kernelName:r.wYB,backendName:"webgl",kernelFunc:ru},au=gn({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),iu={kernelName:r.MRv,backendName:"webgl",kernelFunc:au},ou={kernelName:r.TQc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:i,paddings:o}=s;r.D5U.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const u=i.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...o);for(let r=1+i.length;r<a.shape.length;++r)l.push([0,0]);const c=[],h=io({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),p=r.backend_util.getReshaped(h.shape,i,u,!1),d=r.backend_util.getPermuted(p.length,i.length,!1),f=r.backend_util.getReshapedPermuted(h.shape,i,u,!1),m=Nn({inputs:{x:h},backend:n,attrs:{shape:p}}),g=Fn({inputs:{x:m},backend:n,attrs:{perm:d}}),y=Nn({inputs:{x:g},backend:n,attrs:{shape:f}});return c.push(h),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const uu={kernelName:r.O3z,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),u=n.readSync(s.dataId),l=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,p,d,f,m]=ht(o,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],s.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};const lu={kernelName:r.nhH,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(a.dataId)),[l,c,h]=pt(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};const cu={kernelName:r.w3H,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=dt(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}};const hu={kernelName:r.ZjV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=dt(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}};const pu={kernelName:r.D2d,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:a,sparseValues:i,defaultValue:o}=t,{outputShape:u}=s,{sliceRank:l,numUpdates:c,sliceSize:h,strides:p,outputSize:d}=r.backend_util.calculateShapes(i,a,u);if("string"===i.dtype){const e=n.bufferSync(a),t=n.bufferSync(i),s=r.D5U.decodeString(n.readSync(o.dataId)[0]),f=ot(e,t,u,d,h,c,l,p,s,false);return n.makeTensorInfo(u,f.dtype,f.values)}const f=new Vo(c,l,a.shape.length,i.shape.length,p,[d,1],false),m=n.runWebGLProgram(f,[i,a,o],i.dtype),g=Nn({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(m),g}};const du={kernelName:r.L8s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{numOrSizeSplits:i,axis:o}=s,u=r.D5U.parseAxisParam(o,a.shape)[0],l=r.backend_util.prepareSplitSize(a,i,u),c=new Array(a.shape.length).fill(0),h=a.shape.slice();return l.map((e=>{const t=[...h];t[u]=e;const r=Dr({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[u]+=e,r}))}},fu="return sqrt(x);",mu=gn({opSnippet:fu,packedOpSnippet:fu,cpuKernelImpl:ft}),gu={kernelName:r.FKq,backendName:"webgl",kernelFunc:mu},yu=gn({opSnippet:"return x * x;"}),bu={kernelName:r.bK0,backendName:"webgl",kernelFunc:yu},xu="return (a - b) * (a - b);",wu=yn({opSnippet:xu,packedOpSnippet:xu}),vu={kernelName:r._tC,backendName:"webgl",kernelFunc:wu};const ku={kernelName:r.e0R,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");const i=n.readSync(a.dataId),o=r.backend_util.fromUint8ToStringArray(i),u=mt(o,"string",s);return n.makeTensorInfo(a.shape,"string",u)}};const Iu={kernelName:r.h8e,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=new Rt(r.shape,Ot+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `);return n.runWebGLProgram(s,[r],r.dtype)}};class Su{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=re(n.length),a=re(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const Nu={kernelName:r.jQk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{begin:i,end:o,strides:u,beginMask:l,endMask:c,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:d}=s,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:y,isSimpleSlice:b,begin:x,end:w,strides:v}=r.kuN.sliceInfo(a.shape,i,o,u,l,c,h,p,d);let k;if(g)k=Nn({inputs:{x:a},backend:n,attrs:{shape:m}});else if(y||b){r.D5U.assert(a.shape.length>=1,(()=>`Input must have rank at least 1, got: ${a.shape.length}`));const e=r.kuN.computeOutShape(x,w,v),t=Dr({inputs:{x:a},backend:n,attrs:{begin:x,size:e}});k=Nn({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([a])){const e=n.readSync(a.dataId),t=(0,r.f3b)(a.shape,a.dtype,e),s=gt(f,t,v,x);k=n.makeTensorInfo(m,a.dtype,s.values)}else{const e=new Su(x,v,f);k=n.runWebGLProgram(e,[a],a.dtype)}}const I=Nn({inputs:{x:k},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(k),I}};const Tu={kernelName:r._JP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,p=n.readSync(c.dataId),d=n.readSync(h.dataId),[f,m]=yt(p,d,s,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};const Cu={kernelName:r.s1s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),u=n.readSync(i.dataId)[0],[l,c,h]=bt(o,u,s),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};const $u={kernelName:r.XkS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=xt(i,s);return n.makeTensorInfo(a.shape,"int32",o)}},Eu=gn({opSnippet:"return tan(x);"}),Au={kernelName:r.sEM,backendName:"webgl",kernelFunc:Eu},_u=gn({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),Du={kernelName:r.MIZ,backendName:"webgl",kernelFunc:_u};const Ru={kernelName:r.SIB,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{tensor:a,indices:i,updates:o}=t,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:p}=r.backend_util.calculateShapes(o,i,a.shape),d=[p/c,c];if(0===p)return n.makeTensorInfo(a.shape,i.dtype);const f=Nn({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),m=Nn({inputs:{x:o},backend:n,attrs:{shape:[l,c]}}),g=Nn({inputs:{x:a},backend:n,attrs:{shape:d}}),y=new Vo(l,u,f.shape.length,m.shape.length,h,d,!1,!0),b=n.runWebGLProgram(y,[m,f,g],g.dtype),x=Nn({inputs:{x:b},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(b),x}};class Ou{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;const r=re(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let s=0;s<e.length;s++)r.push(`imod(${n[s]}, ${e[s]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function Fu(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reps:i}=s;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>r.D5U.decodeString(e))):e,s=(0,r.f3b)(a.shape,a.dtype,t),o=vt(s,i);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new Ou(a.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}const Mu={kernelName:r.n9L,backendName:"webgl",kernelFunc:Fu};class Bu{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class Lu{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function zu(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function Uu(e){let t=1;for(;t<e;)t*=2;return t}const Pu={kernelName:r.cWu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{k:i,sorted:o}=s,u=(0,r.OBj)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=(0,r.OBj)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=a.shape,h=c[c.length-1];if(n.shouldExecuteOnCPU([a])||h<u||i>l){const e=n.readSync(a.dataId),[t,r]=kt(e,c,a.dtype,i,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===i)return c[c.length-1]=0,[n.makeTensorInfo(c,a.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(1===h)return[a,ya({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const p=n.texData.get(a.dataId),d=null!==p&&p.isPacked,f=d?n.unpackTensor(a):a,m=r.D5U.sizeFromShape(c)/h,g=Nn({inputs:{x:f},attrs:{shape:[m,h]},backend:n});d&&zu(n,f);const y=Uu(i),b=Uu(h);let x=null;const w=()=>null===x?[g,g]:[g,x],v=(e,t,r)=>{const s=w(),a=new Bu(r),i=x;x=n.runWebGLProgram(a,s,"int32",[[h],[null===x?1:0],[Number.NEGATIVE_INFINITY],[e],[t]]),zu(n,i)};for(let r=1;r<y;r*=2){const e=2*r;for(let t=r;t>=1;t/=2)v(e,t,[m,b])}for(let r=b;r>y;r/=2){const e=w(),t=new Lu([m,r/2]),s=x;x=n.runWebGLProgram(t,e,"int32",[[h],[null===x?1:0],[y]]),zu(n,s);const a=y/2,i=2*a;for(let n=a;n>=1;n/=2)v(i,n,x.shape)}let k=x;x=Dr({inputs:{x:x},backend:n,attrs:{begin:0,size:[m,i]}}),zu(n,k);let I=Ma({inputs:{x:g,indices:x},backend:n,attrs:{axis:1,batchDims:1}});zu(n,g);const S=c.slice(0,-1);S.push(i),k=x,x=Nn({inputs:{x:x},attrs:{shape:S},backend:n}),zu(n,k);const N=I;return I=Nn({inputs:{x:I},attrs:{shape:S},backend:n}),zu(n,N),[I,x]}};class Vu{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const Wu={kernelName:r.wx7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,p,d]=s.shape,[f,m]=null!=l?l:[h,p],g=new Vu(h,p,i,o,u,[c,f,m,d]);return n.runWebGLProgram(g,[s,a],"float32")}};const Gu={kernelName:r.kpP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;L(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:u,indices:l}=St(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}};const Hu={kernelName:r.ToN,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,u=s.shape[a],l=new Array(o-1);let c=0;for(let m=0;m<o;m++)m!==a&&(l[c++]=i.shape[m]);const h=[],p=new Array(o).fill(0),d=i.shape.slice();d[a]=1;const f=new Array(u);for(let m=0;m<f.length;m++){p[a]=m;const e=Dr({inputs:{x:i},backend:n,attrs:{begin:p,size:d}}),t=Nn({inputs:{x:e},backend:n,attrs:{shape:l}});f[m]=t,h.push(e)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class ju{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const Xu=[zn,Pn,Wn,Hn,qn,Qn,Zn,Jn,ar,ir,ur,cr,pr,fr,gr,xr,wr,Ir,Sr,Nr,$r,Or,Fr,Mr,Br,Wr,jr,Kr,un,Zr,is,fs,xs,vs,ks,Is,Ss,Ts,$s,As,Ms,Bs,Ls,Us,Ws,js,Xs,Ks,Qs,Zs,ea,ta,ra,aa,oa,la,pa,ma,ba,wa,Ia,Na,$a,_a,Da,Oa,Ba,za,Pa,an,Va,rs,Ga,ja,qa,hn,Ya,Za,Ja,ti,ri,ai,oi,li,pi,fi,gi,bi,xi,wi,Ii,Si,Ni,Ti,Ci,Ei,Di,Oi,Wi,Sn,Hi,Xi,Ki,Qi,zr,Ji,no,ro,oo,lo,fn,co,ho,po,fo,go,Pr,Bi,bo,wo,ko,Tn,No,Co,Ao,Do,Fo,Bo,zo,Po,Go,jo,qo,Yo,Zo,eu,nu,su,Rr,Vi,iu,ou,uu,lu,cu,hu,pu,du,gu,bu,vu,ku,Iu,Nu,Tu,Cu,$u,Ui,On,Au,Du,Ru,Mu,Pu,Wu,Mn,Gu,Hu,{kernelName:r.Qvg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,segmentIds:i}=t,{numSegments:o}=s,u=a.shape.length,l=[];let c=0;const h=r.backend_util.getAxesPermutation([c],u);let p=a;null!=h&&(p=Fn({inputs:{x:a},backend:n,attrs:{perm:h}}),l.push(p),c=r.backend_util.getInnerMostAxes(1,u)[0]);const d=r.backend_util.segment_util.computeOutShape(p.shape,c,o),f=r.D5U.sizeFromShape([p.shape[c]]),m=Nn({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}});l.push(m);const g=(0,r.z4k)(a.dtype),y=(e,t,s,a,i)=>{const o=e.shape[0],u=e.shape[1],c=r.backend_util.segment_util.segOpComputeOptimalWindowSize(u,i),h=new ju({windowSize:c,inSize:u,batchSize:o,numSegments:i},t),p=n.compileAndRun(h,[e,s],a);if(l.push(p),p.shape[1]===i)return p;const d=mo({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),f=Fu({inputs:{x:d},backend:n,attrs:{reps:[u/c]}});l.push(d),l.push(f);return y(p,t,f,a,i)},b=Nn({inputs:{x:y(m,"unsortedSegmentSum",i,g,o)},backend:n,attrs:{shape:d}});let x=b;if(null!=h){l.push(b);const e=r.backend_util.getUndoAxesPermutation(h);x=Fn({inputs:{x:x},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},to];for(const qu of Xu)(0,r.wCN)(qu)},8713:function(e,t,n){n.d(t,{JL:function(){return r},Zu:function(){return s}});class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class s{refCount(e){return a("refCount")}incRef(e){return a("incRef")}timerAvailable(){return!0}time(e){return a("time")}read(e){return a("read")}readSync(e){return a("readSync")}readToGPU(e,t){return a("readToGPU")}numDataIds(){return a("numDataIds")}disposeData(e,t){return a("disposeData")}write(e,t,n){return a("write")}move(e,t,n,r,s){return a("move")}createTensorFromGPUData(e,t,n){return a("createTensorFromGPUData")}memory(){return a("memory")}floatPrecision(){return a("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return a("dispose")}}function a(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},3337:function(e,t,n){function r(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||s)}(e,t,n);e.splice(r<0?-(r+1):r,0,t)}function s(e,t){return e>t?1:e<t?-1:0}function a(e,t,n,r,s){return u(e,t,n,r,s,0)}function i(e,t,n,r,s,a){return u(e,t,n,r,s,0,!1,a,!0)}function o(e,t,n,r,s,a){return u(e,t,n,r,s,a,!0)}function u(e,t,n,s,a,i,o=!1,u=!1,p=!1){const d=[];for(let r=0;r<t.length;r++)t[r]>a&&d.push({score:t[r],boxIndex:r,suppressBeginIndex:0});d.sort(h);const f=i>0?-.5/i:0,m=[],g=[];for(;m.length<n&&d.length>0;){const t=d.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=t;if(n<a)break;let u=!1;for(let r=m.length-1;r>=o;--r){const n=l(e,i,m[r]);if(n>=s){u=!0;break}if(t.score=t.score*c(s,f,n),t.score<=a)break}t.suppressBeginIndex=m.length,u||(t.score===n?(m.push(i),g.push(t.score)):t.score>a&&r(d,t,h))}const y=m.length,b=n-y;u&&b>0&&(m.push(...new Array(b).fill(0)),g.push(...new Array(b).fill(0)));const x={selectedIndices:m};return o&&(x.selectedScores=g),p&&(x.validOutputs=y),x}function l(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),p=Math.max(s[1],s[3]),d=(o-a)*(u-i),f=(h-l)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,l),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(u,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function c(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function h(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{GP:function(){return a},qP:function(){return i},pA:function(){return o}})},8333:function(e,t,n){n.d(t,{Z:function(){return s}});var r=n(2657);function s(e,t){const n=[];for(let r=0;r<t.length;r++)t[r]&&n.push(r);const s=(0,r.f)(e,"int32"),a=(0,r.f)([n.length,e.length],"int32");for(let r=0;r<n.length;r++){const t=s.indexToLoc(n[r]);a.values.set(t,r*e.length)}return a.toTensor()}},5010:function(e,t,n){n.d(t,{SYM:function(){return U.SYM},VGw:function(){return U.VGw},SpW:function(){return U.SpW},mm_:function(){return U.mm_},Xze:function(){return U.Xze},oT6:function(){return U.oT6},IKK:function(){return U.IKK},sJF:function(){return U.sJF},aJk:function(){return U.aJk},M2y:function(){return U.M2y},qw7:function(){return U.qw7},jMg:function(){return U.jMg},QCc:function(){return U.QCc},Oyi:function(){return U.Oyi},JhU:function(){return U.JhU},_k9:function(){return U._k9},IMb:function(){return U.IMb},ROF:function(){return U.ROF},XLW:function(){return U.XLW},zws:function(){return U.zws},zvY:function(){return U.zvY},hCO:function(){return U.hCO},eEB:function(){return U.eEB},RFZ:function(){return U.RFZ},gJX:function(){return U.gJX},xnO:function(){return U.xnO},Zz9:function(){return U.Zz9},yj2:function(){return U.yj2},Eh3:function(){return U.Eh3},mhS:function(){return U.mhS},wUP:function(){return U.wUP},wm:function(){return U.wm},x12:function(){return U.x12},o2y:function(){return U.o2y},ik2:function(){return U.ik2},mc4:function(){return U.mc4},TR1:function(){return U.TR1},VcC:function(){return U.VcC},Byc:function(){return U.Byc},iHb:function(){return U.iHb},JLz:function(){return _t.JL},QRR:function(){return U.QRR},T0n:function(){return U.T0n},cie:function(){return U.cie},sL$:function(){return U.sL$},y7R:function(){return U.y7R},$w:function(){return U.$w},p4S:function(){return U.p4S},Vn9:function(){return U.Vn9},ekb:function(){return U.ekb},hGc:function(){return U.hGc},$g6:function(){return U.$g6},SX0:function(){return U.SX0},HEU:function(){return U.HEU},hdR:function(){return U.hdR},Omj:function(){return U.Omj},NEP:function(){return U.NEP},YFo:function(){return U.YFo},Y0y:function(){return U.Y0y},vwp:function(){return U.vwp},deh:function(){return U.deh},Uyb:function(){return U.Uyb},OR:function(){return U.OR},jeX:function(){return U.jeX},eBW:function(){return U.eBW},sHE:function(){return U.sHE},_V0:function(){return U._V0},luS:function(){return U.luS},q1x:function(){return U.q1x},qi_:function(){return U.qi_},iZT:function(){return U.iZT},Acj:function(){return U.Acj},Qg5:function(){return U.Qg5},iJz:function(){return U.iJz},J_u:function(){return U.J_u},avt:function(){return U.avt},iWB:function(){return U.iWB},r7n:function(){return U.r7n},Zuw:function(){return _t.Zu},eZ0:function(){return U.eZ0},Hhh:function(){return U.Hhh},J$2:function(){return U.J$2},vtC:function(){return U.vtC},CAk:function(){return U.CAk},e7N:function(){return U.e7N},ZbH:function(){return U.ZbH},kU:function(){return U.kU},PYm:function(){return U.PYm},VfG:function(){return U.VfG},MZg:function(){return U.MZg},YoZ:function(){return U.YoZ},mTV:function(){return U.mTV},OAf:function(){return U.OAf},OU7:function(){return U.OU7},OV7:function(){return U.OV7},vFR:function(){return U.vFR},BMI:function(){return U.BMI},q2K:function(){return U.q2K},c17:function(){return U.c17},q8u:function(){return U.q8u},jQs:function(){return U.jQs},Vbg:function(){return U.Vbg},NZg:function(){return U.NZg},wYn:function(){return U.wYn},kuV:function(){return U.kuV},uv1:function(){return U.uv1},cye:function(){return U.cye},W0H:function(){return U.W0H},yQU:function(){return U.yQU},we_:function(){return U.we_},qWM:function(){return U.qWM},gaJ:function(){return ce.g},QiL:function(){return U.QiL},lyA:function(){return U.lyA},pe_:function(){return U.pe_},o0g:function(){return U.o0g},DlI:function(){return U.DlI},dDz:function(){return U.dDz},CQl:function(){return U.CQl},BiW:function(){return U.BiW},e6w:function(){return U.e6w},xJR:function(){return U.xJR},oHH:function(){return U.oHH},$HU:function(){return U.$HU},qkr:function(){return U.qkr},SbG:function(){return U.SbG},HZH:function(){return U.HZH},_Yw:function(){return U._Yw},zbQ:function(){return U.zbQ},dpD:function(){return U.dpD},Hmb:function(){return U.Hmb},mKl:function(){return U.mKl},b9H:function(){return U.b9H},e07:function(){return U.e07},bV0:function(){return U.bV0},xQA:function(){return U.xQA},nr8:function(){return U.nr8},PhF:function(){return U.PhF},oFR:function(){return U.oFR},a5O:function(){return U.a5O},i5y:function(){return U.i5y},RQH:function(){return U.RQH},wYB:function(){return U.wYB},p2w:function(){return U.p2w},Gcp:function(){return U.Gcp},MRv:function(){return U.MRv},TQc:function(){return U.TQc},O3z:function(){return U.O3z},nhH:function(){return U.nhH},w3H:function(){return U.w3H},ZjV:function(){return U.ZjV},D2d:function(){return U.D2d},L8s:function(){return U.L8s},FKq:function(){return U.FKq},bK0:function(){return U.bK0},_tC:function(){return U._tC},e0R:function(){return U.e0R},h8e:function(){return U.h8e},jQk:function(){return U.jQk},_JP:function(){return U._JP},s1s:function(){return U.s1s},XkS:function(){return U.XkS},Tr8:function(){return U.Tr8},GBy:function(){return U.GBy},sEM:function(){return U.sEM},MIZ:function(){return U.MIZ},esB:function(){return V.es},YDk:function(){return V.YD},SIB:function(){return U.SIB},n9L:function(){return U.n9L},cWu:function(){return U.cWu},wx7:function(){return U.wx7},G3Y:function(){return U.G3Y},kpP:function(){return U.kpP},ToN:function(){return U.ToN},Qvg:function(){return U.Qvg},RuY:function(){return U.RuY},usg:function(){return U.usg},WnP:function(){return fe.WnP},IHx:function(){return fe.IHx},$6P:function(){return fe.$6P},YjB:function(){return fe.YjB},NqF:function(){return fe.NqF},wS1:function(){return fe.wS1},uR5:function(){return fe.uR5},y3$:function(){return ge.y3},Wap:function(){return i},Dxk:function(){return fe.Dxk},JY5:function(){return fe.JY5},p3b:function(){return fe.p3b},UFq:function(){return fe.UFq},Jyw:function(){return L},Xhn:function(){return s},f3b:function(){return fe.f3b},pju:function(){return fe.pju},iUl:function(){return fe.iUl},d9v:function(){return fe.d9v},zoF:function(){return fe.zoF},gME:function(){return fe.gME},Izb:function(){return fe.Izb},MNy:function(){return fe.MNy},ZaL:function(){return fe.ZaL},PAt:function(){return fe.PAt},Tek:function(){return fe.Tek},bc:function(){return fe.bc},pdZ:function(){return fe.pdZ},$QV:function(){return fe.$QV},ppE:function(){return fe.ppE},B10:function(){return fe.B10},C2$:function(){return $t},B90:function(){return ge.B9},hiC:function(){return fe.hiC},rvX:function(){return fe.rvX},pyx:function(){return fe.pyx},SRH:function(){return ge.SR},OBj:function(){return u.OB},DgJ:function(){return fe.DgJ},Qqt:function(){return fe.Qqt},dt4:function(){return fe.dt4},iyy:function(){return fe.iyy},hlL:function(){return fe.hlL},GWj:function(){return fe.GWj},imm:function(){return fe.imm},Iqj:function(){return fe.Iqj},pjt:function(){return fe.pjt},brS:function(){return fe.brS},BHj:function(){return fe.BHj},io:function(){return r},CnY:function(){return ge.Cn},GDt:function(){return o},hi7:function(){return fe.hi7},$r2:function(){return fe.$r2},cM7:function(){return fe.cM7},Krr:function(){return fe.Krr},CmS:function(){return fe.CmS},HvI:function(){return fe.HvI},OI3:function(){return fe.OI3},Fp7:function(){return fe.Fp7},_sB:function(){return fe._sB},YQQ:function(){return fe.YQQ},gWQ:function(){return fe.gWQ},J69:function(){return fe.J69},sq6:function(){return ge.sq},VV$:function(){return fe.VV$},LTh:function(){return fe.LTh},Gi7:function(){return fe.Gi7},dC7:function(){return fe.dC7},W76:function(){return fe.W76},glt:function(){return be},Quu:function(){return fe.Quu},lfX:function(){return fe.lfX},iUs:function(){return fe.iUs},JpU:function(){return fe.JpU},vku:function(){return fe.vku},AL3:function(){return fe.AL3},nGf:function(){return fe.nGf},LGj:function(){return fe.LGj},w6H:function(){return fe.w6H},Cd_:function(){return ge.Cd},jqO:function(){return ge.jq},wCN:function(){return P.wC},UYe:function(){return fe.UYe},XLQ:function(){return fe.XLQ},GYS:function(){return fe.GYS},iD$:function(){return fe.iD$},U8D:function(){return fe.U8D},U_I:function(){return fe.U_I},m7h:function(){return ne},XD2:function(){return fe.XD2},tPi:function(){return fe.tPi},jZU:function(){return fe.jZU},SmN:function(){return fe.SmN},CnO:function(){return fe.CnO},p0P:function(){return fe.p0P},kuN:function(){return te},XAC:function(){return fe.XAC},Wvh:function(){return fe.Wvh},Vl2:function(){return fe.Vl2},_b3:function(){return fe._b3},L9e:function(){return fe.L9e},knu:function(){return fe.knu},luU:function(){return fe.luU},Smz:function(){return fe.Smz},z4k:function(){return de.z4},AEp:function(){return fe.AEp},XeE:function(){return fe.XeE},RRF:function(){return fe.RRF},piX:function(){return re},lub:function(){return ge.lu},Gg6:function(){return fe.Gg6},p_j:function(){return me},p4s:function(){return fe.p4s},Xu6:function(){return fe.Xu6},HHK:function(){return fe.HHK},x8V:function(){return de.x8},D5U:function(){return g},VD$:function(){return fe.VD$},jTM:function(){return se},arb:function(){return fe.arb},lls:function(){return fe.lls},P84:function(){return fe.P84}});var r={};n.r(r),n.d(r,{CompositeArrayBuffer:function(){return h.w},browserFiles:function(){return m},browserHTTPRequest:function(){return T},concatenateArrayBuffers:function(){return l.JY},copyModel:function(){return O.ID},decodeWeights:function(){return l.dI},encodeWeights:function(){return l.yz},fromMemory:function(){return A},fromMemorySync:function(){return _},getLoadHandlers:function(){return c.rM},getModelArtifactsForJSON:function(){return l.jN},getModelArtifactsForJSONSync:function(){return l.ji},getModelArtifactsInfoForJSON:function(){return l.Q},getSaveHandlers:function(){return c.yB},getWeightSpecs:function(){return l.hu},http:function(){return N},isHTTPScheme:function(){return I},listModels:function(){return O.h1},loadWeights:function(){return w},moveModel:function(){return O.Ny},registerLoadRouter:function(){return c.pS},registerSaveRouter:function(){return c.tf},removeModel:function(){return O.gw},weightsLoaderFactory:function(){return v},withSaveHandler:function(){return D},withSaveHandlerSync:function(){return R}});var s={};n.r(s),n.d(s,{draw:function(){return Q},fromPixels:function(){return Z},fromPixelsAsync:function(){return q},toPixels:function(){return Y}});var a={};n.r(a),n.d(a,{collectGatherOpShapeInfo:function(){return Nt},computeOutShape:function(){return St},segOpComputeOptimalWindowSize:function(){return It}});var i={};n.r(i),n.d(i,{ERF_A1:function(){return ze},ERF_A2:function(){return Ue},ERF_A3:function(){return Pe},ERF_A4:function(){return Ve},ERF_A5:function(){return We},ERF_P:function(){return Le},PARALLELIZE_THRESHOLD:function(){return Ee},RowPartitionType:function(){return ke},SELU_SCALE:function(){return Be.$},SELU_SCALEALPHA:function(){return Be.y},applyActivation:function(){return Se.QH},assertAndGetBroadcastShape:function(){return L.assertAndGetBroadcastShape},assertAxesAreInnerMostDims:function(){return xe.lB},assertParamsConsistent:function(){return we},assignToTypedArray:function(){return Ye},axesAreInnerMostDims:function(){return xe.YB},calculateShapes:function(){return ee.SU},checkEinsumDimSizes:function(){return it},checkPadOnDimRoundingMode:function(){return Ie.m},combineLocations:function(){return xe.Vh},combineRaggedTensorToTensorShapes:function(){return Ne},complexWithEvenIndex:function(){return Xe},complexWithOddIndex:function(){return qe},computeConv2DInfo:function(){return Ie.Ix},computeConv3DInfo:function(){return Ie.jw},computeDefaultPad:function(){return Ie.aO},computeDilation2DInfo:function(){return Ie.Rf},computeOptimalWindowSize:function(){return Ae},computeOutAndReduceShapes:function(){return xe.kz},computeOutShape:function(){return ve},computePool2DInfo:function(){return Ie.Xw},computePool3DInfo:function(){return Ie.pl},convertConv2DDataFormat:function(){return Ie.sl},decodeEinsumEquation:function(){return st},eitherStridesOrDilationsAreOne:function(){return Ie.jT},expandShapeToKeepDim:function(){return xe.rv},exponent:function(){return Ze},exponents:function(){return Qe},fromStringArrayToUint8:function(){return Ct},fromUint8ToStringArray:function(){return Tt},getAxesPermutation:function(){return xe.Q3},getBroadcastDims:function(){return L.getBroadcastDims},getComplexWithIndex:function(){return Ke},getEinsumComputePath:function(){return ot},getEinsumPermutation:function(){return at},getFusedBiasGradient:function(){return Se.pf},getFusedDyActivation:function(){return Se.Fr},getImageCenter:function(){return _e},getInnerMostAxes:function(){return xe.sY},getPermuted:function(){return Re},getRaggedRank:function(){return Ce},getReductionAxes:function(){return L.getReductionAxes},getReshaped:function(){return De},getReshapedPermuted:function(){return Oe},getRowPartitionTypesHelper:function(){return Te},getSliceBeginCoords:function(){return Fe},getSliceSize:function(){return Me},getSparseFillEmptyRowsIndicesDenseShapeMismatch:function(){return ht},getSparseFillEmptyRowsNegativeIndexErrorMessage:function(){return pt},getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:function(){return dt},getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:function(){return gt},getSparseReshapeInputOutputMismatchErrorMessage:function(){return bt},getSparseReshapeInputOutputMultipleErrorMessage:function(){return yt},getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:function(){return ft},getSparseReshapeNegativeOutputDimErrorMessage:function(){return mt},getSparseSegmentReductionIndicesOutOfRangeErrorMessage:function(){return kt},getSparseSegmentReductionNegativeSegmentIdsErrorMessage:function(){return xt},getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:function(){return wt},getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:function(){return vt},getUndoAxesPermutation:function(){return xe.LJ},isIdentityPermutation:function(){return ut},log:function(){return Ge.c},mergeRealAndImagArrays:function(){return He},prepareAndValidate:function(){return J},prepareSplitSize:function(){return ct},segment_util:function(){return a},shouldFuse:function(){return Se.uy},slice_util:function(){return te},splitRealAndImagArrays:function(){return je},stridesOrDilationsArePositive:function(){return Ie.U3},tupleValuesAreOne:function(){return Ie.I0},upcastType:function(){return de.x8},validateDefaultValueShape:function(){return $e},validateInput:function(){return ee.b0},validateUpdateShape:function(){return ee.l5},warn:function(){return Ge.Z}});var o={};n.r(o),n.d(o,{GP:function(){return Et.GP},qP:function(){return Et.qP},pA:function(){return Et.pA},ZA:function(){return At.Z}});n(1044),n(8209),n(9998);var u=n(2885),l=n(1989),c=n(6493),h=n(574);function p(e){return new Promise((e=>setTimeout(e))).then(e)}class d{constructor(e){if(!(0,u.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(d.URL_SCHEME)&&(e=e.slice(d.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=h.w.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=(0,l.Yd)(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await p((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await p((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:(0,l.Q)(e)}}}}d.URL_SCHEME="downloads://";class f{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:s});const a=(0,l.jN)(r,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const a of e)t.push(...a.weights),n.push(...a.paths);const r=this.checkManifestAndWeightFiles(e),s=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(s).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const s=new FileReader;s.onload=e=>{n(e.target.result)},s.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>(0,l.EZ)(e.name))),r={};for(const s of e)s.paths.forEach((e=>{const s=(0,l.EZ)(e);if(-1!==t.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(s)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function m(e){return new f(e)}c.U3.registerSaveRouter((e=>(0,u.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(d.URL_SCHEME)?function(e="model"){return new d(e)}(e.slice(d.URL_SCHEME.length)):null));var g=n(9122);function y(e,t,n,r){(function(e){(0,g.assert)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))})(e),function(e,t){(0,g.assert)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,g.assert)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,g.assert)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}var b=n(5771);async function x(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,u.OB)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await y(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await y(s,t.onProgress,.5,1)}async function w(e,t="",n,r){return v((e=>x(e,{requestInit:r})))(e,t,n)}function v(e){return async(t,n="",r)=>{const s=t.map((()=>!1)),a={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u=b.J["quantization"in e?e.quantization.dtype:e.dtype]*g.sizeFromShape(e.shape),l=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(l(),i[n]=!0)})):l(),o.push(e.name),n+=u}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=s.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),c=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;c.push(t)}))}));const p=await e(c),d={};let f=0;return u.forEach((e=>{const n=t[e].paths.length,r=new h.w(p.slice(f,f+n));a[e].forEach((e=>{const t=r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=(0,l.dI)(t,[e.manifestEntry]);for(const r in n)d[r]=n[r]})),f+=n})),d}}class k{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,g.assert)("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,u.OB)().platform.fetch,(0,g.assert)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,g.assert)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=(0,l.Yd)(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=h.w.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:(0,l.Q)(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(n){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}if(null==t.modelTopology&&null==t.weightsManifest)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return(0,l.jN)(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),s=n>t?e.substring(n):"";return[r+"/",s]}(t),s=this.weightPathPrefix||n,a=(0,l.hu)(e),i=[],o=[];for(const u of e)for(const e of u.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(s+e+r);this.weightUrlConverter&&i.push(...await Promise.all(o));return[a,await x(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress})]}}function I(e){return null!=e.match(k.URL_SCHEME_REGEX)}k.URL_SCHEME_REGEX=/^https?:\/\//;const S=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>I(e))):I(e),n)return N(e,t)}return null};function N(e,t){return new k(e,t)}function T(e,t){return N(e,t)}c.U3.registerSaveRouter(S),c.U3.registerLoadRouter(S);class C{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class ${constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class E{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function A(e,t,n,r){return new E(_(...arguments))}function _(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new C(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new C({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new C({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function D(e){return new $(e)}function R(e){return new $(e)}var O=n(780),F=n(3740),M=n(2271),B=(n(8687),n(6708),n(2668));n(9065);var L=n(2200),z=n(7097),U=n(9121),P=n(6151),V=n(4077),W=n(9906);let G,H=!1;function j(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=(0,P.pI)(U.eBW,z.BV.backendName)){return z.BV.runKernel(U.eBW,{pixels:e},{numChannels:t})}const[u,l]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i)c=e.getContext("2d").getImageData(0,0,u,l).data;else if(r||n)c=e.data;else if(a||s||o){if(null==G)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");G=new OffscreenCanvas(1,1).getContext("2d")}else G=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});G.canvas.width=u,G.canvas.height=l,G.drawImage(e,0,0,u,l),c=G.getImageData(0,0,u,l).data}if(4===t)h=new Int32Array(c);else{const e=u*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return(0,W.w)(h,[l,u,t],"int32")}function X(e){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function q(e,t=3){let n=null;if((0,u.OB)().getBool("WRAP_TO_IMAGEBITMAP")&&X(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return j(n,t)}function K(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}async function Y(e,t){let n=(0,F._1)(e,"img","toPixels");if(!(e instanceof V.es)){const e=n;n=(0,M.p)(e,"int32"),e.dispose()}K(n);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2],i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(s*r*4);for(let l=0;l<r*s;++l){const e=[0,0,0,255];for(let r=0;r<a;r++){const t=i[l*a+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===a?(e[0]=t*o,e[1]=t*o,e[2]=t*o):e[r]=t*o}const t=4*l;u[t+0]=Math.round(e[0]),u[t+1]=Math.round(e[1]),u[t+2]=Math.round(e[2]),u[t+3]=Math.round(e[3])}if(null!=t){if(!H){null!=(0,P.pI)(U.hGc,z.BV.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),H=!0)}t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}function Q(e,t,n){let r=(0,F._1)(e,"img","draw");if(!(e instanceof V.es)){const e=r;r=(0,M.p)(e,"int32"),e.dispose()}K(r),function(e){const t=(null===e||void 0===e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}(null===n||void 0===n?void 0:n.imageOptions);z.BV.runKernel(U.hGc,{image:r},{canvas:t,options:n})}const Z=(0,B.op)({fromPixels_:j});function J(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===(0,g.sizeFromShape)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let h=0;h<s.length-1;++h)i*=s[h];const o=e.shape,u=s.slice();u.pop();let l=1;for(let h=a;h<n;++h)l*=o[h],u.push(o[h]);const c=[...(0,g.computeStrides)(e.shape).map((e=>e/l)),1].slice(0,a);return[u,i,l,c]}var ee=n(3028),te=n(7650),ne=n(3393),re=n(747);n(6625);const se="4.10.0";var ae=n(2134),ie=n(2515),oe=n(7463),ue=n(3888),le=n(9406),ce=n(1015),he=n(4803),pe=n(5726);var de=n(1221),fe=n(985);n(9876);const me=class{static sgd(e){return new pe.D(e)}static momentum(e,t,n=!1){return new le.r(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new he.g(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new oe.a(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new ae.z(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new ue.D(e,t,n,r,s)}static adagrad(e,t=.1){return new ie.H(e,t)}};var ge=n(4368);n(633);const ye="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function be(){return new Promise((e=>ye((()=>e()))))}var xe=n(3591);function we(e,t){const n=e[0].length;e.forEach(((e,t)=>{g.assert(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),g.assert(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)g.assert(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function ve(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var ke,Ie=n(2582),Se=n(9323);function Ne(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const a=n[s],i=r[r.length-n.length+s],o=r[i];if(a>=0)if(o>=0){if(o!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${a} but shape[${s+e}] = ${o}`)}else r[i]=a}return r}function Te(e){const t={FIRST_DIM_SIZE:ke.FIRST_DIM_SIZE,VALUE_ROWIDS:ke.VALUE_ROWIDS,ROW_LENGTHS:ke.ROW_LENGTHS,ROW_SPLITS:ke.ROW_SPLITS,ROW_LIMITS:ke.ROW_LIMITS,ROW_STARTS:ke.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function Ce(e){return 0===e.length?0:e[0]===ke.FIRST_DIM_SIZE?e.length-1:e.length}function $e(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}(function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"})(ke||(ke={}));const Ee=30;function Ae(e){return e<=Ee?e:(0,g.nearestDivisor)(e,Math.floor(Math.sqrt(e)))}function _e(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function De(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function Re(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2===1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Oe(e,t,n,r=!0){const s=[];s.push(r?e[0]/n:e[0]*n);for(let a=1;a<e.length;++a)s.push(a<=t.length?r?t[a-1]*e[a]:e[a]/t[a-1]:e[a]);return s}function Fe(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Me(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}var Be=n(3179);const Le=.3275911,ze=.254829592,Ue=-.284496736,Pe=1.421413741,Ve=-1.453152027,We=1.061405429;var Ge=n(4706);function He(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function je(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Xe(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=0;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function qe(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let s=2;s<e.length;s+=4)n[Math.floor(s/4)]=e[s],r[Math.floor(s/4)]=e[s+1];return{real:n,imag:r}}function Ke(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Ye(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function Qe(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function Ze(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}var Je=n(569);const et="->",tt=/->/g,nt=",",rt="...";function st(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(tt,"").length)/et.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${et}").`);const[r,s]=e.split(et);(0,Je.hu)(-1===r.indexOf(rt),(()=>`The ellipsis notation ("${rt}") is not supported yet.`));const a=r.split(nt),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let h=0;h<s.length;++h){const e=s[h];if(!a.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let h=0;h<r.length;++h){const e=r[h];-1===o.indexOf(e)&&e!==nt&&o.push(e)}const u=new Array(a.length);for(let h=0;h<i;++h){if(new Set(a[h].split("")).size!==a[h].length)throw new Error(`Found duplicate axes in input component ${a[h]}. Support for duplicate axes in input is not implemented yet.`);u[h]=[];for(let e=0;e<a[h].length;++e)u[h].push(o.indexOf(a[h][e]))}const l=o.length,c=[];for(let h=s.length;h<l;++h)c.push(h);return{allDims:o,summedDims:c,idDims:u}}function at(e,t){let n=new Array(e);n.fill(-1);for(let s=0;s<t.length;++s)n[t[s]]=s;const r=[];for(let s=0;s<e;++s)-1===n[s]&&r.push(s);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function it(e,t,n){const r=new Array(e);for(let s=0;s<n.length;++s){const e=n[s].shape;for(let n=0;n<t[s].length;++n)void 0===r[t[s][n]]?r[t[s][n]]=e[n]:(0,Je.hu)(r[t[s][n]]===e[n],(()=>`Expected dimension ${r[t[s][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function ot(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let i=0;i<s;++i)r.push([]);const a=[];for(let i=0;i<n.length;++i){const e=lt(t,n[i]);for(const t of e)-1===a.indexOf(t)&&(r[i].push(t),a.push(t))}return{path:n,steps:r}}function ut(e){return e.every(((e,t)=>e===t))}function lt(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function ct(e,t,n=0){let r=[];if("number"===typeof t)(0,g.assert)(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,g.assert)(s<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}(0,g.assert)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function ht(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function pt(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function dt(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function ft(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function mt(e,t){return`size ${e} must be non-negative, not ${t}`}function gt(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function yt(e,t){return`Input to reshape is a SparseTensor with ${(0,g.sizeFromShape)(e)}\n  dense values, but the requested shape requires a multiple of ${(0,g.sizeFromShape)(t)}. inputShape=${e} outputShape= ${t}`}function bt(e,t){return`Input to reshape is a tensor with ${(0,g.sizeFromShape)(e)} dense values, but the requested shape has ${(0,g.sizeFromShape)(t)}. inputShape=${e} outputShape=${t}`}function xt(){return"segment ids must be >= 0"}function wt(){return"segment ids are not increasing"}function vt(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function kt(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function It(e,t){let n,r=!1;for(e<=Ee?(n=e,r=!0):n=(0,g.nearestDivisor)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=(0,g.nearestDivisor)(e,n+1);return n}function St(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)r.push(a!==t?e[a]:n);return r}function Nt(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let h=0;h<r;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let h=0;h<r;++h)o.push(e.shape[h]),u*=e.shape[h];for(let h=r;h<n;h++)o.push(e.shape[h]),l*=e.shape[h];for(let h=r;h<s;h++)o.push(t.shape[h]);for(let h=n+1;h<a;h++)o.push(e.shape[h]),c*=e.shape[h];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function Tt(e){try{return e.map((e=>(0,g.decodeString)(e)))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function Ct(e){return e.map((e=>(0,g.encodeString)(e)))}var $t=n(5999),Et=n(3337),At=n(8333),_t=n(8713)},5999:function(e,t,n){let r;function s(e){r=e}function a(e){if(void 0!==r)return r;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function i(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}n.r(t),n.d(t,{isBrowser:function(){return i},isMobile:function(){return a},mockIsMobile:function(){return s}})},7097:function(e,t,n){n.d(t,{BV:function(){return x},wv:function(){return b}});var r=n(8713),s=n(2885),a=n(5938),i=n(9121),o=n(6151),u=n(4706),l=n(9122);class c{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let i;const o=l.now();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();i=Promise.resolve({kernelMs:l.now()-o})}if((0,s.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let s=0;s<r.length;s++){const t=r[s];t.data().then((n=>{h(n,t.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function h(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class p{logKernelProfile(e,t,n,r,s,a){const i="number"===typeof r?l.rightPad(`${r}ms`,9):r.error,o=l.rightPad(e,25),u=t.rank,c=t.size,h=l.rightPad(t.shape.toString(),14);let p="";for(const l in s){const e=s[l];if(null!=e){const n=e.shape||t.shape,r=n.length;p+=`${l}: ${r}D ${r>0?n:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${h}\t%c${c}\t%c${p}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var d=n(4077),f=n(747);function m(e){return null!=e.kernelName}class g{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class y{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new g}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(u.Z(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new c(this.backendInstance),!0}setupRegisteredKernels(){(0,o.tr)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,o.tr)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.Zu||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,u.Z(`Initialization of backend ${e} failed`),u.Z(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return u.Z(`Initialization of backend ${e} failed`),u.Z(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return y.nextTensorId++}nextVariableId(){return y.nextVariableId++}clone(e){const t=x.runKernel(i.iJz,{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[t],(e=>({x:()=>x.runKernel(i.RFZ,{x:e},{dtype:"float32"})})),[],{}),t}runKernel(e,t,n){if(!(null!=(0,o.pI)(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=r-t-s-this.state.numDataMovesStack[this.state.numDataMovesStack.length-1];if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const c=m(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(m(e)){const{kernelName:t,inputs:s,attrs:a}=e,c=(0,o.pI)(t,this.backendName);l.assert(null!=c,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();u=c.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const o=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();u=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,e,n),n}}const{inputs:h,attrs:p}=e,d=m(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(c,h,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=i()})),r&&this.addTapeNode(c,h,t,d,n,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map((e=>null!=h[e]?h[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=(0,o.uk)(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(l.assert(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return a.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");r=r||this.backend;let s=e;"string"===(n=n||"float32")&&l.isString(e[0])&&(s=e.map((e=>l.encodeString(e))));const a=r.write(s,t,n),i=new d.es(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=(0,l.bytesFromStringArray)(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){return this.makeTensorFromTensorInfo({dataId:e,shape:t,dtype:n=n||"float32"},r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,a=new d.es(r,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new d._w(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*l.bytesPerElement(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof d._w||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*l.bytesPerElement(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){this.disposeVariable(this.state.registeredVariables[e])}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},u=(0,o.uk)(e);null!=u&&(r=u.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=l.makeZerosTypedArray(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,f.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let s=0;s<this.state.activeScope.track.length;s++){const e=this.state.activeScope.track[s];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(l.assert(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));l.assert(s instanceof d.es,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let u=0;u<t.length;u++)r[t[u].id]=!0;for(let u=0;u<e.length;u++){const n=e[u],a=n.inputs;for(const e in a){const i=a[e];let o=!1;for(let e=0;e<t.length;e++)if(r[i.id]){n.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[n.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let u=e.length-1;u>=0;u--){const t=e[u],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(a[t.outputs[e].id]){for(const e in n)a[n[e].id]=!0,i[t.id]=!0;break}}const o=[];for(let u=0;u<e.length;u++){const t=e[u];if(s[t.id]&&i[t.id]){const e={};for(const s in t.inputs){const n=t.inputs[s];r[n.id]&&(e[s]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=(0,l.makeOnesTypedArray)((0,l.sizeFromShape)(e),"float32");return x.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];i.push(null!=n?n:null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!l.arraysEqual(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),w);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return l.assert(l.isFunction(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;l.assert(t.every((e=>e instanceof d.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),l.assert(n.value instanceof d.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),l.assert(l.isFunction(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];l.assert(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),l.assert(a.every((e=>e instanceof d.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,l.now)(),n=await this.backend.time(e);return n.wallMs=(0,l.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new g;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function b(){const e=(0,a.D)();if(null==e._tfengine){const t=new s.qA(e);e._tfengine=new y(t)}return(0,s.iG)(e._tfengine.ENV),(0,d.Vi)((()=>e._tfengine)),e._tfengine}y.nextTensorId=0,y.nextVariableId=0;const x=b();function w(e,t){return x.runKernel(i.mm_,{a:e,b:t})}},2885:function(e,t,n){n.d(t,{OB:function(){return o},iG:function(){return l},qA:function(){return a}});var r=n(569);const s="tfjsflags";class a{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=i,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(o().getBool("IS_TEST")||o().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];o().getBool("IS_TEST")||o().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,r.tI)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(s in e){e[s].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}}function i(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function o(){return u}let u=null;function l(e){u=e}},9998:function(e,t,n){n(7097);var r=n(5999),s=n(2885),a=n(4155);const i=(0,s.OB)();i.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),i.registerFlag("IS_BROWSER",(()=>r.isBrowser())),i.registerFlag("IS_NODE",(()=>"undefined"!==typeof a&&"undefined"!==typeof a.versions&&"undefined"!==typeof a.versions.node)),i.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),i.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),i.registerFlag("PROD",(()=>!1)),i.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>i.getBool("DEBUG"))),i.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),i.registerFlag("IS_TEST",(()=>!1)),i.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>i.getBool("DEBUG"))),i.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),i.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),i.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1))},5938:function(e,t,n){n.d(t,{D:function(){return a},R:function(){return i}});var r=n(4155);let s;function a(){if(null==s){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof r)e=r;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}s=e}return s}function i(e,t){const n=function(){const e=a();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}},4368:function(e,t,n){n.d(t,{B9:function(){return c},Cd:function(){return p},Cn:function(){return h},SR:function(){return o},jq:function(){return d},lu:function(){return l},sq:function(){return u},y3:function(){return f}});var r=n(7097),s=n(2885),a=n(4077),i=n(747);function o(){return r.BV}function u(){return r.BV.memory()}function l(e,t){return r.BV.tidy(e,t)}function c(e){(0,i.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function h(e){return r.BV.keep(e)}function p(){return r.BV.ready()}function d(e,t,n=1){return r.BV.registerBackend(e,t,n)}function f(){return r.BV.backend}(0,a.FZ)((function(e){(0,s.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}))},633:function(e,t,n){n.d(t,{cb:function(){return o},pn:function(){return i}});var r=n(7097),s=n(4077),a=(n(3740),n(9122));function i(e,t){a.assert(a.isFunction(e),(()=>"The f passed in variableGrads(f) must be a function")),a.assert(null==t||Array.isArray(t)&&t.every((e=>e instanceof s._w)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in r.BV.registeredVariables)t.push(r.BV.registeredVariables[e])}const i=n?t.filter((e=>!e.trainable)):null,o=t.length;t=t.filter((e=>e.trainable)),a.assert(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`));const{value:u,grads:l}=r.BV.gradients(e,t,null,!0);a.assert(l.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),a.assert(0===u.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`));const c={};return t.forEach(((e,t)=>{null!=l[t]&&(c[e.name]=l[t])})),null!=i&&i.forEach((e=>c[e.name]=null)),{value:u,grads:c}}function o(e){return r.BV.customGrad(e)}},9790:function(e,t,n){n.d(t,{SYM:function(){return $.SYM},VGw:function(){return $.VGw},SpW:function(){return $.SpW},mm_:function(){return $.mm_},Xze:function(){return $.Xze},oT6:function(){return $.oT6},IKK:function(){return $.IKK},sJF:function(){return $.sJF},aJk:function(){return $.aJk},M2y:function(){return $.M2y},qw7:function(){return $.qw7},jMg:function(){return $.jMg},QCc:function(){return $.QCc},Oyi:function(){return $.Oyi},JhU:function(){return $.JhU},_k9:function(){return $._k9},IMb:function(){return $.IMb},ROF:function(){return $.ROF},XLW:function(){return $.XLW},zws:function(){return $.zws},zvY:function(){return $.zvY},hCO:function(){return $.hCO},eEB:function(){return $.eEB},RFZ:function(){return $.RFZ},gJX:function(){return $.gJX},xnO:function(){return $.xnO},Zz9:function(){return $.Zz9},yj2:function(){return $.yj2},Eh3:function(){return $.Eh3},mhS:function(){return $.mhS},wUP:function(){return $.wUP},wm:function(){return $.wm},x12:function(){return $.x12},o2y:function(){return $.o2y},ik2:function(){return $.ik2},mc4:function(){return $.mc4},TR1:function(){return $.TR1},VcC:function(){return $.VcC},Byc:function(){return $.Byc},iHb:function(){return $.iHb},JLz:function(){return $.JLz},QRR:function(){return $.QRR},T0n:function(){return $.T0n},cie:function(){return $.cie},sL$:function(){return $.sL$},y7R:function(){return $.y7R},$w:function(){return $.$w},p4S:function(){return $.p4S},Vn9:function(){return $.Vn9},ekb:function(){return $.ekb},hGc:function(){return $.hGc},$g6:function(){return $.$g6},SX0:function(){return $.SX0},HEU:function(){return $.HEU},hdR:function(){return $.hdR},Omj:function(){return $.Omj},NEP:function(){return $.NEP},YFo:function(){return $.YFo},Y0y:function(){return $.Y0y},vwp:function(){return $.vwp},deh:function(){return $.deh},Uyb:function(){return $.Uyb},OR:function(){return $.OR},jeX:function(){return $.jeX},eBW:function(){return $.eBW},sHE:function(){return $.sHE},_V0:function(){return $._V0},luS:function(){return $.luS},q1x:function(){return $.q1x},qi_:function(){return $.qi_},iZT:function(){return $.iZT},Acj:function(){return $.Acj},Qg5:function(){return $.Qg5},iJz:function(){return $.iJz},J_u:function(){return $.J_u},avt:function(){return $.avt},iWB:function(){return $.iWB},r7n:function(){return $.r7n},Zuw:function(){return $.Zuw},eZ0:function(){return $.eZ0},Hhh:function(){return $.Hhh},J$2:function(){return $.J$2},vtC:function(){return $.vtC},CAk:function(){return $.CAk},e7N:function(){return $.e7N},ZbH:function(){return $.ZbH},kU:function(){return $.kU},PYm:function(){return $.PYm},VfG:function(){return $.VfG},MZg:function(){return $.MZg},YoZ:function(){return $.YoZ},mTV:function(){return $.mTV},OAf:function(){return $.OAf},OU7:function(){return $.OU7},OV7:function(){return $.OV7},vFR:function(){return $.vFR},BMI:function(){return $.BMI},q2K:function(){return $.q2K},c17:function(){return $.c17},q8u:function(){return $.q8u},jQs:function(){return $.jQs},Vbg:function(){return $.Vbg},NZg:function(){return $.NZg},wYn:function(){return $.wYn},kuV:function(){return $.kuV},uv1:function(){return $.uv1},cye:function(){return $.cye},W0H:function(){return $.W0H},yQU:function(){return $.yQU},we_:function(){return $.we_},qWM:function(){return $.qWM},gaJ:function(){return $.gaJ},QiL:function(){return $.QiL},lyA:function(){return $.lyA},pe_:function(){return $.pe_},o0g:function(){return $.o0g},DlI:function(){return $.DlI},dDz:function(){return $.dDz},CQl:function(){return $.CQl},BiW:function(){return $.BiW},e6w:function(){return $.e6w},xJR:function(){return $.xJR},oHH:function(){return $.oHH},$HU:function(){return $.$HU},qkr:function(){return $.qkr},SbG:function(){return $.SbG},HZH:function(){return $.HZH},_Yw:function(){return $._Yw},zbQ:function(){return $.zbQ},dpD:function(){return $.dpD},Hmb:function(){return $.Hmb},mKl:function(){return $.mKl},b9H:function(){return $.b9H},e07:function(){return $.e07},bV0:function(){return $.bV0},xQA:function(){return $.xQA},nr8:function(){return $.nr8},PhF:function(){return $.PhF},oFR:function(){return $.oFR},a5O:function(){return $.a5O},i5y:function(){return $.i5y},RQH:function(){return $.RQH},wYB:function(){return $.wYB},p2w:function(){return $.p2w},Gcp:function(){return $.Gcp},MRv:function(){return $.MRv},TQc:function(){return $.TQc},O3z:function(){return $.O3z},nhH:function(){return $.nhH},w3H:function(){return $.w3H},ZjV:function(){return $.ZjV},D2d:function(){return $.D2d},L8s:function(){return $.L8s},FKq:function(){return $.FKq},bK0:function(){return $.bK0},_tC:function(){return $._tC},e0R:function(){return $.e0R},h8e:function(){return $.h8e},jQk:function(){return $.jQk},_JP:function(){return $._JP},s1s:function(){return $.s1s},XkS:function(){return $.XkS},Tr8:function(){return $.Tr8},GBy:function(){return $.GBy},sEM:function(){return $.sEM},MIZ:function(){return $.MIZ},esB:function(){return $.esB},YDk:function(){return $.YDk},SIB:function(){return $.SIB},n9L:function(){return $.n9L},cWu:function(){return $.cWu},wx7:function(){return $.wx7},G3Y:function(){return $.G3Y},kpP:function(){return $.kpP},ToN:function(){return $.ToN},Qvg:function(){return $.Qvg},RuY:function(){return $.RuY},usg:function(){return $.usg},WnP:function(){return $.WnP},IHx:function(){return $.IHx},$6P:function(){return $.$6P},YjB:function(){return $.YjB},NqF:function(){return $.NqF},wS1:function(){return $.wS1},uR5:function(){return $.uR5},y3$:function(){return $.y3$},backend_util:function(){return $.Wap},Dxk:function(){return $.Dxk},JY5:function(){return $.JY5},p3b:function(){return $.p3b},UFq:function(){return $.UFq},Jyw:function(){return $.Jyw},Xhn:function(){return $.Xhn},f3b:function(){return $.f3b},pju:function(){return $.pju},iUl:function(){return $.iUl},d9v:function(){return $.d9v},zoF:function(){return $.zoF},gME:function(){return $.gME},Izb:function(){return $.Izb},MNy:function(){return $.MNy},ZaL:function(){return $.ZaL},PAt:function(){return $.PAt},Tek:function(){return $.Tek},bc:function(){return $.bc},pdZ:function(){return $.pdZ},$QV:function(){return $.$QV},ppE:function(){return $.ppE},B10:function(){return $.B10},C2$:function(){return $.C2$},B90:function(){return $.B90},hiC:function(){return $.hiC},rvX:function(){return $.rvX},pyx:function(){return $.pyx},SRH:function(){return $.SRH},OBj:function(){return $.OBj},DgJ:function(){return $.DgJ},Qqt:function(){return $.Qqt},dt4:function(){return $.dt4},iyy:function(){return $.iyy},hlL:function(){return $.hlL},GWj:function(){return $.GWj},imm:function(){return $.imm},Iqj:function(){return $.Iqj},pjt:function(){return $.pjt},brS:function(){return $.brS},image:function(){return $.BHj},io:function(){return $.io},CnY:function(){return $.CnY},GDt:function(){return $.GDt},hi7:function(){return $.hi7},$r2:function(){return $.$r2},cM7:function(){return $.cM7},Krr:function(){return $.Krr},CmS:function(){return $.CmS},HvI:function(){return $.HvI},OI3:function(){return $.OI3},Fp7:function(){return $.Fp7},_sB:function(){return $._sB},YQQ:function(){return $.YQQ},gWQ:function(){return $.gWQ},J69:function(){return $.J69},sq6:function(){return $.sq6},VV$:function(){return $.VV$},LTh:function(){return $.LTh},Gi7:function(){return $.Gi7},dC7:function(){return $.dC7},W76:function(){return $.W76},glt:function(){return $.glt},Quu:function(){return $.Quu},lfX:function(){return $.lfX},iUs:function(){return $.iUs},JpU:function(){return $.JpU},vku:function(){return $.vku},AL3:function(){return $.AL3},nGf:function(){return $.nGf},LGj:function(){return $.LGj},w6H:function(){return $.w6H},Cd_:function(){return $.Cd_},jqO:function(){return $.jqO},wCN:function(){return $.wCN},UYe:function(){return $.UYe},XLQ:function(){return $.XLQ},GYS:function(){return $.GYS},iD$:function(){return $.iD$},U8D:function(){return $.U8D},U_I:function(){return $.U_I},m7h:function(){return $.m7h},XD2:function(){return $.XD2},tPi:function(){return $.tPi},jZU:function(){return $.jZU},SmN:function(){return $.SmN},CnO:function(){return $.CnO},p0P:function(){return $.p0P},kuN:function(){return $.kuN},XAC:function(){return $.XAC},Wvh:function(){return $.Wvh},Vl2:function(){return $.Vl2},_b3:function(){return $._b3},L9e:function(){return $.L9e},knu:function(){return $.knu},luU:function(){return $.luU},Smz:function(){return $.Smz},z4k:function(){return $.z4k},AEp:function(){return $.AEp},XeE:function(){return $.XeE},RRF:function(){return $.RRF},piX:function(){return $.piX},lub:function(){return $.lub},Gg6:function(){return $.Gg6},p_j:function(){return $.p_j},p4s:function(){return $.p4s},Xu6:function(){return $.Xu6},HHK:function(){return $.HHK},x8V:function(){return $.x8V},D5U:function(){return $.D5U},VD$:function(){return $.VD$},jTM:function(){return $.jTM},arb:function(){return $.arb},lls:function(){return $.lls},P84:function(){return $.P84}});var r=n(7097),s=(n(9998),n(2885)),a=n(1044),i=n(8209),o=n(780),u=n(9742);class l{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&(0,s.OB)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return(0,u.j)(e)}}if((0,s.OB)().get("IS_BROWSER")){(0,s.OB)().setPlatform("browser",new l);try{o.xQ.registerManager(i.Ew.URL_SCHEME,new i.JL)}catch(E){}try{o.xQ.registerManager(a.ns.URL_SCHEME,new a.y$)}catch(E){}}var c=n(4155);const h=()=>n(5410);let p;class d{constructor(){this.util=n(8628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,s.OB)().global.fetch?(0,s.OB)().global.fetch(e,t):(null==p&&(p=h()),p(e,t))}now(){const e=c.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}(0,s.OB)().get("IS_NODE")&&!(0,s.OB)().get("IS_BROWSER")&&(0,s.OB)().setPlatform("node",new d);var f=n(2657),m=n(2271),g=n(8723),y=n(9798),b=n(4077);(0,r.wv)();(0,b.Vp)({buffer:f.f,cast:m.p,clone:g.d,print:y.S});var x=n(2134),w=n(2515),v=n(7463),k=n(3888),I=n(9406),S=n(4803),N=n(5726),T=n(3393);const C=[x.z,w.H,v.a,k.D,I.r,S.g,N.D];var $=n(5010);(function(){for(const e of C)(0,T.registerClass)(e)})()},574:function(e,t,n){n.d(t,{w:function(){return s}});var r=n(9122);class s{static join(e){return new s(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>r.isTypedArray(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const s=t+r.byteLength;this.shards.push({buffer:r,start:t,end:s}),t=s}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),s=new Uint8Array(r);let a=0;for(let i=n;i<this.shards.length;i++){const n=this.shards[i],r=e+a-n.start,o=a,u=Math.min(t,n.end),l=new Uint8Array(n.buffer,r,u-n.start-r);if(s.set(l,o),a+=l.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const s=Math.floor((r-n)/2)+n,a=t(e[s]);if(0===a)return s;a<0?r=s:n=s+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}},1044:function(e,t,n){n.d(t,{ns:function(){return p},y$:function(){return f}});n(9998);var r=n(2885),s=n(1989),a=n(6493),i=n(574);const o="tensorflowjs",u="models_store",l="model_info_store";function c(){if(!(0,r.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function h(e){const t=e.result;t.createObjectStore(u,{keyPath:"modelPath"}),t.createObjectStore(l,{keyPath:"modelPath"})}class p{constructor(e){if(this.indexedDB=c(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(o,1);r.onupgradeneeded=()=>h(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(u,"readonly"),r=t.objectStore(u).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{t.weightData=i.w.join(t.weightData);const r=(0,s.Q)(t),c=a.transaction(l,"readwrite");let h,p,d=c.objectStore(l);try{h=d.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(o){return n(o)}h.onsuccess=()=>{p=a.transaction(u,"readwrite");const s=p.objectStore(u);let i;try{i=s.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(o){return n(o)}i.onsuccess=()=>e({modelArtifactsInfo:r}),i.onerror=e=>{d=c.objectStore(l);const t=d.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(i.error)),t.onerror=e=>(a.close(),n(i.error))}},h.onerror=e=>(a.close(),n(h.error)),c.oncomplete=()=>{null==p?a.close():p.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}p.URL_SCHEME="indexeddb://";const d=e=>{return(0,r.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(p.URL_SCHEME)?(t=e.slice(p.URL_SCHEME.length),new p(t)):null;var t};a.U3.registerSaveRouter(d),a.U3.registerLoadRouter(d);class f{constructor(){this.indexedDB=c()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(o,1);n.onupgradeneeded=()=>h(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(l,"readonly"),a=s.objectStore(l).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(p.URL_SCHEME)?t.slice(p.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(o,1);r.onupgradeneeded=()=>h(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(l,"readwrite"),i=a.objectStore(l),o=i.get(e);let c;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{c=s.transaction(u,"readwrite");const r=c.objectStore(u).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==c?s.close():c.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}},1989:function(e,t,n){n.d(t,{EZ:function(){return b},JY:function(){return y},Q:function(){return k},Yd:function(){return x},_n:function(){return m},dI:function(){return h},hu:function(){return I},jN:function(){return v},ji:function(){return w},n7:function(){return g},yz:function(){return c}});var r=n(1661),s=n(701),a=n(9122),i=n(5771),o=n(574),u=n(8764).lW;const l=4;async function c(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+l*t.length,r=new Uint8Array(n);let s=0;for(let a=0;a<t.length;a++){const e=t[a],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,s),s+=l,r.set(e,s),s+=e.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:p(await Promise.all(r)),specs:n}}function h(e,t){const n=new o.w(e),u={};let c,h=0;for(const o of t){const e=o.name,t=o.dtype,p=o.shape,d=(0,a.sizeFromShape)(p);let f;if("quantization"in o){const r=o.quantization;if("uint8"===r.dtype||"uint16"===r.dtype){if(!("min"in r)||!("scale"in r))throw new Error(`Weight ${o.name} with quantization ${r.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==r.dtype)throw new Error(`Weight ${o.name} has unknown quantization dtype ${r.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==t)throw new Error(`Weight ${o.name} is quantized with ${r.dtype} which only supports weights of type float32 not ${t}.`)}const s=i.J[r.dtype],a=n.slice(h,h+d*s),u="uint8"===r.dtype?new Uint8Array(a):new Uint16Array(a);if("float32"===t)if("uint8"===r.dtype||"uint16"===r.dtype){f=new Float32Array(u.length);for(let e=0;e<u.length;e++){f[e]=u[e]*r.scale+r.min}}else{if("float16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type float32.`);void 0===c&&(c=S()),f=c(u)}else{if("int32"!==t)throw new Error(`Unsupported dtype in weight '${e}': ${t}`);if("uint8"!==r.dtype&&"uint16"!==r.dtype)throw new Error(`Unsupported quantization type ${r.dtype} for weight type int32.`);f=new Int32Array(u.length);for(let e=0;e<u.length;e++){f[e]=Math.round(u[e]*r.scale+r.min)}}h+=d*s}else if("string"===t){const e=(0,a.sizeFromShape)(o.shape);f=[];for(let t=0;t<e;t++){const e=new Uint32Array(n.slice(h,h+l))[0];h+=l;const t=new Uint8Array(n.slice(h,h+e));f.push(t),h+=e}}else{const a=i.J[t],o=n.slice(h,h+d*a);if("float32"===t)f=new Float32Array(o);else if("int32"===t)f=new Int32Array(o);else if("bool"===t)f=new Uint8Array(o);else{if("complex64"!==t)throw new Error(`Unsupported dtype in weight '${e}': ${t}`);{f=new Float32Array(o);const t=new Float32Array(f.length/2),n=new Float32Array(f.length/2);for(let e=0;e<t.length;e++)t[e]=f[2*e],n[e]=f[2*e+1];const a=(0,s.X)(t,p,"float32"),i=(0,s.X)(n,p,"float32");u[e]=(0,r.P)(a,i),a.dispose(),i.dispose()}}h+=d*a}"complex64"!==t&&(u[e]=(0,s.X)(f,p,t))}return u}function p(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const d="undefined"!==typeof u&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function f(e){return d?u.byteLength(e,"utf8"):new Blob([e]).size}function m(e){if(d)return u.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let r=0,s=t.length;r<s;r++)n+=String.fromCharCode(t[r]);return btoa(n)}function g(e){if(d){const t=u.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}function y(e){return o.w.join(e)}function b(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function x(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function w(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}async function v(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),w(e,n,r)}function k(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:f(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:f(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new o.w(e.weightData).byteLength}}function I(e){const t=[];for(const n of e)t.push(...n.weights);return t}function S(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let i=0;i<r.length;i++){const s=r[i];a[i]=e[n[s>>10]+(1023&s)]+t[s>>10]}return new Float32Array(s)}}},8209:function(e,t,n){n.d(t,{Ew:function(){return b},JL:function(){return w}});n(9998);var r=n(2885),s=n(9122),a=n(1989),i=n(574),o=n(6493);const u="/",l="tensorflowjs_models",c="info",h="model_topology",p="weight_specs",d="weight_data",f="model_metadata";function m(e){return{info:[l,e,c].join(u),topology:[l,e,h].join(u),weightSpecs:[l,e,p].join(u),weightData:[l,e,d].join(u),modelMetadata:[l,e,f].join(u)}}function g(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function y(e){const t=e.split(u);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(u)}class b{constructor(e){if(!(0,r.OB)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=m(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),s=(0,a.Q)(e),o=i.w.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,(0,a._n)(o));return this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0})),{modelArtifactsInfo:s}}catch(t){throw g(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=(0,a.n7)(i),t}}b.URL_SCHEME="localstorage://";const x=e=>{return(0,r.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(b.URL_SCHEME)?(t=e.slice(b.URL_SCHEME.length),new b(t)):null;var t};o.U3.registerSaveRouter(x),o.U3.registerLoadRouter(x);class w{constructor(){(0,s.assert)((0,r.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,s.assert)("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=l+u,n=u+c;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);if(s.startsWith(t)&&s.endsWith(n)){e[y(s)]=JSON.parse(this.LS.getItem(s))}}return e}async removeModel(e){var t;const n=m(e=(t=e).startsWith(b.URL_SCHEME)?t.slice(b.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return g(n),r}}},780:function(e,t,n){n.d(t,{ID:function(){return h},Ny:function(){return p},gw:function(){return c},h1:function(){return l},xQ:function(){return i}});var r=n(9122),s=n(6493);const a="://";class i{constructor(){this.managers={}}static getInstance(){return null==i.instance&&(i.instance=new i),i.instance}static registerManager(e,t){(0,r.assert)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(a)&&(e=e.slice(0,e.indexOf(a))),(0,r.assert)(e.length>0,(()=>"scheme must not be an empty string."));const n=i.getInstance();(0,r.assert)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=i.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(i.getInstance().managers)}}function o(e){if(-1===e.indexOf(a))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${i.getSchemes().join(",")}`);return{scheme:e.split(a)[0],path:e.split(a)[1]}}async function u(e,t,n=!1){(0,r.assert)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const a=s.U3.getLoadHandlers(e);(0,r.assert)(a.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,r.assert)(a.length<2,(()=>`Copying failed because more than one (${a.length}) load handlers for source URL ${e}.`));const u=a[0],l=s.U3.getSaveHandlers(t);(0,r.assert)(l.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,r.assert)(l.length<2,(()=>`Copying failed because more than one (${a.length}) save handlers for destination URL ${t}.`));const c=l[0],h=o(e).scheme,p=o(e).path,d=h===o(e).scheme,f=await u.load();n&&d&&await i.getManager(h).removeModel(p);const m=await c.save(f);return n&&!d&&await i.getManager(h).removeModel(p),m.modelArtifactsInfo}async function l(){const e=i.getSchemes(),t={};for(const n of e){const e=await i.getManager(n).listModels();for(const r in e){t[n+a+r]=e[r]}}return t}async function c(e){const t=o(e);return i.getManager(t.scheme).removeModel(t.path)}async function h(e,t){return u(e,t,!1)}async function p(e,t){return u(e,t,!0)}},6493:function(e,t,n){n.d(t,{U3:function(){return r},pS:function(){return a},rM:function(){return o},tf:function(){return s},yB:function(){return i}});class r{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==r.instance&&(r.instance=new r),r.instance}static registerSaveRouter(e){r.getInstance().saveRouters.push(e)}static registerLoadRouter(e){r.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return r.getHandlers(e,"save")}static getLoadHandlers(e,t){return r.getHandlers(e,"load",t)}static getHandlers(e,t,n){const s=[];return("load"===t?r.getInstance().loadRouters:r.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&s.push(r)})),s}}const s=e=>r.registerSaveRouter(e),a=e=>r.registerLoadRouter(e),i=e=>r.getSaveHandlers(e),o=(e,t)=>r.getLoadHandlers(e,t)},5771:function(e,t,n){n.d(t,{J:function(){return r}});const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},9121:function(e,t,n){n.d(t,{$HU:function(){return ft},$g6:function(){return te},$w:function(){return K},Acj:function(){return be},BMI:function(){return Le},BiW:function(){return ht},Byc:function(){return P},CAk:function(){return Ce},CQl:function(){return ct},D2d:function(){return Ht},DlI:function(){return ut},Eh3:function(){return D},FKq:function(){return Mt},G3Y:function(){return an},GBy:function(){return Bt},Gcp:function(){return Ut},HEU:function(){return re},HZH:function(){return gt},Hhh:function(){return Me},Hmb:function(){return bt},IKK:function(){return l},IMb:function(){return w},J$2:function(){return Ne},J_u:function(){return ve},JhU:function(){return y},L8s:function(){return zt},Ly9:function(){return N},M2y:function(){return p},MIZ:function(){return tn},MRv:function(){return Ft},MZg:function(){return Re},NEP:function(){return ie},NZg:function(){return Ke},O3z:function(){return Pt},OAf:function(){return Pe},OR:function(){return pe},OU7:function(){return Ve},OV7:function(){return Ue},Omj:function(){return se},Oyi:function(){return m},PYm:function(){return _e},PhF:function(){return $t},QCc:function(){return g},QRR:function(){return G},Qg5:function(){return we},QiL:function(){return st},Qvg:function(){return ln},RFZ:function(){return C},ROF:function(){return b},RQH:function(){return _t},RuY:function(){return cn},SIB:function(){return Tt},SX0:function(){return ne},SYM:function(){return r},SbG:function(){return vt},SpW:function(){return a},T0n:function(){return H},TQc:function(){return Lt},TR1:function(){return U},ToN:function(){return un},Tr8:function(){return Jt},Uyb:function(){return he},VGw:function(){return s},Vbg:function(){return qe},VcC:function(){return W},VfG:function(){return De},Vn9:function(){return Z},W0H:function(){return tt},XLW:function(){return v},XkS:function(){return Zt},Xze:function(){return o},Y0y:function(){return ue},YFo:function(){return oe},YoZ:function(){return Be},ZbH:function(){return Ee},ZjV:function(){return Gt},Zz9:function(){return A},_JP:function(){return Yt},_V0:function(){return mn},_Yw:function(){return xt},_k9:function(){return x},_tC:function(){return jt},a5O:function(){return Ot},aJk:function(){return h},avt:function(){return ke},b9H:function(){return dn},bK0:function(){return Xt},bV0:function(){return St},c17:function(){return He},cWu:function(){return rn},cie:function(){return j},cye:function(){return et},dDz:function(){return lt},deh:function(){return ce},dpD:function(){return yt},e07:function(){return It},e0R:function(){return qt},e6w:function(){return pt},e7N:function(){return $e},eBW:function(){return pn},eEB:function(){return T},eZ0:function(){return Fe},ekb:function(){return Q},gJX:function(){return $},h8e:function(){return hn},hCO:function(){return S},hGc:function(){return J},hdR:function(){return ae},i5y:function(){return Rt},iHb:function(){return V},iJz:function(){return xe},iWB:function(){return Ie},iZT:function(){return ye},ik2:function(){return L},jMg:function(){return f},jQk:function(){return Kt},jQs:function(){return Xe},jeX:function(){return de},kU:function(){return Ae},kpP:function(){return on},kuV:function(){return Qe},luS:function(){return gn},lyA:function(){return at},mKl:function(){return kt},mTV:function(){return ze},mc4:function(){return z},mhS:function(){return R},mm_:function(){return i},n9L:function(){return nn},nhH:function(){return Vt},nr8:function(){return Ct},o0g:function(){return ot},o2y:function(){return B},oFR:function(){return Et},oHH:function(){return ee},oT6:function(){return u},p2w:function(){return At},p4S:function(){return Y},pe_:function(){return it},q1x:function(){return ge},q2K:function(){return Ge},q8u:function(){return je},qCd:function(){return Oe},qWM:function(){return nt},qi_:function(){return me},qkr:function(){return mt},qw7:function(){return d},r7n:function(){return Se},s1s:function(){return Qt},sEM:function(){return en},sHE:function(){return fe},sJF:function(){return c},sL$:function(){return X},usg:function(){return fn},uv1:function(){return Je},vFR:function(){return We},vtC:function(){return Te},vwp:function(){return le},w3H:function(){return Wt},wUP:function(){return O},wYB:function(){return Dt},wYn:function(){return Ye},we_:function(){return rt},wm:function(){return F},wx7:function(){return sn},x12:function(){return M},xJR:function(){return dt},xQA:function(){return Nt},xnO:function(){return E},y7R:function(){return q},yQU:function(){return Ze},yj2:function(){return _},zbQ:function(){return wt},zvY:function(){return I},zws:function(){return k}});const r="Abs",s="Acos",a="Acosh",i="Add",o="AddN",u="All",l="Any",c="ArgMax",h="ArgMin",p="Asin",d="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",x="AvgPool3D",w="AvgPool3DGrad",v="BatchMatMul",k="BatchToSpaceND",I="Bincount",S="BitwiseAnd",N="BroadcastTo",T="BroadcastArgs",C="Cast",$="Ceil",E="ClipByValue",A="Complex",_="ComplexAbs",D="Concat",R="Conv2D",O="Conv2DBackpropFilter",F="Conv2DBackpropInput",M="Conv3D",B="Conv3DBackpropFilterV2",L="Conv3DBackpropInputV2",z="Cos",U="Cosh",P="Cumprod",V="Cumsum",W="CropAndResize",G="DenseBincount",H="DepthToSpace",j="DepthwiseConv2dNative",X="DepthwiseConv2dNativeBackpropFilter",q="DepthwiseConv2dNativeBackpropInput",K="Diag",Y="Dilation2D",Q="Dilation2DBackpropInput",Z="Dilation2DBackpropFilter",J="Draw",ee="RealDiv",te="Einsum",ne="Elu",re="EluGrad",se="Erf",ae="Equal",ie="Exp",oe="ExpandDims",ue="Expm1",le="FFT",ce="Fill",he="FlipLeftRight",pe="Floor",de="FloorDiv",fe="FusedBatchNorm",me="GatherV2",ge="GatherNd",ye="Greater",be="GreaterEqual",xe="Identity",we="IFFT",ve="Imag",ke="IsFinite",Ie="IsInf",Se="IsNan",Ne="LeakyRelu",Te="Less",Ce="LessEqual",$e="LinSpace",Ee="Log",Ae="Log1p",_e="LogicalAnd",De="LogicalNot",Re="LogicalOr",Oe="LogSoftmax",Fe="LRN",Me="LRNGrad",Be="Max",Le="Maximum",ze="MaxPool",Ue="MaxPoolGrad",Pe="MaxPool3D",Ve="MaxPool3DGrad",We="MaxPoolWithArgmax",Ge="Mean",He="Min",je="Minimum",Xe="MirrorPad",qe="Mod",Ke="Multinomial",Ye="Multiply",Qe="Neg",Ze="NotEqual",Je="NonMaxSuppressionV3",et="NonMaxSuppressionV4",tt="NonMaxSuppressionV5",nt="OnesLike",rt="OneHot",st="Pack",at="PadV2",it="Pow",ot="Prelu",ut="Prod",lt="RaggedGather",ct="RaggedRange",ht="RaggedTensorToTensor",pt="Range",dt="Real",ft="Reciprocal",mt="Relu",gt="Reshape",yt="ResizeNearestNeighbor",bt="ResizeNearestNeighborGrad",xt="ResizeBilinear",wt="ResizeBilinearGrad",vt="Relu6",kt="Reverse",It="Round",St="Rsqrt",Nt="ScatterNd",Tt="TensorScatterUpdate",Ct="SearchSorted",$t="Select",Et="Selu",At="Slice",_t="Sin",Dt="Sinh",Rt="Sign",Ot="Sigmoid",Ft="Softplus",Mt="Sqrt",Bt="Sum",Lt="SpaceToBatchND",zt="SplitV",Ut="Softmax",Pt="SparseFillEmptyRows",Vt="SparseReshape",Wt="SparseSegmentMean",Gt="SparseSegmentSum",Ht="SparseToDense",jt="SquaredDifference",Xt="Square",qt="StaticRegexReplace",Kt="StridedSlice",Yt="StringNGrams",Qt="StringSplit",Zt="StringToHashBucketFast",Jt="Sub",en="Tan",tn="Tanh",nn="Tile",rn="TopK",sn="Transform",an="Transpose",on="Unique",un="Unpack",ln="UnsortedSegmentSum",cn="ZerosLike",hn="Step",pn="FromPixels",dn="RotateWithOffset",fn="_FusedMatMul",mn="FusedConv2D",gn="FusedDepthwiseConv2D"},6151:function(e,t,n){n.d(t,{Li:function(){return p},pI:function(){return u},tr:function(){return c},uk:function(){return l},wC:function(){return h}});var r=n(2885),s=n(5938),a=n(4706);const i=(0,s.R)("kernelRegistry",(()=>new Map)),o=(0,s.R)("gradRegistry",(()=>new Map));function u(e,t){const n=d(e,t);return i.get(n)}function l(e){return o.get(e)}function c(e){const t=i.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function h(e){const{kernelName:t,backendName:n}=e,r=d(t,n);i.has(r)&&a.Z(`The kernel '${t}' for backend '${n}' is already registered`),i.set(r,e)}function p(e){const{kernelName:t}=e;o.has(t)&&(0,r.OB)().getBool("DEBUG")&&a.Z(`Overriding the gradient for '${t}'`),o.set(t,e)}function d(e,t){return`${t}_${e}`}},4706:function(e,t,n){n.d(t,{Z:function(){return s},c:function(){return a}});var r=n(2885);function s(...e){(0,r.OB)().getBool("IS_TEST")||(0,r.OB)().getBool("PROD")||console.warn(...e)}function a(...e){(0,r.OB)().getBool("IS_TEST")||(0,r.OB)().getBool("PROD")||console.log(...e)}},6235:function(e,t,n){n.d(t,{W:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({abs_:function(e){const t=(0,a._1)(e,"x","abs");if("complex64"===t.dtype){return r.BV.runKernel(s.yj2,{x:t})}return r.BV.runKernel(s.SYM,{x:t})}})},6407:function(e,t,n){n.d(t,{I:function(){return o}});var r=n(7097),s=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({add_:function(e,t){let n=(0,i._1)(e,"a","add"),o=(0,i._1)(t,"b","add");return[n,o]=(0,a.makeTypesMatch)(n,o),r.BV.runKernel(s.mm_,{a:n,b:o})}})},781:function(e,t,n){n.d(t,{$:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({all_:function(e,t=null,n=!1){const i=(0,a._1)(e,"x","all","bool");return r.BV.runKernel(s.oT6,{x:i},{axis:t,keepDims:n})}})},2998:function(e,t,n){n.d(t,{Y:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({any_:function(e,t=null,n=!1){const i=(0,a._1)(e,"x","any","bool");return r.BV.runKernel(s.IKK,{x:i},{axis:t,keepDims:n})}})},47:function(e,t,n){n.d(t,{N:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({argMax_:function(e,t=0){const n=(0,a._1)(e,"x","argMax");return r.BV.runKernel(s.sJF,{x:n},{axis:t})}})},7394:function(e,t,n){n.d(t,{v:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({argMin_:function(e,t=0){const n=(0,a._1)(e,"x","argMin");return r.BV.runKernel(s.aJk,{x:n},{axis:t})}})},9812:function(e,t,n){n.d(t,{f:function(){return o}});var r=n(7097),s=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({atan2_:function(e,t){let n=(0,i._1)(e,"a","atan2"),o=(0,i._1)(t,"b","atan2");return[n,o]=(0,a.makeTypesMatch)(n,o),r.BV.runKernel(s.QCc,{a:n,b:o})}})},5176:function(e,t,n){n.d(t,{w:function(){return h}});var r=n(7097),s=n(9121),a=n(3740),i=n(9122),o=n(2271),u=n(2582),l=n(2668),c=n(4968);const h=(0,l.op)({avgPool_:function(e,t,n,l,h){const p=(0,a._1)(e,"x","avgPool","float32");i.assert(u.jT(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let d=p,f=!1;3===p.rank&&(f=!0,d=(0,c.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.assert(4===d.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${d.rank}.`)),u.m("avgPool",l,h);let m=r.BV.runKernel(s.JhU,{x:d},{filterSize:t,strides:n,pad:l,dimRoundingMode:h});return m=(0,o.p)(m,p.dtype),f?(0,c.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},3591:function(e,t,n){n.d(t,{LJ:function(){return c},Q3:function(){return l},Vh:function(){return a},YB:function(){return s},kz:function(){return i},lB:function(){return u},rv:function(){return o},sY:function(){return h}});var r=n(9122);function s(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function a(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function i(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function o(e,t){return a(e,t.map((e=>1)),t)}function u(e,t,n){r.assert(s(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function l(e,t){if(s(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function h(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},8441:function(e,t,n){n.d(t,{E:function(){return o}});var r=n(7097),s=n(9121),a=n(3740),i=n(9122);const o=(0,n(2668).op)({batchToSpaceND_:function(e,t,n){const o=(0,a._1)(e,"x","batchToSpaceND"),u=t.reduce(((e,t)=>e*t));return i.assert(o.rank>=1+t.length,(()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`)),i.assert(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),i.assert(o.shape[0]%u===0,(()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${u}`)),r.BV.runKernel(s.zws,{x:o},{blockShape:t,crops:n})}})},7505:function(e,t,n){n.d(t,{t:function(){return u}});var r=n(7097),s=n(9121),a=n(3740),i=n(9122),o=n(4968);const u=(0,n(2668).op)({batchNorm_:function(e,t,n,u,l,c){null==c&&(c=.001);const h=(0,a._1)(e,"x","batchNorm"),p=(0,a._1)(t,"mean","batchNorm"),d=(0,a._1)(n,"variance","batchNorm");let f,m;null!=l&&(f=(0,a._1)(l,"scale","batchNorm")),null!=u&&(m=(0,a._1)(u,"offset","batchNorm")),i.assert(p.rank===d.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),i.assert(null==m||p.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),i.assert(null==f||p.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g=function(e){let t;return t=0===e.rank||1===e.rank?(0,o.X)(e,[1,1,1,e.size]):2===e.rank?(0,o.X)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(h),y=r.BV.runKernel(s.sHE,{x:g,scale:f,offset:m,mean:p,variance:d},{varianceEpsilon:c});return(0,o.X)(y,h.shape)}})},8247:function(e,t,n){n.d(t,{U:function(){return c}});var r=n(7097),s=n(9121),a=n(3740),i=n(569),o=n(8723),u=n(2668),l=n(4968);const c=(0,u.op)({broadcastTo_:function(e,t){let n=(0,a._1)(e,"broadcastTo","x");const u=n.shape;if((0,i.Mu)(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,l.X)(n,e)}const c=n.shape,h=Array.from(t);for(let r=t.length-1;r>=0;r--)if(c[r]===t[r])h[r]=1;else if(1!==n.shape[r])throw new Error(`broadcastTo(): [${u}] cannot be broadcast to [${t}].`);return 0===h.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length?(0,o.d)(n):r.BV.runKernel(s.n9L,{x:n},{reps:h})}})},2200:function(e,t,n){function r(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s;(t[t.length-1-s]||1)>1&&1===(e[a]||1)&&r.unshift(a)}return r}function s(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1;(null==s||1===s&&t[a]>1)&&n.unshift(a)}return n}function a(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let s=0;s<n;s++){let a=e[e.length-s-1];null==a&&(a=1);let i=t[t.length-s-1];if(null==i&&(i=1),1===a)r[n-s-1]=i;else if(1===i)r[n-s-1]=a;else{if(a!==i){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}r[n-s-1]=a}}return r}n.r(t),n.d(t,{assertAndGetBroadcastShape:function(){return a},getBroadcastDims:function(){return r},getReductionAxes:function(){return s}})},2657:function(e,t,n){n.d(t,{f:function(){return a}});var r=n(4077),s=n(9122);function a(e,t="float32",n){return t=t||"float32",s.assertNonNegativeIntegerDimensions(e),new r.YD(e,t,n)}},2271:function(e,t,n){n.d(t,{p:function(){return o}});var r=n(7097),s=n(9121),a=n(3740),i=n(9122);const o=(0,n(2668).op)({cast_:function(e,t){const n=(0,a._1)(e,"x","cast");if(!i.isValidDtype(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");return r.BV.runKernel(s.RFZ,{x:n},{dtype:t})}})},8723:function(e,t,n){n.d(t,{d:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({clone_:function(e){const t=(0,a._1)(e,"x","clone","string_or_numeric");return r.BV.runKernel(s.iJz,{x:t})}})},1661:function(e,t,n){n.d(t,{P:function(){return o}});var r=n(7097),s=n(9121),a=n(3740),i=n(9122);const o=(0,n(2668).op)({complex_:function(e,t){const n=(0,a._1)(e,"real","complex"),o=(0,a._1)(t,"imag","complex");return i.assertShapesMatch(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`),r.BV.runKernel(s.Zz9,{real:n,imag:o})}})},6884:function(e,t,n){n.d(t,{z:function(){return u}});var r=n(7097),s=n(9121),a=n(3740),i=n(9122),o=n(8723);const u=(0,n(2668).op)({concat_:function(e,t=0){(0,i.assert)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,a.sI)(e,"tensors","concat","string_or_numeric");return"complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length?(0,o.d)(n[0]):r.BV.runKernel(s.Eh3,n,{axis:t})}})},1355:function(e,t,n){n.d(t,{P:function(){return l}});var r=n(3740),s=n(9122),a=n(4794),i=n(2582),o=n(2668),u=n(4968);const l=(0,o.op)({conv1d_:function(e,t,n,o,l="NWC",c=1,h){const p=(0,r._1)(e,"x","conv1d"),d=(0,r._1)(t,"filter","conv1d");let f=p,m=!1;2===p.rank&&(m=!0,f=(0,u.X)(p,[1,p.shape[0],p.shape[1]])),s.assert(3===f.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`)),s.assert(3===d.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${d.rank}.`)),i.m("conv1d",o,h),s.assert(f.shape[2]===d.shape[1],(()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${d.shape[1]}.`)),s.assert(i.jT(n,c),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${c}'`)),s.assert(i.U3(c),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),s.assert(i.U3(n),(()=>"Error in conv1D: Stride should be larger than 0.")),s.assert("NWC"===l,(()=>`Error in conv1d: got dataFormat of ${l} but only NWC is currently supported.`));const g=(0,u.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),y=(0,u.X)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),b=(0,a.T)(y,g,[1,n],o,"NHWC",[1,c],h);return(0,u.X)(b,m?[b.shape[2],b.shape[3]]:[b.shape[0],b.shape[2],b.shape[3]])}})},4794:function(e,t,n){n.d(t,{T:function(){return c}});var r=n(7097),s=n(9121),a=n(3740),i=n(9122),o=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({conv2d_:function(e,t,n,u,c="NHWC",h=[1,1],p){const d=(0,a._1)(e,"x","conv2d","float32"),f=(0,a._1)(t,"filter","conv2d","float32");let m=d,g=!1;3===d.rank&&(g=!0,m=(0,l.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.assert(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),i.assert(4===f.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`)),o.m("conv2d",u,p);const y="NHWC"===c?m.shape[3]:m.shape[1];i.assert(y===f.shape[2],(()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${f.shape[2]}.`)),i.assert(o.jT(n,h),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${h}'`)),i.assert(o.U3(h),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),i.assert(o.U3(n),(()=>"Error in conv2D: Strides should be larger than 0."));const b=r.BV.runKernel(s.mhS,{x:m,filter:f},{strides:n,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p});return g?(0,l.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},6013:function(e,t,n){n.d(t,{p:function(){return l}});var r=n(7097),s=n(9121),a=n(9122),i=n(2582),o=n(2668),u=n(4968);const l=(0,o.op)({conv2DBackpropFilter_:function(e,t,n,o,l,c="NHWC",h){let p=e;3===e.rank&&(p=(0,u.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=(0,u.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),a.assert(4===p.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${p.shape}.`)),a.assert(4===d.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${d.shape}.`)),a.assert(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const f="NHWC"===c?p.shape[3]:p.shape[1],m="NHWC"===c?d.shape[3]:d.shape[1];return a.assert(f===n[2],(()=>`Error in conv2dDerFilter: depth of input ${f}) must match input depth in filter (${n[2]}.`)),a.assert(m===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${m}) must match output depth for filter (${n[3]}).`)),i.m("conv2dDerFilter",l,h),r.BV.runKernel(s.wUP,{x:p,dy:d},{strides:o,pad:l,dataFormat:c,dimRoundingMode:h,filterShape:n})}})},9832:function(e,t,n){n.d(t,{_:function(){return l}});var r=n(7097),s=n(9121),a=n(9122),i=n(2582),o=n(2668),u=n(4968);const l=(0,o.op)({conv2DBackpropInput_:function(e,t,n,o,l,c="NHWC",h){a.assert(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let p=e,d=t,f=!1;3===t.rank&&(f=!0,d=(0,u.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),p=[1,e[0],e[1],e[2]]),a.assert(4===p.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${p.length}.`)),a.assert(4===d.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${d.rank}`)),a.assert(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const m="NHWC"===c?p[3]:p[1],g="NHWC"===c?d.shape[3]:d.shape[1];a.assert(m===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${m}) must match input depth for filter ${n.shape[2]}.`)),a.assert(g===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${g}) must match output depth for filter ${n.shape[3]}.`)),i.m("conv2dDerInput",l,h);const y=r.BV.runKernel(s.wm,{dy:d,filter:n},{strides:o,pad:l,dataFormat:c,dimRoundingMode:h,inputShape:p});return f?(0,u.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},1405:function(e,t,n){n.d(t,{b:function(){return a}});var r=n(3740),s=n(9832);const a=(0,n(2668).op)({conv2dTranspose_:function(e,t,n,a,i,o){const u=(0,r._1)(e,"x","conv2dTranspose"),l=(0,r._1)(t,"filter","conv2dTranspose");return(0,s._)(n,u,l,a,i,"NHWC",o)}})},7594:function(e,t,n){n.d(t,{_:function(){return u}});var r=n(7097),s=n(9121),a=n(9122),i=n(2668),o=n(4968);const u=(0,i.op)({conv3DBackpropInput_:function(e,t,n,i,u){a.assert(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let l=e,c=t,h=!1;4===t.rank&&(h=!0,c=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),l=[1,e[0],e[1],e[2],e[3]]);const p=l[4],d=c.shape[4];a.assert(5===l.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${l.length}.`)),a.assert(5===c.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${c.rank}`)),a.assert(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),a.assert(p===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${p}) must match input depth for filter ${n.shape[3]}.`)),a.assert(d===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[4]}.`));const f=r.BV.runKernel(s.ik2,{dy:c,filter:n},{pad:u,strides:i,inputShape:l});return h?(0,o.X)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}})},2582:function(e,t,n){n.d(t,{I0:function(){return f},Ix:function(){return o},Rf:function(){return s},U3:function(){return g},Xw:function(){return a},aO:function(){return l},jT:function(){return m},jw:function(){return u},m:function(){return b},pl:function(){return i},sl:function(){return y}});var r=n(9122);function s(e,t,n,r,s="NHWC",a){return o(e,[...t,e[3]],n,a,r,null,null,y(s))}function a(e,t,n,r,s,a,i="channelsLast"){const[u,l]=c(t);let h;if("channelsLast"===i)h=[u,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);h=[u,l,e[1],e[1]]}return o(e,h,n,r,s,a,!1,i)}function i(e,t,n,r,s,a,i="NDHWC"){const[o,l,c]=h(t);let p,d;if("NDHWC"===i)d="channelsLast",p=[o,l,c,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);d="channelsFirst",p=[o,l,c,e[1],e[1]]}return u(e,p,n,r,s,!1,d,a)}function o(e,t,n,r,s,a,i=!1,o="channelsLast"){let[u,h,f,m]=[-1,-1,-1,-1];if("channelsLast"===o)[u,h,f,m]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,m,h,f]=e}const[g,y,,b]=t,[x,w]=c(n),[v,k]=c(r),I=p(g,v),S=p(y,k),{padInfo:N,outHeight:T,outWidth:C}=function(e,t,n,r,s,a,i,o,u){let c,h,p;if("number"===typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=l(e,t,n));const a=e[0],i=e[1],o=d((a-t+2*r)/n+1,s),u=d((i-t+2*r)/n+1,s);return[o,u]}([t,n],a,r,e,o);h=s[0],p=s[1]}else if("same"===e){h=Math.ceil(t/r),p=Math.ceil(n/s);const e=Math.max(0,(h-1)*r+a-t),o=Math.max(0,(p-1)*s+i-n),u=Math.floor(e/2),l=e-u,d=Math.floor(o/2);c={top:u,bottom:l,left:d,right:o-d,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((t-a+1)/r),p=Math.ceil((n-i+1)/s);else{if("object"!==typeof e)throw Error(`Unknown padding parameter: ${e}`);{const l="channelsLast"===u?e[1][0]:e[2][0],f="channelsLast"===u?e[1][1]:e[2][1],m="channelsLast"===u?e[2][0]:e[3][0],g="channelsLast"===u?e[2][1]:e[3][1];c={top:l,bottom:f,left:m,right:g,type:0===l&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},h=d((t-a+l+f)/r+1,o),p=d((n-i+m+g)/s+1,o)}}return{padInfo:c,outHeight:h,outWidth:p}}(s,h,f,x,w,I,S,a,o),$=i?b*m:b;let E;return"channelsFirst"===o?E=[u,$,T,C]:"channelsLast"===o&&(E=[u,T,C,$]),{batchSize:u,dataFormat:o,inHeight:h,inWidth:f,inChannels:m,outHeight:T,outWidth:C,outChannels:$,padInfo:N,strideHeight:x,strideWidth:w,filterHeight:g,filterWidth:y,effectiveFilterHeight:I,effectiveFilterWidth:S,dilationHeight:v,dilationWidth:k,inShape:e,outShape:E,filterShape:t}}function u(e,t,n,r,s,a=!1,i="channelsLast",o){let[u,c,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,c,f,m,g]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,g,c,f,m]=e}const[y,b,x,,w]=t,[v,k,I]=h(n),[S,N,T]=h(r),C=p(y,S),$=p(b,N),E=p(x,T),{padInfo:A,outDepth:_,outHeight:D,outWidth:R}=function(e,t,n,r,s,a,i,o,u,c,h){let p,f,m,g;"valid"===e&&(e=0);if("number"===typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const y=function(e,t,n,r,s,a){null==s&&(s=l(e,t[0],r[0]));const i=[0,0,0,n];for(let o=0;o<3;o++)e[o]+2*s>=t[o]&&(i[o]=d((e[o]-t[o]+2*s)/r[o]+1,a));return i}([t,n,r,1],[o,u,c],1,[s,a,i],e,h);f=y[0],m=y[1],g=y[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{f=Math.ceil(t/s),m=Math.ceil(n/a),g=Math.ceil(r/i);const e=(f-1)*s+o-t,l=(m-1)*a+u-n,h=(g-1)*i+c-r,d=Math.floor(e/2),y=e-d,b=Math.floor(l/2),x=l-b,w=Math.floor(h/2);p={top:b,bottom:x,left:w,right:h-w,front:d,back:y,type:"SAME"}}}return{padInfo:p,outDepth:f,outHeight:m,outWidth:g}}(s,c,f,m,v,k,I,C,$,E,o),O=a?w*g:w;let F;return"channelsFirst"===i?F=[u,O,_,D,R]:"channelsLast"===i&&(F=[u,_,D,R,O]),{batchSize:u,dataFormat:i,inDepth:c,inHeight:f,inWidth:m,inChannels:g,outDepth:_,outHeight:D,outWidth:R,outChannels:O,padInfo:A,strideDepth:v,strideHeight:k,strideWidth:I,filterDepth:y,filterHeight:b,filterWidth:x,effectiveFilterDepth:C,effectiveFilterHeight:$,effectiveFilterWidth:E,dilationDepth:S,dilationHeight:N,dilationWidth:T,inShape:e,outShape:F,filterShape:t}}function l(e,t,n,r=1){const s=p(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function c(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function h(e){return"number"===typeof e?[e,e,e]:e}function p(e,t){return t<=1?e:e+(e-1)*(t-1)}function d(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function f(e){const[t,n,r]=c(e);return 1===t&&1===n&&1===r}function m(e,t){return f(e)||f(t)}function g(e){return c(e).every((e=>e>0))}function y(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function b(e,t,n){if(null!=n){if("string"===typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"===typeof t)r.assert(r.isInt(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!==typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{r.assert(r.isInt(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}},173:function(e,t,n){n.d(t,{m:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({cos_:function(e){const t=(0,a._1)(e,"x","cos","float32");return r.BV.runKernel(s.mc4,{x:t})}})},2699:function(e,t,n){n.d(t,{f:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({cosh_:function(e){const t=(0,a._1)(e,"x","cosh","float32");return r.BV.runKernel(s.TR1,{x:t})}})},9640:function(e,t,n){n.d(t,{$:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({cumprod_:function(e,t=0,n=!1,i=!1){const o=(0,a._1)(e,"x","cumprod");return r.BV.runKernel(s.Byc,{x:o},{axis:t,exclusive:n,reverse:i})}})},7405:function(e,t,n){n.d(t,{z:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({cumsum_:function(e,t=0,n=!1,i=!1){const o=(0,a._1)(e,"x","cumsum");return r.BV.runKernel(s.iHb,{x:o},{axis:t,exclusive:n,reverse:i})}})},9112:function(e,t,n){n.d(t,{n:function(){return o}});var r=n(7097),s=n(9121),a=n(3740),i=n(9122);const o=(0,n(2668).op)({depthToSpace_:function(e,t,n="NHWC"){const o=(0,a._1)(e,"x","depthToSpace","float32"),u="NHWC"===n?o.shape[1]:o.shape[2],l="NHWC"===n?o.shape[2]:o.shape[3],c="NHWC"===n?o.shape[3]:o.shape[1];return i.assert(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),i.assert(u*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t}  for depthToSpace with input shape\n    ${o.shape}`)),i.assert(l*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${l} and ${t} for depthToSpace with input shape\n        ${o.shape}`)),i.assert(c%(t*t)===0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${c} for depthToSpace with input shape ${o.shape}`)),r.BV.runKernel(s.T0n,{x:o},{blockSize:t,dataFormat:n})}})},4718:function(e,t,n){n.d(t,{B:function(){return c}});var r=n(7097),s=n(9121),a=n(3740),i=n(9122),o=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({depthwiseConv2d_:function(e,t,n,u,c="NHWC",h=[1,1],p){const d=(0,a._1)(e,"x","depthwiseConv2d","float32"),f=(0,a._1)(t,"filter","depthwiseConv2d","float32");let m=d,g=!1;3===d.rank&&(g=!0,m=(0,l.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.assert(4===m.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`)),i.assert(4===f.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`));const y="NHWC"===c?m.shape[3]:m.shape[1];i.assert(y===f.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${y}) must match the inChannels dimension in filter ${f.shape[2]}.`)),o.m("depthwiseConv2d",u,p);const b=r.BV.runKernel(s.cie,{x:m,filter:f},{strides:n,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p});return g?(0,l.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},8098:function(e,t,n){n.d(t,{z:function(){return o}});var r=n(7097),s=n(9121),a=n(2668),i=n(4968);const o=(0,a.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,o,u=[1,1],l){let c=e;3===e.rank&&(c=(0,i.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let h=t;return 3===h.rank&&(h=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),r.BV.runKernel(s.sL$,{x:c,dy:h},{strides:a,pad:o,dimRoundingMode:l,dilations:u,filterShape:n})}})},4375:function(e,t,n){n.d(t,{v:function(){return o}});var r=n(7097),s=n(9121),a=n(2668),i=n(4968);const o=(0,a.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,o,u=[1,1],l){let c=t,h=!1;3===t.rank&&(h=!0,c=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p=r.BV.runKernel(s.y7R,{dy:c,filter:n},{strides:a,pad:o,dimRoundingMode:l,dilations:u,inputShape:e});return h?(0,i.X)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}})},557:function(e,t,n){n.d(t,{W:function(){return l}});var r=n(7097),s=n(9121),a=n(3740),i=n(9122),o=n(2668),u=n(4968);const l=(0,o.op)({dilation2d_:function(e,t,n,o,l=[1,1],c="NHWC"){const h=(0,a._1)(e,"x","dilation2d"),p=(0,a._1)(t,"filter","dilation2d");i.assert(3===h.rank||4===h.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${h.rank}.`)),i.assert(3===p.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${p.rank}.`)),i.assert("NHWC"===c,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${c}`));let d=h,f=!1;3===h.rank&&(d=(0,u.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),f=!0),i.assert(d.shape[3]===p.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${d.shape[3]} vs ${p.shape[2]}`));const m=r.BV.runKernel(s.p4S,{x:d,filter:p},{strides:n,pad:o,dilations:l});return f?(0,u.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},1274:function(e,t,n){n.d(t,{h:function(){return u}});var r=n(7097),s=n(9121),a=n(747),i=n(3740),o=n(9165);const u=(0,n(2668).op)({div_:function(e,t){let n=(0,i._1)(e,"a","div"),u=(0,i._1)(t,"b","div");return[n,u]=(0,a.makeTypesMatch)(n,u),"int32"===n.dtype&&"int32"===u.dtype?(0,o.q)(n,u):r.BV.runKernel(s.oHH,{a:n,b:u},{})}})},9322:function(e,t,n){n.d(t,{N:function(){return c}});var r=n(747),s=n(3740),a=n(1274),i=n(6477),o=n(2668),u=n(5912),l=n(6577);const c=(0,o.op)({divNoNan_:function(e,t){let n=(0,s._1)(e,"a","div"),o=(0,s._1)(t,"b","div");[n,o]=(0,r.makeTypesMatch)(n,o);const c=(0,a.h)(n,o),h=(0,l.P)(c),p=(0,i.D)(o,h);return(0,u.a)(p,h,c)}})},548:function(e,t,n){n.d(t,{A:function(){return u}});var r=n(3740),s=n(9122),a=n(8687),i=n(2668),o=n(4968);const u=(0,i.op)({dot_:function(e,t){const n=(0,r._1)(e,"t1","dot"),i=(0,r._1)(t,"t2","dot");s.assert((1===n.rank||2===n.rank)&&(1===i.rank||2===i.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${i.rank}.`));const u=1===n.rank?n.size:n.shape[1],l=1===i.rank?i.size:i.shape[0];if(s.assert(u===l,(()=>`Error in dot: inner dimensions of inputs must match, but got ${u} and ${l}.`)),1===n.rank&&1===i.rank){const e=(0,o.X)(n,[1,-1]),t=(0,o.X)(i,[-1,1]),r=(0,a.O)(e,t);return(0,o.X)(r,[])}if(1===n.rank&&2===i.rank){const e=(0,o.X)(n,[1,-1]),t=(0,o.X)(i,[i.shape[0],i.shape[1]]),r=(0,a.O)(e,t);return(0,o.X)(r,[r.size])}if(2===n.rank&&1===i.rank){const e=(0,o.X)(i,[-1,1]),t=(0,a.O)(n,e);return(0,o.X)(t,[t.size])}{const e=(0,o.X)(i,[i.shape[0],i.shape[1]]);return(0,a.O)(n,e)}}})},3233:function(e,t,n){n.d(t,{p:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({elu_:function(e){const t=(0,a._1)(e,"x","elu","float32");return r.BV.runKernel(s.SX0,{x:t})}})},6477:function(e,t,n){n.d(t,{D:function(){return u}});var r=n(7097),s=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({equal_:function(e,t){let n=(0,i._1)(e,"a","equal","string_or_numeric"),u=(0,i._1)(t,"b","equal","string_or_numeric");return[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape),r.BV.runKernel(s.hdR,{a:n,b:u})}})},1954:function(e,t,n){n.d(t,{d:function(){return s}});var r=n(3561);const s=(0,n(2668).op)({euclideanNorm_:function(e,t=null,n=!1){return(0,r.K)(e,"euclidean",t,n)}})},4842:function(e,t,n){n.d(t,{Q:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({exp_:function(e){const t=(0,a._1)(e,"x","exp");return r.BV.runKernel(s.NEP,{x:t})}})},1300:function(e,t,n){n.d(t,{d:function(){return o}});var r=n(7097),s=n(9121),a=n(3740),i=n(9122);const o=(0,n(2668).op)({expandDims_:function(e,t=0){const n=(0,a._1)(e,"x","expandDims","string_or_numeric");return i.assert(t<=n.rank,(()=>"Axis must be <= rank of the tensor")),r.BV.runKernel(s.YFo,{input:n},{dim:t})}})},4006:function(e,t,n){n.d(t,{h:function(){return o}});var r=n(7097),s=n(9121),a=n(9122),i=n(569);function o(e,t,n){(0,i.Mu)(e),n=n||(0,a.inferDtype)(t);return r.BV.runKernel(s.deh,{},{shape:e,value:t,dtype:n})}},6943:function(e,t,n){n.d(t,{G:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({floor_:function(e){const t=(0,a._1)(e,"x","floor","float32");return r.BV.runKernel(s.OR,{x:t})}})},9165:function(e,t,n){n.d(t,{q:function(){return o}});var r=n(7097),s=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({floorDiv_:function(e,t){let n=(0,i._1)(e,"a","floorDiv"),o=(0,i._1)(t,"b","floorDiv");return[n,o]=(0,a.makeTypesMatch)(n,o),r.BV.runKernel(s.jeX,{a:n,b:o})}})},9323:function(e,t,n){n.d(t,{Fr:function(){return f},QH:function(){return g},pf:function(){return m},uy:function(){return y}});var r=n(2200),s=n(3233),a=n(9133),i=n(4841),o=n(8151),u=n(7409),l=n(3582),c=n(4968),h=n(625),p=n(1901),d=n(5475);function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,i.d)(e,(0,p.N)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function m(e,t){let n=t;const s=r.getReductionAxes(e.shape,t.shape);return s.length>0&&(n=(0,d.S)(n,s)),(0,c.X)(n,e.shape)}function g(e,t,n,r){if("linear"===t)return e;if("relu"===t)return(0,u.U)(e);if("elu"===t)return(0,s.p)(e);if("relu6"===t)return(0,l.b)(e);if("prelu"===t)return(0,o.A)(e,n);if("leakyrelu"===t)return(0,a.h)(e,r);if("sigmoid"===t)return(0,h.X)(e);throw new Error(`Unknown fused activation ${t}.`)}const y=(e,t)=>!(e>0)||"linear"===t},4926:function(e,t,n){n.d(t,{I:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({gather_:function(e,t,n=0,i=0){const o=(0,a._1)(e,"x","gather"),u=(0,a._1)(t,"indices","gather","int32");return r.BV.runKernel(s.qi_,{x:o,indices:u},{axis:n,batchDims:i})}})},636:function(e,t,n){n.d(t,{p:function(){return u}});var r=n(7097),s=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({greater_:function(e,t){let n=(0,i._1)(e,"a","greater","string_or_numeric"),u=(0,i._1)(t,"b","greater","string_or_numeric");return[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape),r.BV.runKernel(s.iZT,{a:n,b:u})}})},7630:function(e,t,n){n.d(t,{b:function(){return u}});var r=n(7097),s=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({greaterEqual_:function(e,t){let n=(0,i._1)(e,"a","greaterEqual","string_or_numeric"),u=(0,i._1)(t,"b","greaterEqual","string_or_numeric");return[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape),r.BV.runKernel(s.Acj,{a:n,b:u})}})},4386:function(e,t,n){n.d(t,{a:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({imag_:function(e){const t=(0,a._1)(e,"input","imag");return r.BV.runKernel(s.J_u,{input:t})}})},3305:function(e,t,n){n.d(t,{I:function(){return l}});var r=n(7097),s=n(9121),a=n(3740),i=n(9122),o=n(2668),u=n(4968);const l=(0,o.op)({resizeBilinear_:function(e,t,n=!1,o=!1){const l=(0,a._1)(e,"images","resizeBilinear");i.assert(3===l.rank||4===l.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${l.rank}.`)),i.assert(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),i.assert(!1===o||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let c=l,h=!1;3===l.rank&&(h=!0,c=(0,u.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,p=r.BV.runKernel(s._Yw,{images:c},{alignCorners:n,halfPixelCenters:o,size:t});return h?(0,u.X)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}})},5098:function(e,t,n){n.d(t,{j:function(){return l}});var r=n(7097),s=n(9121),a=n(3740),i=n(9122),o=n(2668),u=n(4968);const l=(0,o.op)({resizeNearestNeighbor_:function(e,t,n=!1,o=!1){const l=(0,a._1)(e,"images","resizeNearestNeighbor");i.assert(3===l.rank||4===l.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${l.rank}.`)),i.assert(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),i.assert("float32"===l.dtype||"int32"===l.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),i.assert(!1===o||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let c=l,h=!1;3===l.rank&&(h=!0,c=(0,u.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,p=r.BV.runKernel(s.dpD,{images:c},{alignCorners:n,halfPixelCenters:o,size:t});return h?(0,u.X)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}})},9133:function(e,t,n){n.d(t,{h:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({leakyRelu_:function(e,t=.2){const n=(0,a._1)(e,"x","leakyRelu");return r.BV.runKernel(s.J$2,{x:n},{alpha:t})}})},6573:function(e,t,n){n.d(t,{d:function(){return u}});var r=n(7097),s=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({less_:function(e,t){let n=(0,i._1)(e,"a","less","string_or_numeric"),u=(0,i._1)(t,"b","less","string_or_numeric");return[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape),r.BV.runKernel(s.vtC,{a:n,b:u})}})},624:function(e,t,n){n.d(t,{z:function(){return u}});var r=n(7097),s=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({lessEqual_:function(e,t){let n=(0,i._1)(e,"a","lessEqual","string_or_numeric"),u=(0,i._1)(t,"b","lessEqual","string_or_numeric");return[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape),r.BV.runKernel(s.CAk,{a:n,b:u})}})},9648:function(e,t,n){n.d(t,{G:function(){return l}});var r=n(7097),s=n(9121),a=n(3740),i=n(9122),o=n(2668),u=n(4968);const l=(0,o.op)({localResponseNormalization_:function(e,t=5,n=1,o=1,l=.5){const c=(0,a._1)(e,"x","localResponseNormalization");i.assert(4===c.rank||3===c.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${c.rank}.`)),i.assert(i.isInt(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let h=c,p=!1;3===c.rank&&(p=!0,h=(0,u.X)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const d=r.BV.runKernel(s.eZ0,{x:h},{depthRadius:t,bias:n,alpha:o,beta:l});return p?(0,u.X)(d,[d.shape[1],d.shape[2],d.shape[3]]):d}})},2597:function(e,t,n){n.d(t,{c:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({log_:function(e){const t=(0,a._1)(e,"x","log","float32");return r.BV.runKernel(s.ZbH,{x:t})}})},1391:function(e,t,n){n.d(t,{l:function(){return f}});var r=n(3740),s=n(9122),a=n(6407),i=n(3591),o=n(4842),u=n(2597),l=n(3307),c=n(2668),h=n(4968),p=n(827),d=n(5475);const f=(0,c.op)({logSumExp_:function(e,t=null,n=!1){const c=(0,r._1)(e,"x","logSumExp"),f=(0,s.parseAxisParam)(t,c.shape),m=(0,l.F)(c,f,!0),g=(0,p.l)(c,m),y=(0,o.Q)(g),b=(0,d.S)(y,f),x=(0,u.c)(b),w=(0,a.I)((0,h.X)(m,x.shape),x);if(n){const e=(0,i.rv)(w.shape,f);return(0,h.X)(w,e)}return w}})},2856:function(e,t,n){n.d(t,{H:function(){return o}});var r=n(7097),s=n(9121),a=n(3740),i=n(2200);const o=(0,n(2668).op)({logicalAnd_:function(e,t){const n=(0,a._1)(e,"a","logicalAnd","bool"),o=(0,a._1)(t,"b","logicalAnd","bool");return(0,i.assertAndGetBroadcastShape)(n.shape,o.shape),r.BV.runKernel(s.PYm,{a:n,b:o})}})},8651:function(e,t,n){n.d(t,{h:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({logicalNot_:function(e){const t=(0,a._1)(e,"x","logicalNot","bool");return r.BV.runKernel(s.VfG,{x:t})}})},5750:function(e,t,n){n.d(t,{K:function(){return o}});var r=n(7097),s=n(9121),a=n(3740),i=n(2200);const o=(0,n(2668).op)({logicalOr_:function(e,t){const n=(0,a._1)(e,"a","logicalOr","bool"),o=(0,a._1)(t,"b","logicalOr","bool");return(0,i.assertAndGetBroadcastShape)(n.shape,o.shape),r.BV.runKernel(s.MZg,{a:n,b:o})}})},596:function(e,t,n){n.d(t,{e:function(){return u}});var r=n(3740),s=n(2200),a=n(2856),i=n(8651),o=n(5750);const u=(0,n(2668).op)({logicalXor_:function(e,t){const n=(0,r._1)(e,"a","logicalXor","bool"),u=(0,r._1)(t,"b","logicalXor","bool");return(0,s.assertAndGetBroadcastShape)(n.shape,u.shape),(0,a.H)((0,o.K)(e,t),(0,i.h)((0,a.H)(e,t)))}})},9876:function(e,t,n){var r;n.d(t,{I:function(){return r}}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},8687:function(e,t,n){n.d(t,{O:function(){return o}});var r=n(7097),s=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({matMul_:function(e,t,n=!1,o=!1){let u=(0,i._1)(e,"a","matMul"),l=(0,i._1)(t,"b","matMul");return[u,l]=(0,a.makeTypesMatch)(u,l),r.BV.runKernel(s.XLW,{a:u,b:l},{transposeA:n,transposeB:o})}})},3307:function(e,t,n){n.d(t,{F:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({max_:function(e,t=null,n=!1){const i=(0,a._1)(e,"x","max");return r.BV.runKernel(s.YoZ,{x:i},{reductionIndices:t,keepDims:n})}})},1174:function(e,t,n){n.d(t,{_:function(){return c}});var r=n(7097),s=n(9121),a=n(3740),i=n(9122),o=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({maxPool_:function(e,t,n,u,c){const h=(0,a._1)(e,"x","maxPool");let p=h,d=!1;3===h.rank&&(d=!0,p=(0,l.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.assert(4===p.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${p.rank}.`)),i.assert(o.jT(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),o.m("maxPool",u,c);const f=r.BV.runKernel(s.mTV,{x:p},{filterSize:t,strides:n,pad:u,dimRoundingMode:c});return d?(0,l.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},632:function(e,t,n){n.d(t,{g:function(){return l}});var r=n(7097),s=n(9121),a=n(747),i=n(3740),o=n(2200),u=n(2271);const l=(0,n(2668).op)({maximum_:function(e,t){let n=(0,i._1)(e,"a","maximum"),l=(0,i._1)(t,"b","maximum");return[n,l]=(0,a.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),l=(0,u.p)(l,"int32")),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape),r.BV.runKernel(s.BMI,{a:n,b:l})}})},5130:function(e,t,n){n.d(t,{J:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({mean_:function(e,t=null,n=!1){const i=(0,a._1)(e,"x","mean");return r.BV.runKernel(s.q2K,{x:i},{axis:t,keepDims:n})}})},5735:function(e,t,n){n.d(t,{V:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({min_:function(e,t=null,n=!1){const i=(0,a._1)(e,"x","min");return r.BV.runKernel(s.c17,{x:i},{axis:t,keepDims:n})}})},4513:function(e,t,n){n.d(t,{L:function(){return l}});var r=n(7097),s=n(9121),a=n(747),i=n(3740),o=n(2200),u=n(2271);const l=(0,n(2668).op)({minimum_:function(e,t){let n=(0,i._1)(e,"a","minimum"),l=(0,i._1)(t,"b","minimum");return[n,l]=(0,a.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),l=(0,u.p)(l,"int32")),(0,o.assertAndGetBroadcastShape)(n.shape,l.shape),r.BV.runKernel(s.q8u,{a:n,b:l})}})},1483:function(e,t,n){n.d(t,{V:function(){return o}});var r=n(7097),s=n(9121),a=n(3740),i=n(9122);const o=(0,n(2668).op)({mirrorPad_:function(e,t,n){i.assert("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const o=(0,a._1)(e,"x","mirrorPad");if(0===o.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");i.assert(t.length===o.rank,(()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`));const u="reflect"===n?1:0;for(let r=0;r<o.rank;r++)i.assert(2===t[r].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),i.assert(t[r][0]>=0&&t[r][0]<=o.shape[r]-u&&t[r][1]>=0&&t[r][1]<=o.shape[r]-u,(()=>`Padding in dimension ${r} cannot be greater than or equal to ${o.shape[r]-u} or less than 0 for input of shape ${o.shape}`));return r.BV.runKernel(s.jQs,{x:o},{paddings:t,mode:n})}})},5228:function(e,t,n){n.d(t,{w:function(){return o}});var r=n(7097),s=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({mod_:function(e,t){let n=(0,i._1)(e,"a","mod"),o=(0,i._1)(t,"b","mod");return[n,o]=(0,a.makeTypesMatch)(n,o),r.BV.runKernel(s.Vbg,{a:n,b:o})}})},4841:function(e,t,n){n.d(t,{d:function(){return o}});var r=n(7097),s=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({mul_:function(e,t){let n=(0,i._1)(e,"a","mul"),o=(0,i._1)(t,"b","mul");return[n,o]=(0,a.makeTypesMatch)(n,o),r.BV.runKernel(s.wYn,{a:n,b:o})}})},7370:function(e,t,n){n.d(t,{W:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({neg_:function(e){const t=(0,a._1)(e,"x","neg");return r.BV.runKernel(s.kuV,{x:t})}})},3561:function(e,t,n){n.d(t,{K:function(){return y}});var r=n(3740),s=n(9122),a=n(6235),i=n(3591),o=n(3307),u=n(5735),l=n(2668),c=n(3453),h=n(4968),p=n(9494),d=n(3261),f=n(248),m=n(5475);function g(e,t,n=null){if(0===e.rank)return(0,a.W)(e);if(1!==e.rank&&null===n)return g((0,h.X)(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,m.S)((0,a.W)(e),n);if(t===1/0)return(0,o.F)((0,a.W)(e),n);if(t===-1/0)return(0,u.V)((0,a.W)(e),n);if("euclidean"===t||2===t)return(0,d._)((0,m.S)((0,c.s)((0,a.W)(e),(0,p.i)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,o.F)((0,m.S)((0,a.W)(e),n[0]),n[1]-1);if(t===1/0)return(0,o.F)((0,m.S)((0,a.W)(e),n[1]),n[0]);if(t===-1/0)return(0,u.V)((0,m.S)((0,a.W)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,d._)((0,m.S)((0,f.h)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const y=(0,l.op)({norm_:function(e,t="euclidean",n=null,a=!1){const o=g(e=(0,r._1)(e,"x","norm"),t,n);let u=o.shape;if(a){const t=(0,s.parseAxisParam)(n,e.shape);u=i.rv(o.shape,t)}return(0,h.X)(o,u)}})},6500:function(e,t,n){n.d(t,{Q:function(){return u}});var r=n(7097),s=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({notEqual_:function(e,t){let n=(0,i._1)(e,"a","notEqual","string_or_numeric"),u=(0,i._1)(t,"b","notEqual","string_or_numeric");return[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape),r.BV.runKernel(s.yQU,{a:n,b:u})}})},6708:function(e,t,n){n.d(t,{l:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({oneHot_:function(e,t,n=1,i=0,o="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const u=(0,a._1)(e,"indices","oneHot","int32");return r.BV.runKernel(s.we_,{indices:u},{dtype:o,depth:t,onValue:n,offValue:i})}})},4917:function(e,t,n){n.d(t,{i:function(){return u}});var r=n(7097),s=n(9122),a=n(569),i=n(1661),o=n(723);function u(e,t="float32"){if((0,a.Mu)(e),"complex64"===t){const t=u(e,"float32"),n=(0,o.l)(e,"float32");return(0,i.P)(t,n)}const n=(0,s.makeOnesTypedArray)((0,s.sizeFromShape)(e),t);return r.BV.makeTensor(n,e,t)}},2668:function(e,t,n){n.d(t,{op:function(){return i},z:function(){return a}});var r=n(7097),s=n(9122);const a="__op";function i(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const i=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=a;const o=(...e)=>{r.BV.startScope(n);try{const t=i(...e);return(0,s.isPromise)(t)&&console.error("Cannot return a Promise inside of tidy."),r.BV.endScope(t),t}catch(t){throw r.BV.endScope(null),t}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},985:function(e,t,n){n.d(t,{zvA:function(){return u.z},WnP:function(){return s.W},Khb:function(){return l},__u:function(){return c},IHx:function(){return h.I},QBD:function(){return d},$6P:function(){return f.$},YjB:function(){return m.Y},NqF:function(){return g.N},vHJ:function(){return y.v},ZRM:function(){return b},VfV:function(){return x},z4N:function(){return w},fvJ:function(){return v.f},C80:function(){return k},wS1:function(){return I.w},uR5:function(){return C},zEQ:function(){return O},tgs:function(){return M.t},Dxk:function(){return B},JY5:function(){return L},p3b:function(){return z},E4h:function(){return F.E},yE8:function(){return U},ycw:function(){return V},anm:function(){return sr},XsQ:function(){return W},UFq:function(){return G.U},f3b:function(){return H.f},pju:function(){return S.p},mDi:function(){return j},iUl:function(){return q},d9v:function(){return K.d},PYB:function(){return Y.P},zoF:function(){return $.z},gME:function(){return Q},Izb:function(){return Z},MNy:function(){return J},ZaL:function(){return ee},PAt:function(){return te.P},Tek:function(){return ne.T},bc:function(){return re.b},pdZ:function(){return se},$QV:function(){return ie},mCk:function(){return oe.m},f9Y:function(){return ue.f},mew:function(){return fr},$Gn:function(){return le.$},zbp:function(){return ce.z},ppE:function(){return he},nTT:function(){return pe.n},B10:function(){return de.B},Ka3:function(){return fe},WmZ:function(){return me.W},hiC:function(){return ge.h},NTj:function(){return ye.N},AKD:function(){return be.A},rvX:function(){return pr},WYO:function(){return xe},pyx:function(){return we.p},GRh:function(){return dr},EDe:function(){return ve},DgJ:function(){return ke.D},qNN:function(){return Ie},d2q:function(){return Se.d},Qqt:function(){return Ne.Q},dt4:function(){return Te.d},t$B:function(){return Ce},iyy:function(){return Ee},kp_:function(){return Sn},hlL:function(){return X.h},GWj:function(){return Ae.G},qPi:function(){return _e.q},imm:function(){return r},Iqj:function(){return De.I},dbB:function(){return hr},pjt:function(){return Re.p},brS:function(){return Oe.b},Sxn:function(){return Nn},asL:function(){return Fe.a},BHj:function(){return ls},V3u:function(){return mr},wx0:function(){return Tn},xVT:function(){return Me},UWc:function(){return Be},i2d:function(){return Le},hi7:function(){return ze.h},d9m:function(){return Ue.d},zN1:function(){return Pe.z},$r2:function(){return cs},SX3:function(){return Ve},G9k:function(){return We.G},cM7:function(){return Ge.c},Krr:function(){return He},e_t:function(){return Ke},CmS:function(){return Je},l_t:function(){return et.l},HvI:function(){return tt.H},hJK:function(){return nt.h},K5V:function(){return rt.K},egP:function(){return st.e},MB5:function(){return hs},eab:function(){return ot},OI3:function(){return E.O},Fp7:function(){return Ye.F},_sB:function(){return ut._},YQQ:function(){return lt},Ip$:function(){return ct},gWQ:function(){return ht.g},J69:function(){return pt.J},ry_:function(){return mt},VV$:function(){return gt.V},LTh:function(){return yt.L},VdP:function(){return bt.V},wQq:function(){return xt.w},Gi7:function(){return kt},p_:function(){return ur},dC7:function(){return A.d},rq4:function(){return It},SJ_:function(){return St},W76:function(){return Xe.W},KOy:function(){return ir.K},Quu:function(){return Nt.Q},lfX:function(){return Tt.l},iUs:function(){return dt.i},JpU:function(){return Ct},op:function(){return u.op},N2O:function(){return $t},vku:function(){return Et.v},pNR:function(){return At},koy:function(){return _t},t1L:function(){return Dt},lGY:function(){return Rt},d_R:function(){return Ot.d},sQ3:function(){return Ft.s},AL3:function(){return Mt.A},S0v:function(){return Bt.S},WVs:function(){return Lt.W},$gW:function(){return zt},VT$:function(){return Ut},N89:function(){return Pt},TN_:function(){return Vt},wzB:function(){return Xt},nGf:function(){return qt},ruB:function(){return Kt},LGj:function(){return Yt},pe5:function(){return Qt},w6H:function(){return Zt},kwC:function(){return Jt.k},M25:function(){return en},UYe:function(){return tn.U},btT:function(){return nn.b},XLQ:function(){return T.X},GYS:function(){return rn.G},SDf:function(){return sn},diP:function(){return an},sx7:function(){return on},mG2:function(){return un},QEs:function(){return An},NMM:function(){return ln},bp0:function(){return cn.b},iD$:function(){return hn.i},snQ:function(){return lr},zcT:function(){return it},U8D:function(){return pn.U},U_I:function(){return dn.U},ODp:function(){return fn},XD2:function(){return _.X},Xxe:function(){return mn},tdS:function(){return us},O$l:function(){return gn.O},R_K:function(){return yn.R},tPi:function(){return D.t},jZU:function(){return bn},SmN:function(){return xn},CnO:function(){return wn},p0P:function(){return vn},XAC:function(){return kn},Wvh:function(){return qe},fBT:function(){return In.f},rVs:function(){return ps},ers:function(){return cr},uN7:function(){return os},Vl2:function(){return Cn.V},_b3:function(){return _n._},h62:function(){return vt.h},$i:function(){return Dn.$},L9e:function(){return Rn.L},knu:function(){return On.k},Nbs:function(){return Fn.N},NXj:function(){return Mn},Z_8:function(){return ds},luU:function(){return Qe.l},Smz:function(){return Ze.S},ORZ:function(){return Bn},AEp:function(){return R},XeE:function(){return Ln.X},RRF:function(){return Un},odF:function(){return Pn},wOQ:function(){return Vn.w},yXz:function(){return Wn},Bfx:function(){return Gn},xZs:function(){return Hn},Pg0:function(){return Xn},Gg6:function(){return $e.G},hg7:function(){return qn.h},p4s:function(){return ar.p},Xu6:function(){return Kn},Two:function(){return Yn.T},pUJ:function(){return Qn.p},HHK:function(){return Zn.H},GaM:function(){return Jn},VD$:function(){return er},arb:function(){return tr.a},itS:function(){return rr},lls:function(){return $n.l},P84:function(){return En.P}});var r={};n.r(r),n.d(r,{conv2d:function(){return wr},depthwiseConv2d:function(){return Ir},matMul:function(){return Sr}});var s=n(6235),a=n(7097),i=n(9121),o=n(3740),u=n(2668);const l=(0,u.op)({acos_:function(e){const t=(0,o._1)(e,"x","acos");return a.BV.runKernel(i.VGw,{x:t})}});const c=(0,u.op)({acosh_:function(e){const t=(0,o._1)(e,"x","acosh");return a.BV.runKernel(i.SpW,{x:t})}});var h=n(6407),p=n(9122);const d=(0,u.op)({addN_:function(e){p.assert(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),p.assert(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>(0,o._1)(e,`tensors${t}`,"addN"))),n=t[0];return t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!p.arraysEqual(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")})),a.BV.runKernel(i.Xze,t)}});var f=n(781),m=n(2998),g=n(47),y=n(7394);const b=(0,u.op)({asin_:function(e){const t=(0,o._1)(e,"x","asin");return a.BV.runKernel(i.M2y,{x:t})}});const x=(0,u.op)({asinh_:function(e){const t=(0,o._1)(e,"x","asinh");return a.BV.runKernel(i.qw7,{x:t})}});const w=(0,u.op)({atan_:function(e){const t=(0,o._1)(e,"x","atan");return a.BV.runKernel(i.jMg,{x:t})}});var v=n(9812);const k=(0,u.op)({atanh_:function(e){const t=(0,o._1)(e,"x","atanh");return a.BV.runKernel(i.Oyi,{x:t})}});var I=n(5176),S=n(2271),N=n(2582),T=n(4968);const C=(0,u.op)({avgPool3d_:function(e,t,n,r,s,u="NDHWC"){const l=(0,o._1)(e,"x","avgPool3d","float32");let c=l,h=!1;4===l.rank&&(h=!0,c=(0,T.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),p.assert(5===c.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${c.rank}.`)),p.assert("NDHWC"===u,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${u}`)),p.assert("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),(0,N.m)("avgPool3d",r,s);let d=a.BV.runKernel(i._k9,{x:c},{filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:u});return d=(0,S.p)(d,c.dtype),h?(0,T.X)(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var $=n(6884),E=n(8687),A=n(4841),_=n(625),D=n(2676);const R=(0,u.op)({tanh_:function(e){const t=(0,o._1)(e,"x","tanh","float32");return a.BV.runKernel(i.MIZ,{x:t})}});const O=(0,u.op)({basicLSTMCell_:function(e,t,n,r,s,a){const i=(0,o._1)(e,"forgetBias","basicLSTMCell"),u=(0,o._1)(t,"lstmKernel","basicLSTMCell"),l=(0,o._1)(n,"lstmBias","basicLSTMCell"),c=(0,o._1)(r,"data","basicLSTMCell"),p=(0,o._1)(s,"c","basicLSTMCell"),d=(0,o._1)(a,"h","basicLSTMCell"),f=(0,$.z)([c,d],1),m=(0,E.O)(f,u),g=(0,h.I)(m,l),y=g.shape[1]/4,b=[g.shape[0],y],x=(0,D.t)(g,[0,0],b),w=(0,D.t)(g,[0,y],b),v=(0,D.t)(g,[0,2*y],b),k=(0,D.t)(g,[0,3*y],b),I=(0,h.I)((0,A.d)((0,_.X)(x),R(w)),(0,A.d)(p,(0,_.X)((0,h.I)(i,v))));return[I,(0,A.d)(R(I),(0,_.X)(k))]}});var F=n(8441),M=n(7505);const B=(0,u.op)({batchNorm2d_:function(e,t,n,r,s,a){const i=(0,o._1)(e,"x","batchNorm"),u=(0,o._1)(t,"mean","batchNorm"),l=(0,o._1)(n,"variance","batchNorm");let c,h;return null!=s&&(c=(0,o._1)(s,"scale","batchNorm")),null!=r&&(h=(0,o._1)(r,"offset","batchNorm")),p.assert(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),p.assert(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`)),p.assert(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&p.assert(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`)),null!=h&&p.assert(2===h.rank||1===h.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${h.rank}.`)),(0,M.t)(i,u,l,h,c,a)}});const L=(0,u.op)({batchNorm3d_:function(e,t,n,r,s,a){const i=(0,o._1)(e,"x","batchNorm"),u=(0,o._1)(t,"mean","batchNorm"),l=(0,o._1)(n,"variance","batchNorm");let c,h;return null!=s&&(c=(0,o._1)(s,"scale","batchNorm")),null!=r&&(h=(0,o._1)(r,"offset","batchNorm")),p.assert(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),p.assert(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`)),p.assert(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&p.assert(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`)),null!=h&&p.assert(3===h.rank||1===h.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${h.rank}.`)),(0,M.t)(i,u,l,h,c,a)}});const z=(0,u.op)({batchNorm4d_:function(e,t,n,r,s,a){const i=(0,o._1)(e,"x","batchNorm"),u=(0,o._1)(t,"mean","batchNorm"),l=(0,o._1)(n,"variance","batchNorm");let c,h;return null!=s&&(c=(0,o._1)(s,"scale","batchNorm")),null!=r&&(h=(0,o._1)(r,"offset","batchNorm")),p.assert(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),p.assert(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`)),p.assert(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&p.assert(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`)),null!=h&&p.assert(4===h.rank||1===h.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${h.rank}.`)),(0,M.t)(i,u,l,h,c,a)}});const U=(0,u.op)({bincount_:function(e,t,n){const r=(0,o._1)(e,"x","bincount"),s=(0,o._1)(t,"weights","bincount");return p.assert("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),p.assert(n>=0,(()=>`size must be non-negative, but got ${n}.`)),p.assert(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`)),a.BV.runKernel(i.zvY,{x:r,weights:s},{size:n})}});var P=n(569);const V=(0,u.op)({bitwiseAnd_:function(e,t){const n=(0,o._1)(e,"x","bitwiseAnd"),r=(0,o._1)(t,"y","bitwiseAnd");if(!(0,P.cO)(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if("int32"!==n.dtype||"int32"!==r.dtype)throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);return a.BV.runKernel(i.hCO,{a:n,b:r})}});const W=(0,u.op)({broadcastArgs_:function(e,t){const n=(0,o._1)(e,"s0","broadcastArgs","int32"),r=(0,o._1)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);return a.BV.runKernel(i.eEB,{s0:n,s1:r})}});var G=n(8247),H=n(2657);const j=(0,u.op)({ceil_:function(e){const t=(0,o._1)(e,"x","ceil","float32");return a.BV.runKernel(i.gJX,{x:t})}});var X=n(4006);const q=(0,u.op)({clipByValue_:function(e,t,n){const r=(0,o._1)(e,"x","clipByValue");return p.assert(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n?(0,X.h)(r.shape,t,r.dtype):a.BV.runKernel(i.xnO,{x:r},{clipValueMin:t,clipValueMax:n})}});var K=n(8723),Y=n(1661);const Q=(0,u.op)({concat1d_:function(e){return(0,$.z)(e,0)}});const Z=(0,u.op)({concat2d_:function(e,t){return(0,$.z)(e,t)}});const J=(0,u.op)({concat3d_:function(e,t){return(0,$.z)(e,t)}});const ee=(0,u.op)({concat4d_:function(e,t){return(0,$.z)(e,t)}});var te=n(1355),ne=n(4794),re=n(1405);const se=(0,u.op)({conv3d_:function(e,t,n,r,s="NDHWC",u=[1,1,1]){const l=(0,o._1)(e,"x","conv3d"),c=(0,o._1)(t,"filter","conv3d");let h=l,d=!1;4===l.rank&&(d=!0,h=(0,T.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),p.assert(5===h.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${h.rank}.`)),p.assert(5===c.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${c.rank}.`)),p.assert(h.shape[4]===c.shape[3],(()=>`Error in conv3d: depth of input (${h.shape[4]}) must match input depth for filter ${c.shape[3]}.`)),p.assert((0,N.jT)(n,u),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${u}'`)),p.assert("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`)),p.assert((0,N.U3)(u),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),p.assert((0,N.U3)(n),(()=>"Error in conv3D: Strides should be larger than 0."));const f=a.BV.runKernel(i.x12,{x:h,filter:c},{strides:n,pad:r,dataFormat:s,dilations:u});return d?(0,T.X)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}});var ae=n(7594);const ie=(0,u.op)({conv3dTranspose_:function(e,t,n,r,s){const a=(0,o._1)(e,"x","conv3dTranspose"),i=(0,o._1)(t,"filter","conv3dTranspose");return(0,ae._)(n,a,i,r,s)}});var oe=n(173),ue=n(2699),le=n(9640),ce=n(7405);const he=(0,u.op)({denseBincount_:function(e,t,n,r=!1){const s=(0,o._1)(e,"x","denseBincount"),u=(0,o._1)(t,"weights","denseBincount");return p.assert("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),p.assert(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),p.assert(n>=0,(()=>`size must be non-negative, but got ${n}.`)),p.assert(u.size===s.size||0===u.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${u.shape}.`)),a.BV.runKernel(i.QRR,{x:s,weights:u},{size:n,binaryOutput:r})}});var pe=n(9112),de=n(4718);const fe=(0,u.op)({diag_:function(e){const t=(0,o._1)(e,"x","diag");return a.BV.runKernel(i.$w,{x:t})}});var me=n(557),ge=n(1274),ye=n(9322),be=n(548);const xe=(0,u.op)({einsum_:function(e,...t){const n=t.map(((e,t)=>(0,o._1)(e,`tensors${t}`,"einsum")));return a.BV.runKernel(i.$g6,n,{equation:e})}});var we=n(3233);const ve=(0,u.op)({ensureShape_:function(e,t){const n=(0,o._1)(e,"x","ensureShape","string_or_numeric");if(!(0,P.DK)(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}});var ke=n(6477);const Ie=(0,u.op)({erf_:function(e){let t=(0,o._1)(e,"x","erf");return p.assert("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,S.p)(t,"float32")),a.BV.runKernel(i.Omj,{x:t})}});var Se=n(1954),Ne=n(4842),Te=n(1300);const Ce=(0,u.op)({expm1_:function(e){const t=(0,o._1)(e,"x","expm1");return a.BV.runKernel(i.Y0y,{x:t})}});var $e=n(7501);const Ee=(0,u.op)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=(0,H.f)([e,t],r),a=e<=t?e:t;for(let o=0;o<a;++o)s.set(1,o,o);const i=(0,T.X)(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return(0,$e.G)((0,Te.d)(i,0),[n[0],1,1]);if(2===n.length)return(0,$e.G)((0,Te.d)((0,Te.d)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,$e.G)((0,Te.d)((0,Te.d)((0,Te.d)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var Ae=n(6943),_e=n(9165),De=n(4926),Re=n(636),Oe=n(7630),Fe=n(4386);const Me=(0,u.op)({isFinite_:function(e){const t=(0,o._1)(e,"x","isFinite");return a.BV.runKernel(i.avt,{x:t})}});const Be=(0,u.op)({isInf_:function(e){const t=(0,o._1)(e,"x","isInf");return a.BV.runKernel(i.iWB,{x:t})}});const Le=(0,u.op)({isNaN_:function(e){const t=(0,o._1)(e,"x","isNaN");return a.BV.runKernel(i.r7n,{x:t})}});var ze=n(9133),Ue=n(6573),Pe=n(624);function Ve(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");return a.BV.runKernel(i.e7N,{},{start:e,stop:t,num:n})}var We=n(9648),Ge=n(2597);const He=(0,u.op)({log1p_:function(e){const t=(0,o._1)(e,"x","log1p");return a.BV.runKernel(i.kU,{x:t})}});var je=n(633),Xe=n(7370);const qe=(0,u.op)({softplus_:function(e){const t=(0,o._1)(e,"x","softplus");return a.BV.runKernel(i.MRv,{x:t})}});const Ke=(0,u.op)({logSigmoid_:function(e){const t=(0,o._1)(e,"x","logSigmoid");return(0,je.cb)((e=>({value:(0,Xe.W)(qe((0,Xe.W)(e))),gradFunc:t=>(0,A.d)(t,(0,_.X)((0,Xe.W)(e)))})))(t)}});var Ye=n(3307),Qe=n(827),Ze=n(5475);const Je=(0,u.op)({logSoftmax_:function(e,t=-1){const n=(0,o._1)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=(0,je.cb)(((e,n)=>{const r=(0,Ye.F)(e,t,!0),s=(0,Qe.l)(e,r),a=(0,Qe.l)((0,S.p)(s,"float32"),(0,Ge.c)((0,Ze.S)((0,Ne.Q)(s),t,!0)));n([a]);return{value:a,gradFunc:(e,n)=>{const[r]=n,s=(0,Ne.Q)(r);return(0,Qe.l)(e,(0,A.d)((0,Ze.S)(e,t,!0),s))}}}));return r(n)}});var et=n(1391),tt=n(2856),nt=n(8651),rt=n(5750),st=n(596);const at=2147483648;const it=(0,u.op)({searchSorted_:function(e,t,n="left"){const r=(0,o._1)(e,"sortedSequence","searchSorted"),s=(0,o._1)(t,"values","searchSorted"),u=s.shape[s.shape.length-1],l=(0,T.X)(r,[-1,r.shape[r.shape.length-1]]),c=(0,T.X)(s,[-1,u]);if(l.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(l.shape[0]!==c.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,P.NA)(c.shape)>=at)throw new Error("values tensor size must less than 2147483648");if(l.shape[1]>=at)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${l.shape[1]}`);return a.BV.runKernel(i.nr8,{sortedSequence:l,values:c},{side:n})}});function ot(e,t){return it(e,t,"left")}var ut=n(1174);const lt=(0,u.op)({maxPool3d_:function(e,t=[1,1,1],n,r,s,u="NDHWC"){const l=(0,o._1)(e,"x","maxPool3d");let c=l,h=!1;4===l.rank&&(h=!0,c=(0,T.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),p.assert(5===c.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${c.rank}.`)),p.assert("NDHWC"===u,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${u}`)),(0,N.m)("maxPool3d",r,s);const d=a.BV.runKernel(i.OAf,{x:c},{filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:u});return h?(0,T.X)(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});const ct=(0,u.op)({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const u=(0,o._1)(e,"x","maxPoolWithArgmax"),l=a.BV.runKernel(i.vFR,{x:u},{filterSize:t,strides:n,pad:r,includeBatchInIndex:s});return{result:l[0],indexes:l[1]}}});var ht=n(632),pt=n(5130),dt=n(4917),ft=n(4077);function mt(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=(0,o._1)(e,"x","meshgrid",e instanceof ft.es?e.dtype:"float32");if(void 0===t)return[r];let s=(0,o._1)(t,"y","meshgrid",t instanceof ft.es?t.dtype:"float32");const a=(0,P.NA)(r.shape),i=(0,P.NA)(s.shape);return"xy"===n?(r=(0,T.X)(r,[1,-1]),s=(0,T.X)(s,[-1,1]),[(0,E.O)((0,dt.i)([i,1],r.dtype),r),(0,E.O)(s,(0,dt.i)([1,a],s.dtype))]):(r=(0,T.X)(r,[-1,1]),s=(0,T.X)(s,[1,-1]),[(0,E.O)(r,(0,dt.i)([1,i],r.dtype)),(0,E.O)((0,dt.i)([a,1],s.dtype),s)])}var gt=n(5735),yt=n(4513),bt=n(1483),xt=n(5228),wt=n(3591),vt=n(248);const kt=(0,u.op)({moments_:function(e,t=null,n=!1){e=(0,o._1)(e,"x","moments");const r=(0,p.parseAxisParam)(t,e.shape),s=(0,pt.J)(e,r,n);let a=s.shape;n||(a=(0,wt.rv)(s.shape,r));const i=(0,vt.h)((0,Qe.l)((0,S.p)(e,"float32"),(0,T.X)(s,a)));return{mean:s,variance:(0,pt.J)(i,r,n)}}});const It=(0,u.op)({multiRNNCell_:function(e,t,n,r){const s=(0,o._1)(t,"data","multiRNNCell"),a=(0,o.sI)(n,"c","multiRNNCell"),i=(0,o.sI)(r,"h","multiRNNCell");let u=s;const l=[];for(let o=0;o<e.length;o++){const t=e[o](u,a[o],i[o]);l.push(t[0]),l.push(t[1]),u=t[1]}const c=[],h=[];for(let o=0;o<l.length;o+=2)c.push(l[o]),h.push(l[o+1]);return[c,h]}});const St=(0,u.op)({multinomial_:function(e,t,n,r=!1){const s=(0,o._1)(e,"logits","multinomial"),u=s.size,l=s.rank;if(u<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${u}.`);if(l>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${l}`);n=n||Math.random();const c=1===l?(0,T.X)(s,[1,-1]):s,h=a.BV.runKernel(i.NZg,{logits:c},{numSamples:t,seed:n,normalized:r});return 1===l?(0,T.X)(h,[h.size]):h}});var Nt=n(6500),Tt=n(6708);const Ct=(0,u.op)({onesLike_:function(e){const t=(0,o._1)(e,"x","onesLike");return a.BV.runKernel(i.qWM,{x:t})}});const $t=(0,u.op)({outerProduct_:function(e,t){const n=(0,o._1)(e,"v1","outerProduct"),r=(0,o._1)(t,"v2","outerProduct");p.assert(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const s=(0,T.X)(n,[-1,1]),a=(0,T.X)(r,[1,-1]);return(0,E.O)(s,a)}});var Et=n(9682);const At=(0,u.op)({pad1d_:function(e,t,n=0){return(0,p.assert)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),(0,Et.v)(e,[t],n)}});const _t=(0,u.op)({pad2d_:function(e,t,n=0){return(0,p.assert)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Et.v)(e,t,n)}});const Dt=(0,u.op)({pad3d_:function(e,t,n=0){return(0,p.assert)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Et.v)(e,t,n)}});const Rt=(0,u.op)({pad4d_:function(e,t,n=0){return(0,p.assert)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,Et.v)(e,t,n)}});var Ot=n(5860),Ft=n(3453),Mt=n(8151),Bt=n(9798),Lt=n(9451);const zt=(0,u.op)({raggedGather_:function(e,t,n,r){const s=e.map(((e,t)=>(0,o._1)(e,`tensors${t}`,"raggedGather","int32"))),u=(0,o._1)(t,"paramsDenseValues","raggedGather"),l=(0,o._1)(n,"indices","raggedGather","int32"),c=a.BV.runKernel(i.dDz,{paramsNestedSplits:s,paramsDenseValues:u,indices:l},{outputRaggedRank:r});return{outputNestedSplits:c.slice(0,c.length-1),outputDenseValues:c[c.length-1]}}});const Ut=(0,u.op)({raggedRange_:function(e,t,n){const r=(0,o._1)(e,"starts","raggedRange"),s=(0,o._1)(t,"limits","raggedRange",r.dtype),u=(0,o._1)(n,"deltas","raggedRange",r.dtype),l=a.BV.runKernel(i.CQl,{starts:r,limits:s,deltas:u});return{rtNestedSplits:l[0],rtDenseValues:l[1]}}});const Pt=(0,u.op)({raggedTensorToTensor_:function(e,t,n,r,s){const u=(0,o._1)(e,"shape","raggedTensorToTensor","int32"),l=(0,o._1)(t,"values","raggedTensorToTensor"),c=(0,o._1)(n,"defaultValue","raggedTensorToTensor",l.dtype),h=r.map(((e,t)=>(0,o._1)(e,`tensors${t}`,"raggedTensorToTensor","int32")));return a.BV.runKernel(i.BiW,{shape:u,values:l,defaultValue:c,rowPartitionTensors:h},{rowPartitionTypes:s})}});const Vt=(0,u.op)({rand_:function(e,t,n){(0,P.Mu)(e);const r=(0,p.sizeFromShape)(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let a=0;a<r;a++)s[a]=t();return a.BV.makeTensor(s,e,n)}});var Wt=n(6377);n(6625);class Gt{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=Wt.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Ht{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=Wt.alea(s.toString()),this.randn=new Gt(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a*=1/this.beta*this.d,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class jt{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"===typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Wt.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Xt=(0,u.op)({randomGamma_:function(e,t,n=1,r="float32",s){if((0,P.Mu)(e),null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const a=new Ht(t,n,r,s),i=(0,H.f)(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}});const qt=(0,u.op)({randomNormal_:function(e,t=0,n=1,r,s){if((0,P.Mu)(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new Gt(t,n,r,!1,s),i=(0,H.f)(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}});const Kt=(0,u.op)({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return qt(e,0,1,t,n)}});const Yt=(0,u.op)({randomUniform_:function(e,t=0,n=1,r="float32",s){(0,P.Mu)(e);const a=(0,H.f)(e,r),i=new jt(t,n,null,s);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}});const Qt=(0,u.op)({randomUniformInt_:function(e,t,n,r){return Yt(e,t,n,"int32",r)}});function Zt(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");return a.BV.runKernel(i.e6w,{},{start:e,stop:t,step:n,dtype:r})}var Jt=n(766);const en=(0,u.op)({reciprocal_:function(e){const t=(0,o._1)(e,"x","reciprocal");return a.BV.runKernel(i.$HU,{x:t})}});var tn=n(7409),nn=n(3582),rn=n(7486);const sn=(0,u.op)({reverse1d_:function(e){const t=(0,o._1)(e,"x","reverse");return p.assert(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),(0,rn.G)(t,0)}});const an=(0,u.op)({reverse2d_:function(e,t){const n=(0,o._1)(e,"x","reverse");return p.assert(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),(0,rn.G)(n,t)}});const on=(0,u.op)({reverse3d_:function(e,t){const n=(0,o._1)(e,"x","reverse");return p.assert(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),(0,rn.G)(n,t)}});const un=(0,u.op)({reverse4d_:function(e,t){const n=(0,o._1)(e,"x","reverse");return p.assert(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),(0,rn.G)(n,t)}});const ln=(0,u.op)({round_:function(e){const t=(0,o._1)(e,"x","round");return a.BV.runKernel(i.e07,{x:t})}});var cn=n(2634),hn=n(9494),pn=n(5503),dn=n(8678);const fn=async function(e,t){const n=(0,o._1)(e,"x","setdiff1d"),r=(0,o._1)(t,"y","setdiff1d");p.assert(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),p.assert(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),p.assert(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),a=await r.data(),i=new Set(a);let u=0;for(let o=0;o<s.length;o++)i.has(s[o])||u++;const l=new ft.YD([u],n.dtype),c=new ft.YD([u],"int32");for(let o=0,h=0;o<s.length;o++)i.has(s[o])||(l.values[h]=s[o],c.values[h]=o,h++);return[l.toTensor(),c.toTensor()]};const mn=(0,u.op)({sign_:function(e){const t=(0,o._1)(e,"x","sign");return a.BV.runKernel(i.i5y,{x:t})}});var gn=n(9331),yn=n(3254);const bn=(0,u.op)({slice1d_:function(e,t,n){const r=(0,o._1)(e,"x","slice1d");return p.assert(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),(0,D.t)(r,[t],[n])}});const xn=(0,u.op)({slice2d_:function(e,t,n){const r=(0,o._1)(e,"x","slice2d");return p.assert(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),(0,D.t)(r,t,n)}});const wn=(0,u.op)({slice3d_:function(e,t,n){const r=(0,o._1)(e,"x","slice3d");return p.assert(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),(0,D.t)(r,t,n)}});const vn=(0,u.op)({slice4d_:function(e,t,n){const r=(0,o._1)(e,"x","slice4d");return p.assert(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),(0,D.t)(r,t,n)}});const kn=(0,u.op)({softmax_:function(e,t=-1){const n=(0,o._1)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);return a.BV.runKernel(i.Gcp,{logits:n},{dim:t})}});var In=n(7918);const Sn=(0,u.op)({fft_:function(e){return(0,p.assert)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`)),a.BV.runKernel(i.vwp,{input:e})}});const Nn=(0,u.op)({ifft_:function(e){return(0,p.assert)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`)),a.BV.runKernel(i.Qg5,{input:e})}});const Tn=(0,u.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=(0,T.X)(e,[n,t]);r=Nn(s)}else{const s=[n,2*(t-1)],a=(0,T.X)((0,Jt.k)(e),[n,t]),i=(0,T.X)((0,Fe.a)(e),[n,t]),o=(0,rn.G)((0,D.t)(a,[0,1],[n,t-2]),1),u=(0,A.d)((0,rn.G)((0,D.t)(i,[0,1],[n,t-2]),1),(0,hn.i)(-1)),l=(0,$.z)([a,o],1),c=(0,$.z)([i,u],1),h=(0,T.X)((0,Y.P)(l,c),[s[0],s[1]]);r=Nn(h)}if(r=(0,Jt.k)(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=(0,T.X)(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});var Cn=n(8644),$n=n(723),En=n(6577);const An=(0,u.op)({rfft_:function(e,t){(0,p.assert)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=(0,D.t)(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=(0,$.z)([e,(0,$n.l)(r)],e.shape.length-1),n=t}else s=e;const a=(0,En.P)(s),i=(0,T.X)((0,Y.P)(s,a),[r,n]),o=Sn(i),u=Math.floor(n/2)+1,l=(0,Jt.k)(o),c=(0,Fe.a)(o),h=(0,Cn.V)(l,[u,n-u],l.shape.length-1),d=(0,Cn.V)(c,[u,n-u],c.shape.length-1),f=s.shape.slice();return f[s.shape.length-1]=u,(0,T.X)((0,Y.P)(h[0],d[0]),f)}});var _n=n(3261),Dn=n(5265),Rn=n(9590),On=n(2991),Fn=n(1901);const Mn=(0,u.op)({stridedSlice_:function(e,t,n,r,s=0,u=0,l=0,c=0,h=0){const p=(0,o._1)(e,"x","stridedSlice","string_or_numeric");return a.BV.runKernel(i.jQk,{x:p},{begin:t,end:n,strides:r,beginMask:s,endMask:u,ellipsisMask:l,newAxisMask:c,shrinkAxisMask:h})}});const Bn=(0,u.op)({tan_:function(e){const t=(0,o._1)(e,"x","tan","float32");return a.BV.runKernel(i.sEM,{x:t})}});var Ln=n(701),zn=n(7852);function Un(e,t){(0,p.assertNonNull)(e);const n=(0,o.C)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,zn.H)(e,null,n,t)}function Pn(e,t,n){if((0,p.assertNonNull)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=(0,o.C)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,zn.H)(e,t,r,n)}var Vn=n(9906);function Wn(e,t,n){if((0,p.assertNonNull)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=(0,o.C)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,zn.H)(e,t,r,n)}function Gn(e,t,n){if((0,p.assertNonNull)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=(0,o.C)(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,zn.H)(e,t,r,n)}function Hn(e,t,n){if((0,p.assertNonNull)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=(0,o.C)(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return(0,zn.H)(e,t=t||r,r,n)}var jn=n(3028);const Xn=(0,u.op)({tensorScatterUpdate_:function(e,t,n){const r=(0,o._1)(e,"tensor","tensorScatterupdate"),s=(0,o._1)(t,"indices","tensorScatterupdate","int32"),u=(0,o._1)(n,"updates","tensorScatterupdate");if(jn.b0(u,s,r.shape),r.dtype!==u.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${u.dtype}.`);return a.BV.runKernel(i.SIB,{tensor:r,indices:s,updates:u},{})}});var qn=n(3243);const Kn=(0,u.op)({truncatedNormal_:function(e,t=0,n=1,r,s){if((0,P.Mu)(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new Gt(t,n,r,!0,s),i=(0,H.f)(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}});var Yn=n(9608),Qn=n(8749),Zn=n(4136);function Jn(e,t){return it(e,t,"right")}function er(e,t=!0,n,r){return a.BV.makeVariable(e,t,n,r)}var tr=n(5912),nr=n(8333);const rr=async function(e){const t=(0,o._1)(e,"condition","whereAsync","bool"),n=await t.data(),r=(0,nr.Z)(t.shape,n);return e!==t&&t.dispose(),r};const sr=async function(e,t,n){const r=(0,o._1)(e,"tensor","boolMask"),s=(0,o._1)(t,"mask","boolMask","bool"),a=null==n?0:n,i=s.rank,u=r.shape;p.assert(i>0,(()=>"mask cannot be scalar")),p.assertShapesMatch(u.slice(a,a+i),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let o=a;o<a+i;o++)l*=u[o];const c=u.slice(0,a).concat([l],u.slice(a+i)),h=(0,T.X)(r,c),d=(0,T.X)(s,[-1]),f=await rr(d),m=(0,Rn.L)(f,[1]),g=(0,De.I)(h,m,a);return e!==r&&r.dispose(),t!==s&&s.dispose(),m.dispose(),h.dispose(),d.dispose(),f.dispose(),g};var ar=n(9065),ir=n(3561),or=n(747);const ur=(0,u.op)({movingAverage_:function(e,t,n,r,s=!0){const a=(0,o._1)(e,"v","movingAverage"),i=(0,o._1)(t,"x","movingAverage"),u=(0,o._1)(n,"decay","movingAverage");(0,or.assertTypesMatch)(a,i),p.assert(p.arraysEqual(a.shape,i.shape),(()=>"Shape mismatch in v and x"));const l=(0,hn.i)(1),c=(0,Qe.l)(l,u);let d=(0,A.d)((0,Qe.l)(i,a),c);if(s){p.assert(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=(0,o._1)(r,"step","movingAverage");d=(0,ge.h)(d,(0,Qe.l)(l,(0,Ft.s)(u,e)))}return(0,h.I)(a,d)}});const lr=(0,u.op)({scatterND_:function(e,t,n){(0,P.Mu)(n);const r=(0,o._1)(e,"indices","scatterND","int32"),s=(0,o._1)(t,"updates","scatterND");return jn.b0(s,r,n),a.BV.runKernel(i.xQA,{indices:r,updates:s},{shape:n})}});const cr=(0,u.op)({sparseToDense_:function(e,t,n,r=0){(0,P.Mu)(n);const s=(0,o._1)(e,"sparseIndices","sparseToDense","int32"),u=(0,o._1)(t,"sparseValues","sparseToDense","string_or_numeric"),l=(0,o._1)(r,"defaultValue","sparseToDense",u.dtype);return function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);if(0!==t.rank&&(1!==t.rank||t.size!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,u,n,l),a.BV.runKernel(i.D2d,{sparseIndices:s,sparseValues:u,defaultValue:l},{outputShape:n})}});const hr=(0,u.op)({gatherND_:function(e,t){const n=(0,o._1)(t,"indices","gatherND","int32"),r=(0,o._1)(e,"x","gatherND","string_or_numeric");return a.BV.runKernel(i.q1x,{params:r,indices:n})}});const pr=(0,u.op)({dropout_:function(e,t,n,r){const s=(0,o._1)(e,"x","dropout");if(p.assert("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),p.assert(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof ft.es?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(p.arraysEqual(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)n.push(null==t[r]&&null!=e.shape[r]?e.shape[r]:t[r]);return n}return t}(s,n),i=1-t,u=(0,ge.h)((0,Ae.G)((0,h.I)(Yt(a,0,1,"float32",r),i)),i);return(0,A.d)(s,u)}});function dr(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function fr(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return Un(s,"float32")}const mr=async function(e,t,n=1){const r=(0,o._1)(e,"predictions","inTopK"),s=(0,o._1)(t,"targets","inTopK");(0,p.assert)(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),(0,p.assert)(r.rank-1===s.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`)),(0,p.assertShapesMatch)(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];(0,p.assert)(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const i=await r.data(),u=await s.data(),[l,c]=[i.length/a,a],h=(0,p.getTypedArrayFromDType)("bool",l);for(let o=0;o<l;o++){const e=o*c,t=i.subarray(e,e+c),r=[];for(let n=0;n<t.length;n++)r.push({value:t[n],index:n});r.sort(((e,t)=>t.value-e.value)),h[o]=0;for(let s=0;s<n;s++)if(r[s].index===u[o]){h[o]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),(0,Ln.X)(h,s.shape,"bool")};var gr=n(2200),yr=n(6013),br=n(9832),xr=n(9323);const wr=(0,u.op)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:u=[1,1],dimRoundingMode:l,bias:c,activation:d="linear",preluActivationWeights:f,leakyreluAlpha:m}){if(!1===(0,xr.uy)(a.BV.state.gradientDepth,d=d||"linear")){p.assert("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let a=(0,ne.T)(e,t,n,r,s,u,l);return null!=c&&(a=(0,h.I)(a,c)),(0,xr.QH)(a,d,f,m)}const g=(0,o._1)(e,"x","conv2d","float32"),y=(0,o._1)(t,"filter","conv2d","float32");let b=g,x=!1;3===g.rank&&(x=!0,b=(0,T.X)(g,[1,g.shape[0],g.shape[1],g.shape[2]])),p.assert(4===b.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${b.rank}.`)),p.assert(4===y.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${y.rank}.`)),N.m("fused conv2d",r,l);const w="NHWC"===s?b.shape[3]:b.shape[1];p.assert(y.shape[2]===w,(()=>`Error in conv2d: depth of input (${w}) must match input depth for filter ${y.shape[2]}.`)),p.assert(N.jT(n,u),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${u}'`));const v=N.Ix(b.shape,y.shape,n,u,r,l);let k,I;if(null!=c&&(k=(0,o._1)(c,"bias","fused conv2d"),[k]=(0,or.makeTypesMatch)(k,g),"NHWC"===s?gr.assertAndGetBroadcastShape(v.outShape,k.shape):(p.assert(k.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${k.shape.length}.`)),p.assert(0===k.shape.length||k.shape[0]===v.outChannels||1===k.shape[0],(()=>`Error in fused conv2d: bias shape (${k.shape}) is not compatible with the number of output channels (${v.outChannels})`)))),null!=f){const e=f.shape;if(p.assert(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)p.assert(1===e[0]||e[0]===v.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${v.outChannels}).`));else if(3===e.length)try{gr.assertAndGetBroadcastShape(e,v.outShape)}catch(E){throw Error(`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${v.outShape}).`)}I=(0,o._1)(f,"prelu weights","fused conv2d")}const S=(e,t)=>{p.assert("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));const[a,i,o,l]=t,c=(0,xr.Fr)(e,o,d);p.assert(N.I0(u),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${u}'`));const h=[(0,br._)(i.shape,c,a,n,r),(0,yr.p)(i,c,a.shape,n,r)];if(null!=l){const e=(0,xr.pf)(l,c);h.push(e)}return h},C={x:b,filter:y,bias:k,preluActivationWeights:I},$={strides:n,pad:r,dataFormat:s,dilations:u,dimRoundingMode:l,activation:d,leakyreluAlpha:m};if(null==c){const e=(0,je.cb)(((e,t,n)=>{let r=a.BV.runKernel(i._V0,C,$);return n([t,e,r]),x&&(r=(0,T.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:S}}));return e(b,y)}{const e=(0,je.cb)(((e,t,n,r)=>{let s=a.BV.runKernel(i._V0,C,$);return r([t,e,s,n]),x&&(s=(0,T.X)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:S}}));return e(b,y,k)}}});var vr=n(8098),kr=n(4375);const Ir=(0,u.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:u=[1,1],dimRoundingMode:l,bias:c,activation:d="linear",preluActivationWeights:f,leakyreluAlpha:m}){if(!1===(0,xr.uy)(a.BV.state.gradientDepth,d)){let a=(0,de.B)(e,t,n,r,s,u,l);return null!=c&&(a=(0,h.I)(a,c)),(0,xr.QH)(a,d,f,m)}const g=(0,o._1)(e,"x","depthwiseConv2d","float32"),y=(0,o._1)(t,"filter","depthwiseConv2d","float32");let b=g,x=!1;3===g.rank&&(x=!0,b=(0,T.X)(g,[1,g.shape[0],g.shape[1],g.shape[2]])),p.assert(4===b.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${b.rank}.`)),p.assert(4===y.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${y.rank}.`)),p.assert(b.shape[3]===y.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${b.shape[3]}) must match the inChannels dimension in filter ${y.shape[2]}.`)),null==u&&(u=[1,1]),p.assert(N.jT(n,u),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${u}'`)),N.m("fused depthwiseConv2d",r,l);const w=N.Ix(b.shape,y.shape,n,u,r,l,!0);let v,k;null!=c&&(v=(0,o._1)(c,"bias","fused conv2d"),[v]=(0,or.makeTypesMatch)(v,g),gr.assertAndGetBroadcastShape(w.outShape,v.shape)),null!=f&&(k=(0,o._1)(f,"prelu weights","fused depthwiseConv2d"));const I=(e,t)=>{p.assert(N.I0(u),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${u}'`));const[s,a,i,o]=t,c=(0,xr.Fr)(e,i,d),h=(0,kr.v)(a.shape,c,s,n,r,u,l),f=(0,vr.z)(a,c,s.shape,n,r,u,l);if(null!=o){return[h,f,(0,xr.pf)(v,c)]}return[h,f]},S={x:b,filter:y,bias:v,preluActivationWeights:k},C={strides:n,pad:r,dataFormat:s,dilations:u,dimRoundingMode:l,activation:d,leakyreluAlpha:m};if(null==c){const e=(0,je.cb)(((e,t,n)=>{let r=a.BV.runKernel(i.luS,S,C);return n([t,e,r]),x&&(r=(0,T.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:I}}));return e(b,y)}{const e=(0,je.cb)(((e,t,n,r)=>{let s=a.BV.runKernel(i.luS,S,C);return r([t,e,s,n]),x&&(s=(0,T.X)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:I}}));return e(b,y,v)}}});const Sr=(0,u.op)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c=.2}){if(!1===(0,xr.uy)(a.BV.state.gradientDepth,u)){let a=(0,E.O)(e,t,n,r);return null!=s&&(a=(0,h.I)(a,s)),(0,xr.QH)(a,u,l,c)}let d=(0,o._1)(e,"a","fused matMul"),f=(0,o._1)(t,"b","fused matMul");[d,f]=(0,or.makeTypesMatch)(d,f);const m=n?d.shape[d.rank-2]:d.shape[d.rank-1],g=r?f.shape[f.rank-1]:f.shape[f.rank-2],y=n?d.shape[d.rank-1]:d.shape[d.rank-2],b=r?f.shape[f.rank-2]:f.shape[f.rank-1],x=d.shape.slice(0,-2),w=f.shape.slice(0,-2),v=p.sizeFromShape(x),k=p.sizeFromShape(w);p.assert(m===g,(()=>`Error in fused matMul: inner shapes (${m}) and (${g}) of Tensors with shapes ${d.shape} and ${f.shape} and transposeA=${n} and transposeB=${r} must match.`));const I=gr.assertAndGetBroadcastShape(d.shape.slice(0,-2),f.shape.slice(0,-2)).concat([y,b]),S=(0,T.X)(d,n?[v,m,y]:[v,y,m]),N=(0,T.X)(f,r?[k,b,g]:[k,g,b]);let C,$;null!=s&&(C=(0,o._1)(s,"bias","fused matMul"),[C]=(0,or.makeTypesMatch)(C,d),gr.assertAndGetBroadcastShape(I,C.shape)),null!=l&&($=(0,o._1)(l,"prelu weights","fused matMul"));const A=(e,t)=>{const[a,i,o,l]=t,c=(0,xr.Fr)((0,T.X)(e,o.shape),o,u);let h,p;if(n||r?!n&&r?(h=(0,E.O)(c,i,!1,!1),p=(0,E.O)(c,a,!0,!1)):n&&!r?(h=(0,E.O)(i,c,!1,!0),p=(0,E.O)(a,c,!1,!1)):(h=(0,E.O)(i,c,!0,!0),p=(0,E.O)(c,a,!0,!0)):(h=(0,E.O)(c,i,!1,!0),p=(0,E.O)(a,c,!0,!1)),null!=s){return[h,p,(0,xr.pf)(l,c)]}return[h,p]},_={a:S,b:N,bias:C,preluActivationWeights:$},D={transposeA:n,transposeB:r,activation:u,leakyreluAlpha:c};if(null==s){const e=(0,je.cb)(((e,t,n)=>{const r=a.BV.runKernel(i.usg,_,D);return n([e,t,r]),{value:(0,T.X)(r,I),gradFunc:A}}));return e(S,N)}{const e=(0,je.cb)(((e,t,n,r)=>{const s=a.BV.runKernel(i.usg,_,D);return r([e,t,s,n]),{value:(0,T.X)(s,I),gradFunc:A}}));return e(S,N,C)}}});const Nr=(0,u.op)({hammingWindow_:function(e){return fr(e,.54,.46)}});const Tr=(0,u.op)({hannWindow_:function(e){return fr(e,.5,.5)}});const Cr=(0,u.op)({frame_:function(e,t,n,r=!1,s=0){let a=0;const i=[];for(;a+t<=e.size;)i.push((0,D.t)(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=(0,$.z)([(0,D.t)(e,a,t-r),(0,X.h)([r],s)]);i.push(o),a+=n}return 0===i.length?Pn([],[0,t]):(0,T.X)((0,$.z)(i),[i.length,t])}});const $r=(0,u.op)({stft_:function(e,t,n,r,s=Tr){null==r&&(r=dr(t));const a=Cr(e,t,n),i=(0,A.d)(a,s(t));return An(i,r)}});const Er=(0,u.op)({cropAndResize_:function(e,t,n,r,s="bilinear",u=0){const l=(0,o._1)(e,"image","cropAndResize"),c=(0,o._1)(t,"boxes","cropAndResize","float32"),h=(0,o._1)(n,"boxInd","cropAndResize","int32"),d=c.shape[0];return p.assert(4===l.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${l.rank}.`)),p.assert(2===c.rank&&4===c.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${d},4] but had shape ${c.shape}.`)),p.assert(1===h.rank&&h.shape[0]===d,(()=>`Error in cropAndResize: boxInd must be have size [${d}] but had shape ${c.shape}.`)),p.assert(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),p.assert(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),p.assert("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`)),a.BV.runKernel(i.VcC,{image:l,boxes:c,boxInd:h},{method:s,extrapolationValue:u,cropSize:r})}});const Ar=(0,u.op)({flipLeftRight_:function(e){const t=(0,o._1)(e,"image","flipLeftRight","float32");return p.assert(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`)),a.BV.runKernel(i.Uyb,{image:t},{})}});const _r=(0,u.op)({grayscaleToRGB_:function(e){const t=(0,o._1)(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];p.assert(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),p.assert(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,(0,$e.G)(t,s)}});const Dr=(0,u.op)({rgbToGrayscale_:function(e){const t=(0,o._1)(e,"image","RGBToGrayscale"),n=t.shape[t.rank-1];p.assert(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),p.assert(3===n,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${n}.`));const r=t.dtype,s=(0,S.p)(t,"float32"),a=Un([.2989,.587,.114]);let i;switch(t.rank){case 2:i=xe("ij,j->i",s,a);break;case 3:i=xe("ijk,k->ij",s,a);break;case 4:i=xe("ijkl,l->ijk",s,a);break;case 5:i=xe("ijklm,m->ijkl",s,a);break;case 6:i=xe("ijklmn,n->ijklm",s,a);break;default:throw new Error("Not a valid tensor rank.")}return i=(0,Te.d)(i,-1),(0,S.p)(i,r)}});const Rr=(0,u.op)({rotateWithOffset_:function(e,t,n=0,r=.5){const s=(0,o._1)(e,"image","rotateWithOffset","float32");return p.assert(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`)),a.BV.runKernel(i.b9H,{image:s},{radians:t,fillValue:n,center:r})}});function Or(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),p.assert(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),p.assert(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),p.assert(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),p.assert(1===t.rank,(()=>"scores must be a 1D tensor")),p.assert(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),p.assert(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const Fr=(0,u.op)({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const u=(0,o._1)(e,"boxes","nonMaxSuppression","float32"),l=(0,o._1)(t,"scores","nonMaxSuppression","float32"),c=Or(u,l,n,r,s);return a.BV.runKernel(i.uv1,{boxes:u,scores:l},{maxOutputSize:n=c.maxOutputSize,iouThreshold:r=c.iouThreshold,scoreThreshold:s=c.scoreThreshold})}});var Mr=n(3337);const Br=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=(0,o._1)(e,"boxes","nonMaxSuppressionAsync"),i=(0,o._1)(t,"scores","nonMaxSuppressionAsync"),u=Or(a,i,n,r,s);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold;const l=await Promise.all([a.data(),i.data()]),c=l[0],h=l[1],{selectedIndices:p}=(0,Mr.GP)(c,h,n,r,s);return a!==e&&a.dispose(),i!==t&&i.dispose(),Un(p,"int32")};const Lr=(0,u.op)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,u=0){const l=(0,o._1)(e,"boxes","nonMaxSuppression"),c=(0,o._1)(t,"scores","nonMaxSuppression"),h=Or(l,c,n,r,s,u),p=a.BV.runKernel(i.W0H,{boxes:l,scores:c},{maxOutputSize:n=h.maxOutputSize,iouThreshold:r=h.iouThreshold,scoreThreshold:s=h.scoreThreshold,softNmsSigma:u=h.softNmsSigma});return{selectedIndices:p[0],selectedScores:p[1]}}});const zr=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=(0,o._1)(e,"boxes","nonMaxSuppressionAsync"),u=(0,o._1)(t,"scores","nonMaxSuppressionAsync"),l=Or(i,u,n,r,s,a);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,a=l.softNmsSigma;const c=await Promise.all([i.data(),u.data()]),h=c[0],p=c[1],{selectedIndices:d,selectedScores:f}=(0,Mr.pA)(h,p,n,r,s,a);return i!==e&&i.dispose(),u!==t&&u.dispose(),{selectedIndices:Un(d,"int32"),selectedScores:Un(f)}};const Ur=(0,u.op)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,u=!1){const l=(0,o._1)(e,"boxes","nonMaxSuppression"),c=(0,o._1)(t,"scores","nonMaxSuppression"),h=Or(l,c,n,r,s,null),p=a.BV.runKernel(i.cye,{boxes:l,scores:c},{maxOutputSize:h.maxOutputSize,iouThreshold:h.iouThreshold,scoreThreshold:h.scoreThreshold,padToMaxOutputSize:u});return{selectedIndices:p[0],validOutputs:p[1]}}});const Pr=async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=(0,o._1)(e,"boxes","nonMaxSuppressionAsync"),u=(0,o._1)(t,"scores","nonMaxSuppressionAsync"),l=Or(i,u,n,r,s,null),c=l.maxOutputSize,h=l.iouThreshold,p=l.scoreThreshold,[d,f]=await Promise.all([i.data(),u.data()]),{selectedIndices:m,validOutputs:g}=(0,Mr.qP)(d,f,c,h,p,a);return i!==e&&i.dispose(),u!==t&&u.dispose(),{selectedIndices:Un(m,"int32"),validOutputs:(0,hn.i)(g,"int32")}};var Vr=n(3305),Wr=n(5098);const Gr=(0,u.op)({threshold_:function(e,t="binary",n=!1,r=.5){const s=(0,o._1)(e,"image","threshold"),a=s.shape[0]*s.shape[1];let i,u,l,c,d=(0,A.d)(Un([r]),255);if(p.assert(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),p.assert(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),p.assert("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),p.assert("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[i,u,l]=(0,Cn.V)(s,[1,1,1],-1);const e=(0,A.d)(i,.2989),t=(0,A.d)(u,.587),n=(0,A.d)(l,.114);c=(0,h.I)((0,h.I)(e,t),n)}else c=e;if("otsu"===t){d=function(e,t){let n,r,s,a,i,o,u=Un([-1]),l=Un([0]),c=Un([0]);for(let p=0;p<e.size-1;p++){n=(0,D.t)(e,0,p+1),r=(0,D.t)(e,p+1),i=(0,ge.h)((0,Ze.S)(n),t),o=(0,ge.h)((0,Ze.S)(r),t);const d=(0,Ze.S)((0,A.d)(n,Zt(0,n.size)));s=(0,ge.h)(d,(0,Ze.S)(n));const f=(0,X.h)(r.shape,n.size),m=(0,h.I)(Zt(0,r.size),f),g=(0,A.d)(r,m);a=(0,ge.h)((0,Ze.S)(g),(0,Ze.S)(r));const y=(0,Qe.l)(s,a),b=(0,Qe.l)(s,a),x=(0,A.d)(i,o);c=(0,A.d)((0,A.d)(x,y),b);const w=(0,Re.p)(c,l);l=(0,tr.a)(w,c,l),u=(0,tr.a)(w,Un([p]),u)}return u}(U((0,S.p)(ln(c),"int32"),(0,Ln.X)([]),256),a)}const f=n?(0,Pe.z)(c,d):(0,Re.p)(c,d);return(0,S.p)((0,A.d)(f,255),"int32")}});const Hr=(0,u.op)({transform_:function(e,t,n="nearest",r="constant",s=0,u){const l=(0,o._1)(e,"image","transform","float32"),c=(0,o._1)(t,"transforms","transform","float32");return p.assert(4===l.rank,(()=>`Error in transform: image must be rank 4,but got rank ${l.rank}.`)),p.assert(2===c.rank&&(c.shape[0]===l.shape[0]||1===c.shape[0])&&8===c.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),p.assert(null==u||2===u.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${u}.`)),a.BV.runKernel(i.wx7,{image:l,transforms:c},{interpolation:n,fillMode:r,fillValue:s,outputShape:u})}});const jr=(0,u.op)({bandPart_:function(e,t,n){const r=(0,o._1)(e,"a","bandPart");(0,p.assert)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);let u,l;"number"===typeof t?((0,p.assert)(t%1===0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,p.assert)(t<=a,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`)),u=(0,o._1)(t<0?a:t,"numLower","bandPart")):((0,p.assert)("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),u=(0,tr.a)((0,Ue.d)(t,0),a,(0,yt.L)(t,a))),"number"===typeof n?((0,p.assert)(n%1===0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),(0,p.assert)(n<=i,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`)),l=(0,o._1)(n<0?i:n,"numUpper","bandPart")):((0,p.assert)("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),l=(0,tr.a)((0,Ue.d)(n,0),i,(0,yt.L)(n,i)));const c=(0,T.X)(Zt(0,a,1,"int32"),[-1,1]),h=Zt(0,i,1,"int32"),d=(0,Qe.l)(c,h),f=(0,tt.H)((0,Pe.z)(d,u),(0,Oe.b)(d,(0,Xe.W)(l))),m=(0,$n.l)([a,i],r.dtype);return(0,T.X)((0,On.k)((0,Zn.H)((0,T.X)(r,[-1,a,i])).map((e=>(0,tr.a)(f,e,m)))),s)}});const Xr=(0,u.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,p.assert)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,p.assert)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=(0,Cn.V)(e,e.shape[0],0).map((e=>(0,Rn.L)(e,[0])));(0,p.assert)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let s=0;s<e.length;++s)n.push(a.BV.tidy((()=>{let e=r[s];if(s>0)for(let t=0;t<s;++t){const r=(0,A.d)((0,Ze.S)((0,A.d)(n[t],e)),n[t]);e=(0,Qe.l)(e,r)}return(0,ge.h)(e,(0,ir.K)(e,"euclidean"))})));return t?(0,On.k)(n,0):n}});var qr=n(4368);function Kr(e,t=!1){return a.BV.tidy((()=>{(0,p.assert)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=Ee(n),i=(0,K.d)(e);const o=Pn([[1]],[1,1]);let u=(0,K.d)(o);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=i,l=u,c=s;[u,i,s]=a.BV.tidy((()=>{const t=(0,D.t)(i,[e,e],[n-e,1]),a=(0,ir.K)(t),l=(0,D.t)(i,[e,e],[1,1]),c=(0,tr.a)((0,Re.p)(l,0),Pn([[-1]]),Pn([[1]])),h=(0,Qe.l)(l,(0,A.d)(c,a)),p=(0,ge.h)(t,h);u=1===p.shape[0]?(0,K.d)(o):(0,$.z)([o,(0,D.t)(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=(0,Xe.W)((0,ge.h)((0,E.O)(c,h),a)),f=(0,D.t)(i,[e,0],[n-e,r]),m=(0,A.d)(d,u),g=(0,ar.p)(u);if(0===e)i=(0,Qe.l)(f,(0,E.O)(m,(0,E.O)(g,f)));else{const t=(0,Qe.l)(f,(0,E.O)(m,(0,E.O)(g,f)));i=(0,$.z)([(0,D.t)(i,[0,0],[e,r]),t],0)}const y=(0,ar.p)(m),b=(0,D.t)(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=(0,Qe.l)(b,(0,E.O)((0,E.O)(b,u),y));else{const t=(0,Qe.l)(b,(0,E.O)((0,E.O)(b,u),y));s=(0,$.z)([(0,D.t)(s,[0,0],[n,e]),t],1)}return[u,i,s]})),(0,qr.B9)([t,l,c])}return!t&&n>r&&(s=(0,D.t)(s,[0,0],[n,r]),i=(0,D.t)(i,[0,0],[r,r])),[s,i]}))}const Yr=(0,u.op)({qr_:function(e,t=!1){if((0,p.assert)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Kr(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=(0,Zn.H)((0,T.X)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];r.forEach((e=>{const[n,r]=Kr(e,t);s.push(n),a.push(r)}));return[(0,T.X)((0,On.k)(s,0),e.shape),(0,T.X)((0,On.k)(a,0),e.shape)]}}});var Qr=n(9876);const Zr=(0,u.op)({computeWeightedLoss_:function(e,t,n=Qr.I.SUM_BY_NONZERO_WEIGHTS){const r=(0,o._1)(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=(0,o._1)(t,"weights","computeWeightedLoss"));const a=null==s?r:(0,A.d)(r,s);if(n===Qr.I.NONE)return a;if(n===Qr.I.SUM)return(0,Ze.S)(a);if(n===Qr.I.MEAN){if(null==s)return(0,pt.J)(a);{const e=r.size/s.size,t=(0,ge.h)((0,Ze.S)(a),(0,Ze.S)(s));return e>1?(0,ge.h)(t,(0,hn.i)(e)):t}}if(n===Qr.I.SUM_BY_NONZERO_WEIGHTS){if(null==s)return(0,ge.h)((0,Ze.S)(a),(0,hn.i)(r.size));{const e=(0,A.d)(s,(0,dt.i)(r.shape)),t=(0,S.p)((0,Ze.S)((0,Nt.Q)(e,(0,hn.i)(0))),"float32");return(0,ge.h)((0,Ze.S)(a),t)}}throw Error(`Unknown reduction: ${n}`)}});const Jr=(0,u.op)({absoluteDifference_:function(e,t,n,r=Qr.I.SUM_BY_NONZERO_WEIGHTS){const a=(0,o._1)(e,"labels","absoluteDifference"),i=(0,o._1)(t,"predictions","absoluteDifference");let u=null;null!=n&&(u=(0,o._1)(n,"weights","absoluteDifference")),(0,p.assertShapesMatch)(a.shape,i.shape,"Error in absoluteDifference: ");const l=(0,s.W)((0,Qe.l)(a,i));return Zr(l,u,r)}});const es=(0,u.op)({cosineDistance_:function(e,t,n,r,s=Qr.I.SUM_BY_NONZERO_WEIGHTS){const a=(0,o._1)(e,"labels","cosineDistance"),i=(0,o._1)(t,"predictions","cosineDistance");let u=null;null!=r&&(u=(0,o._1)(r,"weights","cosineDistance")),(0,p.assertShapesMatch)(a.shape,i.shape,"Error in cosineDistance: ");const l=(0,hn.i)(1),c=(0,Qe.l)(l,(0,Ze.S)((0,A.d)(a,i),n,!0));return Zr(c,u,s)}});const ts=(0,u.op)({hingeLoss_:function(e,t,n,r=Qr.I.SUM_BY_NONZERO_WEIGHTS){let s=(0,o._1)(e,"labels","hingeLoss");const a=(0,o._1)(t,"predictions","hingeLoss");let i=null;null!=n&&(i=(0,o._1)(n,"weights","hingeLoss")),(0,p.assertShapesMatch)(s.shape,a.shape,"Error in hingeLoss: ");const u=(0,hn.i)(1);s=(0,Qe.l)((0,A.d)((0,hn.i)(2),s),u);const l=(0,tn.U)((0,Qe.l)(u,(0,A.d)(s,a)));return Zr(l,i,r)}});const ns=(0,u.op)({huberLoss_:function(e,t,n,r=1,a=Qr.I.SUM_BY_NONZERO_WEIGHTS){const i=(0,o._1)(e,"labels","huberLoss"),u=(0,o._1)(t,"predictions","huberLoss");let l=null;null!=n&&(l=(0,o._1)(n,"weights","huberLoss")),(0,p.assertShapesMatch)(i.shape,u.shape,"Error in huberLoss: ");const c=(0,hn.i)(r),d=(0,s.W)((0,Qe.l)(u,i)),f=(0,yt.L)(d,c),m=(0,Qe.l)(d,f),g=(0,h.I)((0,A.d)((0,hn.i)(.5),(0,vt.h)(f)),(0,A.d)(c,m));return Zr(g,l,a)}});const rs=(0,u.op)({logLoss_:function(e,t,n,r=1e-7,s=Qr.I.SUM_BY_NONZERO_WEIGHTS){const a=(0,o._1)(e,"labels","logLoss"),i=(0,o._1)(t,"predictions","logLoss");let u=null;null!=n&&(u=(0,o._1)(n,"weights","logLoss")),(0,p.assertShapesMatch)(a.shape,i.shape,"Error in logLoss: ");const l=(0,hn.i)(1),c=(0,hn.i)(r),d=(0,Xe.W)((0,A.d)(a,(0,Ge.c)((0,h.I)(i,c)))),f=(0,A.d)((0,Qe.l)(l,a),(0,Ge.c)((0,h.I)((0,Qe.l)(l,i),c))),m=(0,Qe.l)(d,f);return Zr(m,u,s)}});const ss=(0,u.op)({meanSquaredError_:function(e,t,n,r=Qr.I.SUM_BY_NONZERO_WEIGHTS){const s=(0,o._1)(e,"labels","meanSquaredError"),a=(0,o._1)(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=(0,o._1)(n,"weights","meanSquaredError")),(0,p.assertShapesMatch)(s.shape,a.shape,"Error in meanSquaredError: ");const u=(0,Dn.$)(s,a);return Zr(u,i,r)}});const as=(0,u.op)({sigmoidCrossEntropy_:function(e,t,n,r=0,a=Qr.I.SUM_BY_NONZERO_WEIGHTS){let i=(0,o._1)(e,"multiClassLabels","sigmoidCrossEntropy");const u=(0,o._1)(t,"logits","sigmoidCrossEntropy");let l=null;if(null!=n&&(l=(0,o._1)(n,"weights","sigmoidCrossEntropy")),(0,p.assertShapesMatch)(i.shape,u.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=(0,hn.i)(r),t=(0,hn.i)(1),n=(0,hn.i)(.5);i=(0,h.I)((0,A.d)(i,(0,Qe.l)(t,e)),(0,A.d)(n,e))}const c=function(e,t){const n=(0,o._1)(e,"labels","sigmoidCrossEntropyWithLogits"),r=(0,o._1)(t,"logits","sigmoidCrossEntropyWithLogits");(0,p.assertShapesMatch)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=(0,tn.U)(r),i=(0,A.d)(r,n),u=He((0,Ne.Q)((0,Xe.W)((0,s.W)(r))));return(0,h.I)((0,Qe.l)(a,i),u)}(i,u);return Zr(c,l,a)}});const is=(0,u.op)({softmaxCrossEntropy_:function(e,t,n,r=0,s=Qr.I.SUM_BY_NONZERO_WEIGHTS){let a=(0,o._1)(e,"onehotLabels","softmaxCrossEntropy");const i=(0,o._1)(t,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=(0,o._1)(n,"weights","softmaxCrossEntropy")),(0,p.assertShapesMatch)(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=(0,hn.i)(r),t=(0,hn.i)(1),n=(0,hn.i)(a.shape[1]);a=(0,h.I)((0,A.d)(a,(0,Qe.l)(t,e)),(0,ge.h)(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=(0,je.cb)(((e,t,r)=>{const s=(0,et.l)(t,[n],!0),a=(0,Qe.l)((0,S.p)(t,"float32"),s);r([e,a]);const i=(0,Xe.W)((0,A.d)(a,e));return{value:(0,Ze.S)(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=(0,wt.rv)(e.shape,[n]);return[(0,A.d)((0,T.X)(e,a),(0,Qe.l)((0,S.p)(r,"float32"),(0,Ne.Q)(s))),(0,A.d)((0,T.X)(e,a),(0,Qe.l)((0,Ne.Q)(s),(0,S.p)(r,"float32")))]}}}));return r(e,t)}(a,i);return Zr(l,u,s)}});const os={fft:Sn,ifft:Nn,rfft:An,irfft:Tn},us={hammingWindow:Nr,hannWindow:Tr,frame:Cr,stft:$r},ls={flipLeftRight:Ar,grayscaleToRGB:_r,resizeNearestNeighbor:Wr.j,resizeBilinear:Vr.I,rgbToGrayscale:Dr,rotateWithOffset:Rr,cropAndResize:Er,nonMaxSuppression:Fr,nonMaxSuppressionAsync:Br,nonMaxSuppressionWithScore:Lr,nonMaxSuppressionWithScoreAsync:zr,nonMaxSuppressionPadded:Ur,nonMaxSuppressionPaddedAsync:Pr,threshold:Gr,transform:Hr},cs={bandPart:jr,gramSchmidt:Xr,qr:Yr},hs={absoluteDifference:Jr,computeWeightedLoss:Zr,cosineDistance:es,hingeLoss:ts,huberLoss:ns,logLoss:rs,meanSquaredError:ss,sigmoidCrossEntropy:as,softmaxCrossEntropy:is},ps={sparseFillEmptyRows:(0,u.op)({sparseFillEmptyRows_:function(e,t,n,r){const s=(0,o._1)(e,"indices","sparseFillEmptyRows","int32"),u=(0,o._1)(t,"values","sparseFillEmptyRows"),l=(0,o._1)(n,"denseShape","sparseFillEmptyRows","int32"),c=(0,o._1)(r,"defaultValue","sparseFillEmptyRows",u.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==u.rank)throw new Error(`Values should be Tensor1D but received shape ${u.shape}`);if(1!==l.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${l.shape}`);if(0!==c.rank)throw new Error(`Default value should be a scalar but received shape ${c.shape}`);const h=a.BV.runKernel(i.O3z,{indices:s,values:u,denseShape:l,defaultValue:c});return{outputIndices:h[0],outputValues:h[1],emptyRowIndicator:h[2],reverseIndexMap:h[3]}}}),sparseReshape:(0,u.op)({sparseReshape_:function(e,t,n){const r=(0,o._1)(e,"inputIndices","sparseReshape","int32"),s=(0,o._1)(t,"inputShape","sparseReshape","int32"),u=(0,o._1)(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==u.rank)throw new Error(`New shape should be Tensor1D but received shape ${u.shape}`);const l=a.BV.runKernel(i.nhH,{inputIndices:r,inputShape:s,newShape:u});return{outputIndices:l[0],outputShape:l[1]}}}),sparseSegmentMean:(0,u.op)({sparseSegmentMean_:function(e,t,n){const r=(0,o._1)(e,"data","sparseSegmentMean"),s=(0,o._1)(t,"indices","sparseSegmentMean","int32"),u=(0,o._1)(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==u.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${u.shape}`);return a.BV.runKernel(i.w3H,{data:r,indices:s,segmentIds:u})}}),sparseSegmentSum:(0,u.op)({sparseSegmentSum_:function(e,t,n){const r=(0,o._1)(e,"data","sparseSegmentSum"),s=(0,o._1)(t,"indices","sparseSegmentSum","int32"),u=(0,o._1)(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==u.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${u.shape}`);return a.BV.runKernel(i.ZjV,{data:r,indices:s,segmentIds:u})}})},ds={stringNGrams:(0,u.op)({stringNGrams_:function(e,t,n,r,s,u,l,c){const h=(0,o._1)(e,"data","stringNGrams","string");if("string"!==h.dtype)throw new Error("Data must be of datatype string");if(1!==h.shape.length)throw new Error(`Data must be a vector, saw: ${h.shape}`);const p=(0,o._1)(t,"dataSplits","stringNGrams");if("int32"!==p.dtype)throw new Error("Data splits must be of datatype int32");const d=a.BV.runKernel(i._JP,{data:h,dataSplits:p},{separator:n,nGramWidths:r,leftPad:s,rightPad:u,padWidth:l,preserveShortSequences:c});return{nGrams:d[0],nGramsSplits:d[1]}}}),stringSplit:(0,u.op)({stringSplit_:function(e,t,n=!0){const r=(0,o._1)(e,"input","stringSplit","string"),s=(0,o._1)(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const u=a.BV.runKernel(i.s1s,{input:r,delimiter:s},{skipEmpty:n});return{indices:u[0],values:u[1],shape:u[2]}}}),stringToHashBucketFast:(0,u.op)({stringToHashBucketFast_:function(e,t){const n=(0,o._1)(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");return a.BV.runKernel(i.XkS,{input:n},r)}}),staticRegexReplace:(0,u.op)({staticRegexReplace_:function(e,t,n,r=!0){const s=(0,o._1)(e,"input","staticRegexReplace","string");return a.BV.runKernel(i.e0R,{x:s},{pattern:t,rewrite:n,replaceGlobal:r})}})}},9682:function(e,t,n){n.d(t,{v:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({pad_:function(e,t,n=0){const i=(0,a._1)(e,"x","pad");if(0===i.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");return r.BV.runKernel(s.lyA,{x:i},{paddings:t,constantValue:n})}})},5860:function(e,t,n){n.d(t,{d:function(){return p}});var r=n(3740),s=n(9122),a=n(5176),i=n(8441),o=n(2582),u=n(1174),l=n(2668),c=n(4968),h=n(7918);const p=(0,l.op)({pool_:function(e,t,n,l,p,d,f){null==p&&(p=[1,1]),null==d&&(d=1),0===l&&(l="valid");const m=(0,r._1)(e,"x","maxPool");let g=m,y=!1;3===m.rank&&(y=!0,g=(0,c.X)(m,[1,m.shape[0],m.shape[1],m.shape[2]])),s.assert(o.jT(d,p),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${d} and dilations '${p}'`));const b=o.Xw(g.shape,t,d,p,l),x=[b.dilationHeight,b.dilationWidth];let w;w="same"===l?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),r=n.map((e=>e-1)),s=r.map((e=>Math.floor(e/2))),a=r.map(((e,t)=>e-s[t]));return r.map(((e,t)=>[s[t],a[t]]))}([b.filterHeight,b.filterWidth],x):[[0,0],[0,0]];const v=1===x[0]&&1===x[1],[k,I]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=s.map(((e,t)=>e+i[t])),u=t.map(((e,t)=>[r[t],o[t]])),l=t.map(((e,t)=>[0,i[t]]));return[u,l]}([b.inHeight,b.inWidth],x,w),S=v?l:"valid",N=v?g:(0,h.f)(g,x,k),T=("avg"===n?()=>(0,a.w)(N,t,d,S,f):()=>(0,u._)(N,t,d,S,f))(),C=v?T:(0,i.E)(T,x,I);return y?(0,c.X)(C,[C.shape[1],C.shape[2],C.shape[3]]):C}})},3453:function(e,t,n){n.d(t,{s:function(){return o}});var r=n(7097),s=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({pow_:function(e,t){let n=(0,i._1)(e,"base","pow"),o=(0,i._1)(t,"exp","pow");return[n,o]=(0,a.makeTypesMatch)(n,o),r.BV.runKernel(s.pe_,{a:n,b:o})}})},8151:function(e,t,n){n.d(t,{A:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({prelu_:function(e,t){const n=(0,a._1)(e,"x","prelu"),i=(0,a._1)(t,"alpha","prelu");return r.BV.runKernel(s.o0g,{x:n,alpha:i})}})},9798:function(e,t,n){function r(e,t=!1){console.log(e.toString(t))}n.d(t,{S:function(){return r}})},9451:function(e,t,n){n.d(t,{W:function(){return o}});var r=n(7097),s=n(9121),a=n(3740),i=n(2271);const o=(0,n(2668).op)({prod_:function(e,t=null,n=!1){let o=(0,a._1)(e,"x","prod");return"bool"===o.dtype&&(o=(0,i.p)(o,"int32")),r.BV.runKernel(s.DlI,{x:o},{axis:t,keepDims:n})}})},766:function(e,t,n){n.d(t,{k:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({real_:function(e){const t=(0,a._1)(e,"input","real");return r.BV.runKernel(s.xJR,{input:t})}})},7409:function(e,t,n){n.d(t,{U:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({relu_:function(e){const t=(0,a._1)(e,"x","relu");return r.BV.runKernel(s.qkr,{x:t})}})},3582:function(e,t,n){n.d(t,{b:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({relu6_:function(e){const t=(0,a._1)(e,"x","relu6");return r.BV.runKernel(s.SbG,{x:t})}})},4968:function(e,t,n){n.d(t,{X:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({reshape_:function(e,t){const n=(0,a._1)(e,"x","reshape","string_or_numeric");return r.BV.runKernel(s.HZH,{x:n},{shape:t})}})},7486:function(e,t,n){n.d(t,{G:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({reverse_:function(e,t){const n=(0,a._1)(e,"x","reverse");return r.BV.runKernel(s.mKl,{x:n},{dims:t})}})},2634:function(e,t,n){n.d(t,{b:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({rsqrt_:function(e){const t=(0,a._1)(e,"x","rsqrt","float32");return r.BV.runKernel(s.bV0,{x:t})}})},9494:function(e,t,n){n.d(t,{i:function(){return a}});var r=n(9122),s=n(7852);function a(e,t){if(((0,r.isTypedArray)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,r.isTypedArray)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,s.H)(e,[],[],t)}},3028:function(e,t,n){n.d(t,{SU:function(){return i},b0:function(){return a},l5:function(){return s}});var r=n(9122);function s(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let i=0;i<s;++i)if(n.shape[i]!==t.shape[i])throw new Error(a+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-s;++i)if(n.shape[i+s]!==e[i+r])throw new Error(a+` updates.shape[${i+s}] (${n.shape[i+s]}) != shape[${i+s}] (${e[i+s]})`)}function a(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}s(n,t,e)}function i(e,t,n){const s=t.shape.length,a=s>1?t.shape[s-1]:1,i=n.length;let o=1;for(let r=a;r<i;++r)o*=n[r];const u=a<1?1:a;return{sliceRank:a,numUpdates:(0,r.sizeFromShape)(t.shape)/u,sliceSize:o,strides:[...(0,r.computeStrides)(n.slice(0,a)),1],outputSize:(0,r.sizeFromShape)(n)}}},5503:function(e,t,n){n.d(t,{U:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({selu_:function(e){const t=(0,a._1)(e,"x","selu");return r.BV.runKernel(s.oFR,{x:t})}})},3179:function(e,t,n){n.d(t,{$:function(){return s},y:function(){return r}});const r=1.7580993408473768,s=1.0507009873554805},8678:function(e,t,n){n.d(t,{U:function(){return l}});var r=n(3740),s=n(9122),a=n(4794),i=n(4718),o=n(2668),u=n(4968);const l=(0,o.op)({separableConv2d_:function(e,t,n,o,l,c=[1,1],h="NHWC"){const p=(0,r._1)(e,"x","separableConv2d"),d=(0,r._1)(t,"depthwiseFilter","separableConv2d"),f=(0,r._1)(n,"pointwiseFilter","separableConv2d");let m=p,g=!1;if(3===p.rank&&(g=!0,m=(0,u.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),"NCHW"===h)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");s.assert(4===m.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`)),s.assert(4===d.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${d.rank}.`)),s.assert(4===f.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${d.rank}.`)),s.assert(1===f.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`)),s.assert(1===f.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`));const y=d.shape[2],b=d.shape[3];s.assert(f.shape[2]===y*b,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${y*b}, but got ${f.shape[2]}.`));const x=(0,i.B)(m,d,o,l,h,c),w=(0,a.T)(x,f,1,"valid",h);return g?(0,u.X)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},625:function(e,t,n){n.d(t,{X:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({sigmoid_:function(e){const t=(0,a._1)(e,"x","sigmoid","float32");return r.BV.runKernel(s.a5O,{x:t})}})},9331:function(e,t,n){n.d(t,{O:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({sin_:function(e){const t=(0,a._1)(e,"x","sin","float32");return r.BV.runKernel(s.RQH,{x:t})}})},3254:function(e,t,n){n.d(t,{R:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({sinh_:function(e){const t=(0,a._1)(e,"x","sinh");return r.BV.runKernel(s.wYB,{x:t})}})},2676:function(e,t,n){n.d(t,{t:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({slice_:function(e,t,n){const i=(0,a._1)(e,"x","slice","string_or_numeric");if(0===i.rank)throw new Error("Slicing scalar is not possible");return r.BV.runKernel(s.p2w,{x:i},{begin:t,size:n})}})},7650:function(e,t,n){n.r(t),n.d(t,{assertParamsValid:function(){return i},computeFlatOffset:function(){return x},computeOutShape:function(){return u},getNormalizedAxes:function(){return p},isSliceContinous:function(){return b},maskToAxes:function(){return o},parseSliceParams:function(){return w},sliceInfo:function(){return v},startForAxis:function(){return g},startIndicesWithElidedDims:function(){return d},stopForAxis:function(){return y},stopIndicesWithElidedDims:function(){return f},stridesForAxis:function(){return m},stridesWithElidedDims:function(){return l}});var r=n(9122);const s=-2,a=-1;function i(e,t,n){const s=e.shape.length;r.assert(s===t.length,(()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`)),r.assert(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let a=0;a<s;++a)r.assert(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${s}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function o(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function u(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function l(e,t,n,r){const s=[...e];for(let a=s.length;a<r.length;a++)s.push(1);for(let a=0;a<n;a++)0===a?s[t]=1:(s.splice(t,0,1),s.pop());return s}function c(e,t,n){return n<=e?n:n-(t-1)}function h(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function p(e,t,n,r,s,a,i,o,u){const c=e.length;let h=new Array(c),p=new Array(c),b=new Array(c);if(t.length&&n>0){const u=t[0],c=n+1;h=d(i,u,c,r,e),p=f(o,u,c,s,e),b=l(a,u,c,e)}else for(let l=0;l<c;l++)h[l]=g(i,r,a,e,l,u),p[l]=y(o,s,a,e,l,u),b[l]=m(a,l,u);return{begin:h,end:p,strides:b}}function d(e,t,n,r,s){const a=[...s],i=h(n,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=0;else{const s=c(t,n,o);let i=r[s];e&1<<s&&(i=0),a[o]=i}return a}function f(e,t,n,s,a){const i=[...a],o=h(n,t);for(let r=0;r<i.length;r++)if(o.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{const a=c(t,n,r);let o=s[a];e&1<<a&&(o=Number.MAX_SAFE_INTEGER),i[r]=o}for(let u=0;u<i.length;u++){i[u]<0&&(i[u]+=a[u]),i[u]=r.clamp(0,i[u],a[u])}return i}function m(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function g(e,t,n,s,a,i){let o=t[a];(e&1<<a||i&1<<a||null==o)&&(o=(n[a]||1)>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=s[a];return o<0&&(o+=u),o=r.clamp(0,o,u-1),o}function y(e,t,n,s,a,i){let o=t[a];const u=n[a]||1;(e&1<<a||i&1<<a||null==o)&&(o=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[a];return o<0&&(o+=l),o=u>0?r.clamp(0,o,l):r.clamp(-1,o,l-1),o}function b(e,t,n){let r=n.length;for(let s=0;s<n.length;s++)if(n[s]>1){r=s;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function x(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function w(e,t,n){let s;const a=e.shape.length;let i;return s="number"===typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),s.forEach((e=>{r.assert(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(a).fill(-1):"number"===typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(r.assert(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-s[n]))),[s,i]}function v(e,t,n,r,i,o,u,l,c){let h;if(null==r?(h=new Array(t.length),h.fill(1)):h=r,null!=u&&0!==(u&u-1))throw new Error("Multiple ellipses in slice is not allowed.");let p=!1;const d={dims:h.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:h.slice(),beginMask:i,endMask:o,ellipsisMask:u,newAxisMask:l,shrinkAxisMask:c};for(let s=0;s<d.dims;s++)p&&0!==(1<<s&l)&&d.numAddAxisAfterEllipsis++,1<<s&u&&(p=!0);p||(d.ellipsisMask|=1<<d.dims,d.dims++);const f={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};(function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(s),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(a),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}})(d,f);let m=!0,g=!0,y=!0;const b=[],x=[];for(let s=0;s<e.length;++s){if(0===f.strides[s])throw Error(`strides[${s}] must be non-zero`);const t=!!(f.shrinkAxisMask&1<<s),n=e[s];if(-1===n){b.push(t?1:-1);continue}const r=[f.beginMask&1<<s,f.endMask&1<<s],a=[f.strides[s]>0?0:-1,f.strides[s]>0?n:n-1];if(t&&f.strides[s]<=0)throw Error("only stride 1 allowed on non-range indexing.");y=y&&1===f.strides[s];const i=!!(f.beginMask&1<<s&&f.endMask&1<<s);if(f.beginValid&&f.endValid){if(t){const e=f.begin[s]<0?n+f.begin[s]:f.begin[s];if(f.begin[s]=e,f.end[s]=f.begin[s]+1,e<0||e>=n)throw Error(`slice index ${f.begin[s]} of dimension ${s} out of bounds.`)}else f.begin[s]=k(f.begin[s],0,f.strides[s],n,r,a),f.end[s]=k(f.end[s],1,f.strides[s],n,r,a);const e=1===f.strides[s]&&0===f.begin[s]&&f.end[s]===n;m=m&&e,g=g&&(0===s&&1===f.strides[s]||e)}else m=m&&1===f.strides[s]&&i,g=g&&(0===s&&1===f.strides[s]||i);let o,u=!1;if(f.beginValid&&f.endValid?(o=f.end[s]-f.begin[s],u=!0):t?(o=1,u=!0):i&&n>=0&&(o=f.strides[s]<0?-n:n,u=!0),u){let e;e=0===o||o<0!==f.strides[s]<0?0:Math.trunc(o/f.strides[s])+(o%f.strides[s]!==0?1:0),b.push(e)}else b.push(-1)}for(let a=0;a<f.finalShapeGatherIndices.length;++a){const e=f.finalShapeGatherIndices[a];e>=0?x.push(b[e]):e===s&&x.push(1)}return{finalShapeSparse:x.filter(((e,t)=>f.finalShapeGatherIndices[t]!==s)),finalShape:x,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:f.begin,end:f.end,strides:f.strides}}function k(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}},7918:function(e,t,n){n.d(t,{f:function(){return o}});var r=n(7097),s=n(9121),a=n(3740),i=n(9122);const o=(0,n(2668).op)({spaceToBatchND_:function(e,t,n){const o=(0,a._1)(e,"x","spaceToBatchND");return i.assert(o.rank>=1+t.length,(()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`)),i.assert(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),i.assert(o.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]===0:e),!0),(()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`)),r.BV.runKernel(s.TQc,{x:o},{blockShape:t,paddings:n})}})},8644:function(e,t,n){n.d(t,{V:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({split_:function(e,t,n=0){const i=(0,a._1)(e,"x","split");return r.BV.runKernel(s.L8s,{x:i},{numOrSizeSplits:t,axis:n})}})},3261:function(e,t,n){n.d(t,{_:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({sqrt_:function(e){const t=(0,a._1)(e,"x","sqrt","float32");return r.BV.runKernel(s.FKq,{x:t})}})},248:function(e,t,n){n.d(t,{h:function(){return a}});var r=n(7097),s=n(3740);const a=(0,n(2668).op)({square_:function(e){const t=(0,s._1)(e,"x","square");return r.BV.runKernel("Square",{x:t},{})}})},5265:function(e,t,n){n.d(t,{$:function(){return u}});var r=n(7097),s=n(9121),a=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({squaredDifference_:function(e,t){let n=(0,i._1)(e,"a","squaredDifference"),u=(0,i._1)(t,"b","squaredDifference");return[n,u]=(0,a.makeTypesMatch)(n,u),(0,o.assertAndGetBroadcastShape)(n.shape,u.shape),r.BV.runKernel(s._tC,{a:n,b:u},{})}})},9590:function(e,t,n){n.d(t,{L:function(){return o}});var r=n(3740),s=n(9122),a=n(2668),i=n(4968);const o=(0,a.op)({squeeze_:function(e,t){const n=(0,r._1)(e,"x","squeeze","string_or_numeric");return(0,i.X)(n,(0,s.squeezeShape)(n.shape,t).newShape)}})},2991:function(e,t,n){n.d(t,{k:function(){return o}});var r=n(7097),s=n(9121),a=n(3740),i=n(9122);const o=(0,n(2668).op)({stack_:function(e,t=0){const n=(0,a.sI)(e,"tensors","stack","string_or_numeric");return i.assert(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&i.assert(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor")),r.BV.runKernel(s.QiL,n,{axis:t})}})},1901:function(e,t,n){n.d(t,{N:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({step_:function(e,t=0){const n=(0,a._1)(e,"x","step");return r.BV.runKernel(s.h8e,{x:n},{alpha:t})}})},827:function(e,t,n){n.d(t,{l:function(){return o}});var r=n(7097),s=n(9121),a=n(747),i=n(3740);const o=(0,n(2668).op)({sub_:function(e,t){let n=(0,i._1)(e,"a","sub"),o=(0,i._1)(t,"b","sub");return[n,o]=(0,a.makeTypesMatch)(n,o),r.BV.runKernel(s.Tr8,{a:n,b:o})}})},5475:function(e,t,n){n.d(t,{S:function(){return o}});var r=n(7097),s=n(9121),a=n(3740),i=n(2271);const o=(0,n(2668).op)({sum_:function(e,t=null,n=!1){let o=(0,a._1)(e,"x","sum");return"bool"===o.dtype&&(o=(0,i.p)(o,"int32")),r.BV.runKernel(s.GBy,{x:o},{axis:t,keepDims:n})}})},701:function(e,t,n){n.d(t,{X:function(){return a}});var r=n(3740),s=n(7852);function a(e,t,n){const a=(0,r.C)(e,n);return(0,s.H)(e,t,a,n)}},9906:function(e,t,n){n.d(t,{w:function(){return i}});var r=n(3740),s=n(9122),a=n(7852);function i(e,t,n){if((0,s.assertNonNull)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const i=(0,r.C)(e,n);if(3!==i.length&&1!==i.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===i.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,a.H)(e,t,i,n)}},7852:function(e,t,n){n.d(t,{H:function(){return i}});var r=n(7097),s=n(1221),a=n(9122);function i(e,t,n,i){if(null==i)i=(0,a.inferDtype)(e);else if("complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,s.$F)(e)||(0,s.Oq)(e)){if("float32"!==i&&"int32"!==i)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${i}.`);return r.BV.backend.createTensorFromGPUData(e,t||n,i)}if(!(0,a.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,a.assertNonNegativeIntegerDimensions)(t);const e=(0,a.sizeFromShape)(t),r=(0,a.sizeFromShape)(n);(0,a.assert)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let s=0;s<n.length;++s){const e=s!==n.length-1||n[s]!==(0,a.sizeFromShape)(t.slice(s));(0,a.assert)(n[s]===t[s]||!e,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,a.isTypedArray)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==i?(0,a.toTypedArray)(e,i):(0,a.flatten)(e,[],!0),r.BV.makeTensor(e,t,i)}},7501:function(e,t,n){n.d(t,{G:function(){return o}});var r=n(7097),s=n(9121),a=n(3740),i=n(9122);const o=(0,n(2668).op)({tile_:function(e,t){const n=(0,a._1)(e,"x","tile","string_or_numeric");return i.assert(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`)),r.BV.runKernel(s.n9L,{x:n},{reps:t})}})},3243:function(e,t,n){n.d(t,{h:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({topk_:function(e,t=1,n=!0){const i=(0,a._1)(e,"x","topk");if(0===i.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=i.shape[i.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);const u={x:i},l={k:t,sorted:n},[c,h]=r.BV.runKernel(s.cWu,u,l);return{values:c,indices:h}}})},9065:function(e,t,n){n.d(t,{p:function(){return d}});var r=n(7097),s=n(4368),a=n(9121),i=n(3740),o=n(9122),u=n(1661),l=n(4386),c=n(7370),h=n(2668),p=n(766);const d=(0,h.op)({transpose_:function(e,t,n){const h=(0,i._1)(e,"x","transpose");if(null==t&&(t=h.shape.map(((e,t)=>t)).reverse()),o.assert(h.rank===t.length,(()=>`Error in transpose: rank of input ${h.rank} must match length of perm ${t}.`)),t.forEach((e=>{o.assert(e>=0&&e<h.rank,(()=>"All entries in 'perm' must be between 0 and "+(h.rank-1)+` but got ${t}`))})),h.rank<=1)return h.clone();const d={x:h},f={perm:t};return"complex64"===h.dtype?(0,s.lu)((()=>{let e=(0,p.k)(h),t=(0,l.a)(h);return e=r.BV.runKernel(a.G3Y,{x:e},f),t=r.BV.runKernel(a.G3Y,{x:t},f),n&&(t=(0,c.W)(t)),(0,u.P)(e,t)})):r.BV.runKernel(a.G3Y,d,f)}})},9608:function(e,t,n){n.d(t,{T:function(){return o}});var r=n(7097),s=n(9121),a=n(3740),i=n(9122);const o=(0,n(2668).op)({unique_:function(e,t=0){const n=(0,a._1)(e,"x","unique","string_or_numeric");(0,i.assert)(n.rank>0,(()=>"The input tensor must be at least 1D"));const o={x:n},u={axis:t},[l,c]=r.BV.runKernel(s.kpP,o,u);return{values:l,indices:c}}})},8749:function(e,t,n){n.d(t,{p:function(){return o}});var r=n(7097),s=n(9121),a=n(3740),i=n(9122);const o=(0,n(2668).op)({unsortedSegmentSum_:function(e,t,n){const o=(0,a._1)(e,"x","unsortedSegmentSum"),u=(0,a._1)(t,"segmentIds","unsortedSegmentSum","int32");return(0,i.assert)((0,i.isInt)(n),(()=>"numSegments must be of dtype int")),r.BV.runKernel(s.Qvg,{x:o,segmentIds:u},{numSegments:n})}})},4136:function(e,t,n){n.d(t,{H:function(){return o}});var r=n(7097),s=n(9121),a=n(3740),i=n(9122);const o=(0,n(2668).op)({unstack_:function(e,t=0){const n=(0,a._1)(e,"x","unstack","string_or_numeric");return i.assert(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`)),r.BV.runKernel(s.ToN,{value:n},{axis:t})}})},5912:function(e,t,n){n.d(t,{a:function(){return u}});var r=n(7097),s=n(9121),a=n(3740),i=n(8247),o=n(2200);const u=(0,n(2668).op)({where_:function(e,t,n){const u=(0,a._1)(t,"a","where"),l=(0,a._1)(n,"b","where"),c=(0,a._1)(e,"condition","where","bool"),h=(0,o.assertAndGetBroadcastShape)((0,o.assertAndGetBroadcastShape)(c.shape,u.shape),l.shape),p=(0,i.U)(c,h),d=(0,i.U)(u,h),f=(0,i.U)(l,h);return r.BV.runKernel(s.PhF,{condition:p,t:d,e:f})}})},723:function(e,t,n){n.d(t,{l:function(){return i}});var r=n(7097),s=n(9122),a=n(1661);function i(e,t="float32"){if((0,s.assertNonNegativeIntegerDimensions)(e),"complex64"===t){const t=i(e,"float32"),n=i(e,"float32");return(0,a.P)(t,n)}const n=(0,s.makeZerosTypedArray)((0,s.sizeFromShape)(e),t);return r.BV.makeTensor(n,e,t)}},6577:function(e,t,n){n.d(t,{P:function(){return i}});var r=n(7097),s=n(9121),a=n(3740);const i=(0,n(2668).op)({zerosLike_:function(e){const t=(0,a._1)(e,"x","zerosLike");return r.BV.runKernel(s.RuY,{x:t})}})},2134:function(e,t,n){n.d(t,{z:function(){return p}});var r=n(7097),s=n(4368),a=n(6407),i=n(1274),o=n(4841),u=n(985),l=n(248),c=n(6577),h=n(1015);class p extends h.g{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=r.BV.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const h=r.BV.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:(0,s.lu)((()=>(0,c.P)(h).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:(0,s.lu)((()=>(0,c.P)(h).variable(false)))});const p=Array.isArray(e)?e[n].tensor:e[t];if(null==p)return;const d=this.accumulatedGrads[n].variable,f=this.accumulatedUpdates[n].variable;(0,s.lu)((()=>{const e=(0,a.I)((0,o.d)(d,this.rho),(0,o.d)((0,l.h)(p),1-this.rho)),t=(0,o.d)((0,i.h)((0,u._b3)((0,a.I)(f,this.epsilon)),(0,u._b3)((0,a.I)(d,this.epsilon))),p),n=(0,a.I)((0,o.d)(f,this.rho),(0,o.d)((0,l.h)(t),1-this.rho));d.assign(e),f.assign(n);const r=(0,a.I)((0,o.d)(t,-this.learningRate),h);h.assign(r)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,s.B9)(this.accumulatedGrads.map((e=>e.variable))),(0,s.B9)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}},2515:function(e,t,n){n.d(t,{H:function(){return p}});var r=n(7097),s=n(4368),a=n(6407),i=n(1274),o=n(4006),u=n(4841),l=n(3261),c=n(248),h=n(1015);class p extends h.g{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const h=r.BV.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:(0,s.lu)((()=>(0,o.h)(h.shape,this.initialAccumulatorValue).variable(e)))}}const p=Array.isArray(e)?e[n].tensor:e[t];if(null==p)return;const d=this.accumulatedGrads[n].variable;(0,s.lu)((()=>{const e=(0,a.I)(d,(0,c.h)(p));d.assign(e);const t=(0,a.I)((0,u.d)((0,i.h)(p,(0,l._)((0,a.I)(e,r.BV.backend.epsilon()))),-this.learningRate),h);h.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,s.B9)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}},7463:function(e,t,n){n.d(t,{a:function(){return m}});var r=n(7097),s=n(4368),a=n(6407),i=n(1274),o=n(4841),u=n(3453),l=n(9494),c=n(3261),h=n(248),p=n(827),d=n(6577),f=n(1015);class m extends f.g{static get className(){return"Adam"}constructor(e,t,n,a=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,s.lu)((()=>{this.accBeta1=(0,l.i)(t).variable(),this.accBeta2=(0,l.i)(n).variable()})),null==a&&(this.epsilon=r.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,s.lu)((()=>{const n=(0,p.l)(1,this.accBeta1),u=(0,p.l)(1,this.accBeta2);t.forEach(((t,l)=>{const p=r.BV.registeredVariables[t];null==this.accumulatedFirstMoment[l]&&(this.accumulatedFirstMoment[l]={originalName:`${t}/m`,variable:(0,s.lu)((()=>(0,d.P)(p).variable(false)))}),null==this.accumulatedSecondMoment[l]&&(this.accumulatedSecondMoment[l]={originalName:`${t}/v`,variable:(0,s.lu)((()=>(0,d.P)(p).variable(false)))});const f=Array.isArray(e)?e[l].tensor:e[t];if(null==f)return;const m=this.accumulatedFirstMoment[l].variable,g=this.accumulatedSecondMoment[l].variable,y=(0,a.I)((0,o.d)(m,this.beta1),(0,o.d)(f,1-this.beta1)),b=(0,a.I)((0,o.d)(g,this.beta2),(0,o.d)((0,h.h)(f),1-this.beta2)),x=(0,i.h)(y,n),w=(0,i.h)(b,u);m.assign(y),g.assign(b);const v=(0,a.I)((0,o.d)((0,i.h)(x,(0,a.I)((0,c._)(w),this.epsilon)),-this.learningRate),p);p.assign(v)})),this.accBeta1.assign((0,o.d)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,o.d)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,s.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,s.B9)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,s.lu)((()=>{this.accBeta1.assign((0,u.s)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,u.s)(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}},3888:function(e,t,n){n.d(t,{D:function(){return f}});var r=n(7097),s=n(4368),a=n(6235),i=n(6407),o=n(1274),u=n(632),l=n(4841),c=n(9494),h=n(827),p=n(6577),d=n(1015);class f extends d.g{static get className(){return"Adamax"}constructor(e,t,n,a=null,i=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=i,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,s.lu)((()=>{this.iteration=(0,c.i)(0).variable(),this.accBeta1=(0,c.i)(t).variable()})),null==a&&(this.epsilon=r.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,s.lu)((()=>{const n=(0,h.l)(1,this.accBeta1),s=(0,o.h)(-this.learningRate,(0,i.I)((0,l.d)(this.iteration,this.decay),1));t.forEach(((t,c)=>{const h=r.BV.registeredVariables[t];null==this.accumulatedFirstMoment[c]&&(this.accumulatedFirstMoment[c]={originalName:`${t}/m`,variable:(0,p.P)(h).variable(false)}),null==this.accumulatedWeightedInfNorm[c]&&(this.accumulatedWeightedInfNorm[c]={originalName:`${t}/v`,variable:(0,p.P)(h).variable(false)});const d=Array.isArray(e)?e[c].tensor:e[t];if(null==d)return;const f=this.accumulatedFirstMoment[c].variable,m=this.accumulatedWeightedInfNorm[c].variable,g=(0,i.I)((0,l.d)(f,this.beta1),(0,l.d)(d,1-this.beta1)),y=(0,l.d)(m,this.beta2),b=(0,a.W)(d),x=(0,u.g)(y,b);f.assign(g),m.assign(x);const w=(0,i.I)((0,l.d)((0,o.h)(s,n),(0,o.h)(g,(0,i.I)(x,this.epsilon))),h);h.assign(w)})),this.iteration.assign((0,i.I)(this.iteration,1)),this.accBeta1.assign((0,l.d)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,s.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,s.B9)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}},9406:function(e,t,n){n.d(t,{r:function(){return c}});var r=n(7097),s=n(4368),a=n(6407),i=n(4841),o=n(9494),u=n(6577),l=n(5726);class c extends l.D{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,o.i)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const o=r.BV.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:(0,s.lu)((()=>(0,u.P)(o).variable(e)))}}const l=this.accumulations[n].variable,c=Array.isArray(e)?e[n].tensor:e[t];null!=c&&(0,s.lu)((()=>{let e;const t=(0,a.I)((0,i.d)(this.m,l),c);e=(0,a.I)((0,i.d)(this.c,this.useNesterov?(0,a.I)(c,(0,i.d)(t,this.m)):t),o),l.assign(t),o.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,s.B9)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}},1015:function(e,t,n){n.d(t,{g:function(){return o}});var r=n(4368),s=n(633),a=n(985),i=n(3393);class o extends i.Serializable{minimize(e,t=!1,n){const{value:s,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return(0,r.B9)(a),t?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,s.pn)(e,t)}dispose(){null!=this.iterations_&&(0,r.B9)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,a.iD$)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(o,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients})},4803:function(e,t,n){n.d(t,{g:function(){return d}});var r=n(7097),s=n(4368),a=n(6407),i=n(1274),o=n(4841),u=n(3261),l=n(248),c=n(827),h=n(6577),p=n(1015);class d extends p.g{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,s=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==s&&(this.epsilon=r.BV.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const p=r.BV.registeredVariables[t],d=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:(0,s.lu)((()=>(0,h.P)(p).variable(d)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:(0,s.lu)((()=>(0,h.P)(p).variable(d)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:(0,s.lu)((()=>(0,h.P)(p).variable(d)))});const f=Array.isArray(e)?e[n].tensor:e[t];if(null==f)return;const m=this.accumulatedMeanSquares[n].variable,g=this.accumulatedMoments[n].variable;(0,s.lu)((()=>{const e=(0,a.I)((0,o.d)(m,this.decay),(0,o.d)((0,l.h)(f),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=(0,a.I)((0,o.d)(t,this.decay),(0,o.d)(f,1-this.decay)),s=(0,i.h)((0,o.d)(f,this.learningRate),(0,u._)((0,c.l)(e,(0,a.I)((0,l.h)(r),this.epsilon)))),h=(0,a.I)((0,o.d)(g,this.momentum),s);m.assign(e),t.assign(r),g.assign(h);const d=(0,c.l)(p,h);p.assign(d)}else{const e=(0,a.I)((0,o.d)(m,this.decay),(0,o.d)((0,l.h)(f),1-this.decay)),t=(0,a.I)((0,o.d)(g,this.momentum),(0,i.h)((0,o.d)(f,this.learningRate),(0,u._)((0,a.I)(e,this.epsilon))));m.assign(e),g.assign(t);const n=(0,c.l)(p,t);p.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,s.B9)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,s.B9)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,s.B9)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}},5726:function(e,t,n){n.d(t,{D:function(){return l}});var r=n(7097),s=n(4368),a=n(6407),i=n(4841),o=n(9494),u=n(1015);class l extends u.g{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const o=Array.isArray(e)?e[n].tensor:e[t];if(null==o)return;const u=r.BV.registeredVariables[t];(0,s.lu)((()=>{const e=(0,a.I)((0,i.d)(this.c,o),u);u.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,s.Cn)((0,o.i)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}},9742:function(e,t,n){function r(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}n.d(t,{j:function(){return r}})},3393:function(e,t,n){n.r(t),n.d(t,{Serializable:function(){return i},SerializationMap:function(){return o},getRegisteredName:function(){return l},registerClass:function(){return u}});var r=n(9122);const s=new Map,a=new Map;class i{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class o{constructor(){this.classNameMap={}}static getMap(){return null==o.instance&&(o.instance=new o),o.instance}static register(e){o.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function u(e,t,n){(0,r.assert)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,r.assert)("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,r.assert)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const i=t+">"+n;return o.register(e),s.set(i,e),a.set(e,i),e}function l(e){return a.has(e)?a.get(e):e.className}},4077:function(e,t,n){n.d(t,{es:function(){return w},YD:function(){return d},_w:function(){return k},t3:function(){return v},FZ:function(){return x},Vp:function(){return b},Vi:function(){return y}});var r=n(5938),s=n(9122);const a=20,i=3,o=7;function u(e,t,n,r){const a=(0,s.computeStrides)(t),i=function(e,t,n,r){const a=(0,s.sizeFromShape)(t),i=r[r.length-1],o=new Array(i).fill(0),u=t.length,c="complex64"===n?p(e):e;if(u>1)for(let s=0;s<a/i;s++){const e=s*i;for(let t=0;t<i;t++)o[t]=Math.max(o[t],l(c[e+t],0,n).length)}return o}(e,t,n,a),o=t.length,u=h(e,t,n,a,i),c=["Tensor"];return r&&(c.push(`  dtype: ${n}`),c.push(`  rank: ${o}`),c.push(`  shape: [${t}]`),c.push("  values:")),c.push(u.map((e=>"    "+e)).join("\n")),c.join("\n")}function l(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(o))} + ${parseFloat(e[1].toFixed(o))}j`:(0,s.isString)(e)?`'${e}'`:"bool"===n?c(e):parseFloat(e.toFixed(o)).toString(),(0,s.rightPad)(r,t)}function c(e){return 0===e?"false":"true"}function h(e,t,n,r,s,o=!0){const u="complex64"===n?2:1,d=t[0],f=t.length;if(0===f){if("complex64"===n){return[l(p(e)[0],0,n)]}return"bool"===n?[c(e[0])]:[e[0].toString()]}if(1===f){if(d>a){let t=Array.from(e.slice(0,i*u)),r=Array.from(e.slice((d-i)*u,d*u));return"complex64"===n&&(t=p(t),r=p(r)),["["+t.map(((e,t)=>l(e,s[t],n))).join(", ")+", ..., "+r.map(((e,t)=>l(e,s[d-i+t],n))).join(", ")+"]"]}return["["+("complex64"===n?p(e):Array.from(e)).map(((e,t)=>l(e,s[t],n))).join(", ")+"]"]}const m=t.slice(1),g=r.slice(1),y=r[0]*u,b=[];if(d>a){for(let t=0;t<i;t++){const r=t*y;b.push(...h(e.slice(r,r+y),m,n,g,s,!1))}b.push("...");for(let t=d-i;t<d;t++){const r=t*y;b.push(...h(e.slice(r,r+y),m,n,g,s,t===d-1))}}else for(let a=0;a<d;a++){const t=a*y;b.push(...h(e.slice(t,t+y),m,n,g,s,a===d-1))}const x=2===f?",":"";b[0]="["+(d>0?b[0]+x:"");for(let a=1;a<b.length-1;a++)b[a]=" "+b[a]+x;let w=",\n";for(let a=2;a<f;a++)w+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(o?"":w),b}function p(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class d{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=s.sizeFromShape(e),null!=n){const e=n.length;s.assert(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||s.getArrayFromDType(t,this.size),this.strides=(0,s.computeStrides)(e)}set(e,...t){0===t.length&&(t=[0]),s.assert(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){throw new Error(`Requested out of range element at ${e}.   Buffer shape=${this.shape}`)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return f().makeTensor(this.values,this.shape,this.dtype)}}let f=null,m=null,g=null;function y(e){f=e}function b(e){m=e}function x(e){g=e}class w{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=s.sizeFromShape(e),this.strides=(0,s.computeStrides)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return m.buffer(this.shape,this.dtype,e)}bufferSync(){return m.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,s.toNestedArray)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,s.toNestedArray)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=f().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>s.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),f().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=f().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>s.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await f().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(f().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return m.print(this,e)}clone(){return this.throwIfDisposed(),m.clone(this)}toString(e=!1){return u(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),m.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),f().makeVariable(this,e,t,n)}}function v(){return(0,r.R)("Tensor",(()=>w))}Object.defineProperty(w,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),v();class k extends w{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!s.arraysEqual(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);f().disposeTensor(this),this.dataId=e.dataId,f().incRef(this,null)}dispose(){f().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(k,Symbol.hasInstance,{value:e=>e instanceof w&&null!=e.assign&&e.assign instanceof Function})},747:function(e,t,n){n.r(t),n.d(t,{assertTypesMatch:function(){return o},getTensorsInContainer:function(){return l},isTensorInList:function(){return u},makeTypesMatch:function(){return i}});var r=n(4077),s=n(1221),a=n(9122);function i(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,s.x8)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function o(e,t){(0,a.assert)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function u(e,t){return t.some((t=>t.id===e.id))}function l(e){const t=[];return c(e,t,new Set),t}function c(e,t,n){if(null==e)return;if(e instanceof r.es)return void t.push(e);if(s=e,!Array.isArray(s)&&"object"!==typeof s)return;var s;const a=e;for(const r in a){const e=a[r];n.has(e)||(n.add(e),c(e,t,n))}}},3740:function(e,t,n){n.d(t,{C:function(){return l},_1:function(){return p},sI:function(){return d}});var r=n(7097),s=n(2885),a=n(4077),i=n(1221),o=n(9122),u=n(569);function l(e,t){let n=e;if((0,o.isTypedArray)(e))return"string"===t?[]:[e.length];if((0,i.Oq)(e)){return[e.height,e.width*(e.channels||"RGBA").length]}if((0,i.$F)(e))return[e.buffer.size/(null==t?4:(0,u.bT)(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||(0,o.isTypedArray)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&(0,s.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&c(e,r,[]),r}function c(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,o.isTypedArray)(e))return void(0,o.assert)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,o.assert)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,o.assert)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let s=0;s<e.length;++s)c(e[s],r,n.concat(s))}function h(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function p(e,t,n,s="numeric"){if(e instanceof a.es)return h(s,e.dtype,t,n),e;let i=(0,o.inferDtype)(e);if("string"!==i&&["bool","int32","float32"].indexOf(s)>=0&&(i=s),h(s,i,t,n),null==e||!(0,o.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${null==e?"null":e.constructor.name}'`)}const u=l(e,i);(0,o.isTypedArray)(e)||Array.isArray(e)||(e=[e]);const c="string"!==i?(0,o.toTypedArray)(e,i):(0,o.flatten)(e,[],!0);return r.BV.makeTensor(c,u,i)}function d(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>p(e,`${t}[${s}]`,n,r)))}},6625:function(e,t,n){n(7097),n(3740),n(9122)},1221:function(e,t,n){var r,s,a,i,o;n.d(t,{$F:function(){return p},Oq:function(){return h},x8:function(){return l},z4:function(){return c}}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(i||(i={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(o||(o={}));const u={float32:i,int32:s,bool:a,complex64:o};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function c(e){return l(e,"int32")}function h(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function p(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}},9122:function(e,t,n){n.r(t),n.d(t,{arraysEqual:function(){return a.cO},arraysEqualWithNull:function(){return a.DK},assert:function(){return a.hu},assertNonNegativeIntegerDimensions:function(){return a.Mu},assertNonNull:function(){return a.Cq},assertShapesMatch:function(){return a.k5},bytesFromStringArray:function(){return a.Ub},bytesPerElement:function(){return a.bT},checkConversionForErrors:function(){return a.D5},clamp:function(){return a.uZ},computeStrides:function(){return a.e3},convertBackendValuesAndArrayBuffer:function(){return a.KS},createScalarValue:function(){return w},createShuffledIndices:function(){return a.U$},decodeString:function(){return N},distSquared:function(){return a.E7},encodeString:function(){return S},fetch:function(){return I},fingerPrint64:function(){return x},flatten:function(){return C},getArrayFromDType:function(){return a.rQ},getTypedArrayFromDType:function(){return a.WP},hasEncodingLoss:function(){return a.QB},hexToLong:function(){return u},indexToLoc:function(){return a.NE},inferDtype:function(){return a.D2},inferFromImplicitShape:function(){return a.JZ},isBoolean:function(){return a.jn},isFunction:function(){return a.mf},isInt:function(){return a.GN},isNumber:function(){return a.hj},isPromise:function(){return a.tI},isScalarShape:function(){return a.xH},isString:function(){return a.HD},isTypedArray:function(){return T},isValidDtype:function(){return a.LP},locToIndex:function(){return a.qy},makeOnesTypedArray:function(){return a.p8},makeZerosNestedTypedArray:function(){return a.l6},makeZerosTypedArray:function(){return a.wT},nearestDivisor:function(){return a.jP},nearestLargerEven:function(){return a.nY},now:function(){return k},parseAxisParam:function(){return a.EC},randUniform:function(){return a.bj},repeatedTry:function(){return a.WD},rightPad:function(){return a.oj},shuffle:function(){return a.TV},shuffleCombo:function(){return a.d7},sizeFromShape:function(){return a.NA},sizeToSquarishShape:function(){return a.YP},squeezeShape:function(){return a.bp},sum:function(){return a.Sm},swap:function(){return a.LF},tanh:function(){return a.AE},toNestedArray:function(){return a.GX},toTypedArray:function(){return v}});var r=n(2885),s=n(9742),a=n(569),i=n(3720);const o=n.n(i)()||i;function u(e){return o.fromString(e,!0,16)}const l=u("c3a5c85c97cb3127"),c=u("b492b66fbe98f273"),h=u("9ae16a3b2f90404f");function p(e){return e.xor(e.shru(47))}function d(e,t,n){const r=e.slice(t,t+n);return o.fromBytes(Array.from(r),!0,!0)}function f(e,t){return d(e,t,8)}function m(e,t){return d(e,t,4)}function g(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function y(e,t,n=u("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function b(e,t,n,r){return function(e,t,n,r,s,a){s=s.add(e),a=g(a.add(s).add(r),21);const i=s;return s=(s=s.add(t)).add(n),a=a.add(g(s,44)),[s.add(r),a.add(i)]}(f(e,t),f(e,t+8),f(e,t+16),f(e,t+24),n,r)}function x(e,t=e.length){const n=o.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=h.add(2*t),r=f(e,0).add(h),s=f(e,t-8);return y(g(s,37).mul(n).add(r),g(r,25).add(s).mul(n),n)}if(t>=4){const n=h.add(2*t);return y(m(e,0).shl(3).add(t),m(e,t-4),n)}if(t>0){const n=t+(e[t-1]<<2);return p(h.mul(e[0]+(e[t>>1]<<8)).xor(l.mul(n))).mul(h)}return h}(e,t):function(e,t=e.length){const n=h.add(2*t),r=f(e,0).mul(c),s=f(e,8),a=f(e,t-8).mul(n),i=f(e,t-16).mul(h);return y(g(r.add(s),43).add(g(a,30)).add(i),r.add(g(s.add(h),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=h.add(2*t),r=f(e,0).mul(h),s=f(e,8),a=f(e,t-8).mul(n),i=f(e,t-16).mul(h),o=g(r.add(s),43).add(g(a,30)).add(i),u=y(o,r.add(g(s.add(h),18)).add(a),n),l=f(e,16).mul(n),c=f(e,24),p=o.add(f(e,t-32)).mul(n),d=u.add(f(e,t-24)).mul(n);return y(g(l.add(c),43).add(g(p,30)).add(d),l.add(g(c.add(r),18)).add(p),n)}(e,t);let r=n,s=n.mul(c).add(113),a=p(s.mul(h).add(113)).mul(h),i=[o.UZERO,o.UZERO],u=[o.UZERO,o.UZERO];r=r.mul(h).add(f(e,0));let d=0;const x=64*(t-1>>6),w=x+(t-1&63)-63;do{r=g(r.add(s).add(i[0]).add(f(e,d+8)),37).mul(c),s=g(s.add(i[1]).add(f(e,d+48)),42).mul(c),r=r.xor(u[1]),s=s.add(i[0]).add(f(e,d+40)),a=g(a.add(u[0]),33).mul(c),i=b(e,d,i[1].mul(c),r.add(u[0])),u=b(e,d+32,a.add(u[1]),s.add(f(e,d+16))),[a,r]=[r,a],d+=64}while(d!==x);const v=c.add(a.and(255).shl(1));return d=w,u[0]=u[0].add(t-1&63),i[0]=i[0].add(u[0]),u[0]=u[0].add(i[0]),r=g(r.add(s).add(i[0]).add(f(e,d+8)),37).mul(v),s=g(s.add(i[1]).add(f(e,d+48)),42).mul(v),r=r.xor(u[1].mul(9)),s=s.add(i[0].mul(9).add(f(e,d+40))),a=g(a.add(u[0]),33).mul(v),i=b(e,d,i[1].mul(v),r.add(u[0])),u=b(e,d+32,a.add(u[1]),s.add(f(e,d+16))),[a,r]=[r,a],y(y(i[0],u[0],v).add(p(s).mul(l)).add(a),y(i[1],u[1],v).add(r),v)}function w(e,t){return"string"===t?S(e):v([e],t)}function v(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=C(e)),(0,r.OB)().getBool("DEBUG")&&a.D5(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function k(){return(0,r.OB)().platform.now()}function I(e,t){return(0,r.OB)().platform.fetch(e,t)}function S(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.encode(e,t)}function N(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.decode(e,t)}function T(e){return null!=(0,r.OB)().platform.isTypedArray?(0,r.OB)().platform.isTypedArray(e):(0,s.j)(e)}function C(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||a.tI(e)||null==e||T(e)&&n)t.push(e);else if(Array.isArray(e)||T(e))for(let r=0;r<e.length;++r)C(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let s=0;s<=r;s++)C(e[s],t,n)}return t}},569:function(e,t,n){function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,o(e,t,n)}function s(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,o(e,n,r),o(t,n,r)}function a(e,t,n){return Math.max(e,Math.min(t,n))}function i(e){return e%2===0?e:e+1}function o(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function u(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function l(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function h(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function p(e,t,n=""){h(y(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function d(e){h(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function m(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function b(e){return e%1===0}function x(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function w(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function v(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function I(e,t=(e=>0),n,r){return new Promise(((s,a)=>{let i=0;const o=()=>{if(e())return void s();i++;const u=t(i);null!=n&&i>=n?a():null!=r?r(o,u):setTimeout(o,u)};o()}))}function S(e,t){let n=1,r=-1;for(let a=0;a<e.length;++a)if(e[a]>=0)n*=e[a];else if(-1===e[a]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${a}`);r=a}else if(e[a]<0)throw Error(`Shapes can not be < 0. Found ${e[a]} at dim ${a}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function N(e,t){const n=t.length;return h((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),h(e.every((e=>b(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function T(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:N(t,e).sort();let i=0;for(let o=0;o<e.length;++o){if(null!=a){if(a[i]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==a[i]||a[i]>o)&&1===e[o]&&(n.push(e[o]),r.push(o)),a[i]<=o&&i++}1!==e[o]&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function C(e,t){return $(e,t)}function $(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function E(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function A(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function _(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function D(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function R(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function O(e){return"string"===typeof e||e instanceof String}function F(e){return"boolean"===typeof e}function M(e){return"number"===typeof e}function B(e){return Array.isArray(e)?B(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":M(e)?"float32":O(e)?"string":F(e)?"bool":"float32"}function L(e){return!!(e&&e.constructor&&e.call&&e.apply)}function z(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function U(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function P(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=P(e+t*o,i,n,r)}return s}function V(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return P(0,e,t,n)}function W(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function G(e,t){const n=H(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function H(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function j(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return V(e,new Float32Array(n));if("int32"===t)return V(e,new Int32Array(n));if("bool"===t)return V(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function X(e){e.forEach((t=>{h(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function q(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let s=0;s<e.length-1;++s)r+=n[s]*e[s];return r}function K(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(e/n[s]),e-=r[s]*n[s];return r[r.length-1]=e,r}function Y(e){return e&&e.then&&"function"===typeof e.then}n.d(t,{AE:function(){return x},Cq:function(){return d},D2:function(){return B},D5:function(){return E},DK:function(){return g},E7:function(){return c},EC:function(){return N},GN:function(){return b},GX:function(){return V},HD:function(){return O},JZ:function(){return S},KS:function(){return W},LF:function(){return o},LP:function(){return A},Mu:function(){return X},NA:function(){return f},NE:function(){return K},QB:function(){return _},Sm:function(){return u},TV:function(){return r},U$:function(){return v},Ub:function(){return R},WD:function(){return I},WP:function(){return C},YP:function(){return w},bT:function(){return D},bj:function(){return l},bp:function(){return T},cO:function(){return y},d7:function(){return s},e3:function(){return U},hj:function(){return M},hu:function(){return h},jP:function(){return z},jn:function(){return F},k5:function(){return p},l6:function(){return j},mf:function(){return L},nY:function(){return i},oj:function(){return k},p8:function(){return G},qy:function(){return q},rQ:function(){return $},tI:function(){return Y},uZ:function(){return a},wT:function(){return H},xH:function(){return m}})},5972:function(e,t,n){n.d(t,{IHx:function(){return I.IHx},Xhn:function(){return I.Xhn},zoF:function(){return I.zoF},B90:function(){return I.B90},hiC:function(){return I.hiC},SRH:function(){return I.SRH},BHj:function(){return I.image},YLj:function(){return Kc},iUs:function(){return I.iUs},Cd_:function(){return I.Cd_},luU:function(){return I.luU},lub:function(){return I.lub}});var r={};n.r(r),n.d(r,{json:function(){return Pl}});var s={};n.r(s),n.d(s,{json:function(){return Vl}});var a={};n.r(a),n.d(a,{json:function(){return Wl}});var i={};n.r(i),n.d(i,{json:function(){return Gl}});var o={};n.r(o),n.d(o,{json:function(){return Hl}});var u={};n.r(u),n.d(u,{json:function(){return jl}});var l={};n.r(l),n.d(l,{json:function(){return Xl}});var c={};n.r(c),n.d(c,{json:function(){return ql}});var h={};n.r(h),n.d(h,{json:function(){return Kl}});var p={};n.r(p),n.d(p,{json:function(){return Yl}});var d={};n.r(d),n.d(d,{json:function(){return Ql}});var f={};n.r(f),n.d(f,{json:function(){return Zl}});var m={};n.r(m),n.d(m,{json:function(){return Jl}});var g={};n.r(g),n.d(g,{json:function(){return ec}});var y={};n.r(y),n.d(y,{json:function(){return tc}});var b={};n.r(b),n.d(b,{json:function(){return nc}});var x={};n.r(x),n.d(x,{json:function(){return rc}});var w={};n.r(w),n.d(w,{json:function(){return sc}});var v={};n.r(v),n.d(v,{json:function(){return ac}});var k={};n.r(k),n.d(k,{OP_SCOPE_SUFFIX:function(){return Gn.zvA},abs:function(){return Gn.WnP},acos:function(){return Gn.Khb},acosh:function(){return Gn.__u},add:function(){return Gn.IHx},addN:function(){return Gn.QBD},all:function(){return Gn.$6P},any:function(){return Gn.YjB},argMax:function(){return Gn.NqF},argMin:function(){return Gn.vHJ},asin:function(){return Gn.ZRM},asinh:function(){return Gn.VfV},atan:function(){return Gn.z4N},atan2:function(){return Gn.fvJ},atanh:function(){return Gn.C80},avgPool:function(){return Gn.wS1},avgPool3d:function(){return Gn.uR5},basicLSTMCell:function(){return Gn.zEQ},batchNorm:function(){return Gn.tgs},batchNorm2d:function(){return Gn.Dxk},batchNorm3d:function(){return Gn.JY5},batchNorm4d:function(){return Gn.p3b},batchToSpaceND:function(){return Gn.E4h},bincount:function(){return Gn.yE8},bitwiseAnd:function(){return Gn.ycw},booleanMaskAsync:function(){return Gn.anm},broadcastArgs:function(){return Gn.XsQ},broadcastTo:function(){return Gn.UFq},buffer:function(){return Gn.f3b},cast:function(){return Gn.pju},ceil:function(){return Gn.mDi},clipByValue:function(){return Gn.iUl},clone:function(){return Gn.d9v},complex:function(){return Gn.PYB},concat:function(){return Gn.zoF},concat1d:function(){return Gn.gME},concat2d:function(){return Gn.Izb},concat3d:function(){return Gn.MNy},concat4d:function(){return Gn.ZaL},conv1d:function(){return Gn.PAt},conv2d:function(){return Gn.Tek},conv2dTranspose:function(){return Gn.bc},conv3d:function(){return Gn.pdZ},conv3dTranspose:function(){return Gn.$QV},cos:function(){return Gn.mCk},cosh:function(){return Gn.f9Y},cosineWindow:function(){return Gn.mew},cumprod:function(){return Gn.$Gn},cumsum:function(){return Gn.zbp},denseBincount:function(){return Gn.ppE},depthToSpace:function(){return Gn.nTT},depthwiseConv2d:function(){return Gn.B10},diag:function(){return Gn.Ka3},dilation2d:function(){return Gn.WmZ},div:function(){return Gn.hiC},divNoNan:function(){return Gn.NTj},dot:function(){return Gn.AKD},dropout:function(){return Gn.rvX},einsum:function(){return Gn.WYO},elu:function(){return Gn.pyx},enclosingPowerOfTwo:function(){return Gn.GRh},ensureShape:function(){return Gn.EDe},equal:function(){return Gn.DgJ},erf:function(){return Gn.qNN},euclideanNorm:function(){return Gn.d2q},exp:function(){return Gn.Qqt},expandDims:function(){return Gn.dt4},expm1:function(){return Gn.t$B},eye:function(){return Gn.iyy},fft:function(){return Gn.kp_},fill:function(){return Gn.hlL},floor:function(){return Gn.GWj},floorDiv:function(){return Gn.qPi},fused:function(){return Gn.imm},gather:function(){return Gn.Iqj},gatherND:function(){return Gn.dbB},greater:function(){return Gn.pjt},greaterEqual:function(){return Gn.brS},ifft:function(){return Gn.Sxn},imag:function(){return Gn.asL},image:function(){return Gn.BHj},inTopKAsync:function(){return Gn.V3u},irfft:function(){return Gn.wx0},isFinite:function(){return Gn.xVT},isInf:function(){return Gn.UWc},isNaN:function(){return Gn.i2d},leakyRelu:function(){return Gn.hi7},less:function(){return Gn.d9m},lessEqual:function(){return Gn.zN1},linalg:function(){return Gn.$r2},linspace:function(){return Gn.SX3},localResponseNormalization:function(){return Gn.G9k},log:function(){return Gn.cM7},log1p:function(){return Gn.Krr},logSigmoid:function(){return Gn.e_t},logSoftmax:function(){return Gn.CmS},logSumExp:function(){return Gn.l_t},logicalAnd:function(){return Gn.HvI},logicalNot:function(){return Gn.hJK},logicalOr:function(){return Gn.K5V},logicalXor:function(){return Gn.egP},losses:function(){return Gn.MB5},lowerBound:function(){return Gn.eab},matMul:function(){return Gn.OI3},max:function(){return Gn.Fp7},maxPool:function(){return Gn._sB},maxPool3d:function(){return Gn.YQQ},maxPoolWithArgmax:function(){return Gn.Ip$},maximum:function(){return Gn.gWQ},mean:function(){return Gn.J69},meshgrid:function(){return Gn.ry_},min:function(){return Gn.VV$},minimum:function(){return Gn.LTh},mirrorPad:function(){return Gn.VdP},mod:function(){return Gn.wQq},moments:function(){return Gn.Gi7},movingAverage:function(){return Gn.p_},mul:function(){return Gn.dC7},multiRNNCell:function(){return Gn.rq4},multinomial:function(){return Gn.SJ_},neg:function(){return Gn.W76},norm:function(){return Gn.KOy},notEqual:function(){return Gn.Quu},oneHot:function(){return Gn.lfX},ones:function(){return Gn.iUs},onesLike:function(){return Gn.JpU},op:function(){return Gn.op},outerProduct:function(){return Gn.N2O},pad:function(){return Gn.vku},pad1d:function(){return Gn.pNR},pad2d:function(){return Gn.koy},pad3d:function(){return Gn.t1L},pad4d:function(){return Gn.lGY},pool:function(){return Gn.d_R},pow:function(){return Gn.sQ3},prelu:function(){return Gn.AL3},print:function(){return Gn.S0v},prod:function(){return Gn.WVs},raggedGather:function(){return Gn.$gW},raggedRange:function(){return Gn.VT$},raggedTensorToTensor:function(){return Gn.N89},rand:function(){return Gn.TN_},randomGamma:function(){return Gn.wzB},randomNormal:function(){return Gn.nGf},randomStandardNormal:function(){return Gn.ruB},randomUniform:function(){return Gn.LGj},randomUniformInt:function(){return Gn.pe5},range:function(){return Gn.w6H},real:function(){return Gn.kwC},reciprocal:function(){return Gn.M25},relu:function(){return Gn.UYe},relu6:function(){return Gn.btT},reshape:function(){return Gn.XLQ},reverse:function(){return Gn.GYS},reverse1d:function(){return Gn.SDf},reverse2d:function(){return Gn.diP},reverse3d:function(){return Gn.sx7},reverse4d:function(){return Gn.mG2},rfft:function(){return Gn.QEs},round:function(){return Gn.NMM},rsqrt:function(){return Gn.bp0},scalar:function(){return Gn.iD$},scatterND:function(){return Gn.snQ},searchSorted:function(){return Gn.zcT},selu:function(){return Gn.U8D},separableConv2d:function(){return Gn.U_I},setdiff1dAsync:function(){return Gn.ODp},sigmoid:function(){return Gn.XD2},sign:function(){return Gn.Xxe},signal:function(){return Gn.tdS},sin:function(){return Gn.O$l},sinh:function(){return Gn.R_K},slice:function(){return Gn.tPi},slice1d:function(){return Gn.jZU},slice2d:function(){return Gn.SmN},slice3d:function(){return Gn.CnO},slice4d:function(){return Gn.p0P},softmax:function(){return Gn.XAC},softplus:function(){return Gn.Wvh},spaceToBatchND:function(){return Gn.fBT},sparse:function(){return Gn.rVs},sparseToDense:function(){return Gn.ers},spectral:function(){return Gn.uN7},split:function(){return Gn.Vl2},sqrt:function(){return Gn._b3},square:function(){return Gn.h62},squaredDifference:function(){return Gn.$i},squeeze:function(){return Gn.L9e},stack:function(){return Gn.knu},step:function(){return Gn.Nbs},stridedSlice:function(){return Gn.NXj},string:function(){return Gn.Z_8},sub:function(){return Gn.luU},sum:function(){return Gn.Smz},tan:function(){return Gn.ORZ},tanh:function(){return Gn.AEp},tensor:function(){return Gn.XeE},tensor1d:function(){return Gn.RRF},tensor2d:function(){return Gn.odF},tensor3d:function(){return Gn.wOQ},tensor4d:function(){return Gn.yXz},tensor5d:function(){return Gn.Bfx},tensor6d:function(){return Gn.xZs},tensorScatterUpdate:function(){return Gn.Pg0},tile:function(){return Gn.Gg6},topk:function(){return Gn.hg7},transpose:function(){return Gn.p4s},truncatedNormal:function(){return Gn.Xu6},unique:function(){return Gn.Two},unsortedSegmentSum:function(){return Gn.pUJ},unstack:function(){return Gn.HHK},upperBound:function(){return Gn.GaM},variable:function(){return Gn.VD$},where:function(){return Gn.arb},whereAsync:function(){return Gn.itS},zeros:function(){return Gn.lls},zerosLike:function(){return Gn.P84}});var I=n(9790),S=n(9121),N=n(2271),T=n(4841),C=n(1901);const $={kernelName:S.SYM,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)(e,(0,C.N)((0,N.p)(n,"float32"),-1))}}};var E=n(1274),A=n(7370),_=n(9494),D=n(3261),R=n(248),O=n(827);const F={kernelName:S.VGw,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,R.h)((0,N.p)(n,"float32")),r=(0,D._)((0,O.l)((0,_.i)(1),t));return(0,A.W)((0,E.h)(e,r))}}}},M={kernelName:S.SpW,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,D._)((0,O.l)((0,R.h)((0,N.p)(n,"float32")),1));return(0,E.h)(e,t)}}}};var B=n(2200),L=n(4968),z=n(5475);const U={kernelName:S.mm_,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=B.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{let t=e;const r=B.getReductionAxes(n.shape,s);return r.length>0&&(t=(0,z.S)(t,r)),(0,L.X)(t,n.shape)},b:()=>{let t=e;const n=B.getReductionAxes(r.shape,s);return n.length>0&&(t=(0,z.S)(t,n)),(0,L.X)(t,r.shape)}}}},P={kernelName:S.Xze,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}};var V=n(6577);const W={kernelName:S.sJF,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,V.P)(n)}}},G={kernelName:S.aJk,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,V.P)(n)}}},H={kernelName:S.M2y,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,E.h)(e,(0,D._)((0,O.l)((0,_.i)(1),(0,R.h)((0,N.p)(n,"float32")))))}}};var j=n(6407);const X={kernelName:S.qw7,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,D._)((0,j.I)((0,_.i)(1),(0,R.h)((0,N.p)(n,"float32"))));return(0,E.h)(e,t)}}}},q={kernelName:S.QCc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,B.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,j.I)((0,R.h)(n),(0,R.h)(r));let a=(0,T.d)(e,(0,E.h)(r,t));const i=(0,B.getReductionAxes)(n.shape,s);return i.length>0&&(a=(0,z.S)(a,i)),(0,L.X)(a,n.shape)},b:()=>{const t=(0,j.I)((0,R.h)(n),(0,R.h)(r));let a=(0,A.W)((0,T.d)(e,(0,E.h)(n,t)));const i=(0,B.getReductionAxes)(r.shape,s);return i.length>0&&(a=(0,z.S)(a,i)),(0,L.X)(a,r.shape)}}}},K={kernelName:S.jMg,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,E.h)(e,(0,j.I)((0,R.h)((0,N.p)(n,"float32")),1))}}},Y={kernelName:S.Oyi,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,E.h)(e,(0,O.l)((0,_.i)(1),(0,R.h)((0,N.p)(n,"float32"))))}}};var Q=n(7097),Z=n(3740),J=n(9122),ee=n(2582),te=n(2668);const ne=(0,te.op)({avgPool3dGrad_:function(e,t,n,r,s,a){const i=(0,Z._1)(e,"dy","avgPool3dGrad"),o=(0,Z._1)(t,"input","avgPool3dGrad");let u=i,l=o,c=!1;4===o.rank&&(c=!0,u=(0,L.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=(0,L.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),J.assert(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),J.assert(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),(0,ee.m)("avgPool3dGrad",s,a);const h=Q.BV.runKernel(S.IMb,{dy:u,input:l},{filterSize:n,strides:r,pad:s,dimRoundingMode:a});return c?(0,L.X)(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),re={kernelName:S._k9,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>ne(e,r,s,a,i,o)}}};const se=(0,te.op)({avgPoolGrad_:function(e,t,n,r,s){const a=(0,Z._1)(e,"dy","avgPoolGrad"),i=(0,Z._1)(t,"input","avgPoolGrad");J.assert(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,u=a,l=!1;3===i.rank&&(l=!0,o=(0,L.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=(0,L.X)(a,[1,a.shape[0],a.shape[1],a.shape[2]])),J.assert(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),J.assert(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c=Q.BV.runKernel(S.ROF,{dy:u,input:o},{filterSize:n,strides:r,pad:s});return l?(0,L.X)(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),ae={kernelName:S.JhU,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>se(e,r,s,a,i)}}};var ie=n(8687);const oe={kernelName:S.XLW,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>(0,ie.O)(e,s,!1,!1),b:()=>(0,ie.O)(e,r,!0,!1)}:a&&!i?{a:()=>(0,ie.O)(s,e,!1,!0),b:()=>(0,ie.O)(r,e,!1,!1)}:{a:()=>(0,ie.O)(s,e,!0,!0),b:()=>(0,ie.O)(e,r,!0,!0)}:{a:()=>(0,ie.O)(e,s,!1,!0),b:()=>(0,ie.O)(r,e,!0,!1)}}};var ue=n(7918);const le={kernelName:S.zws,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>(0,ue.f)(e,r,s)}}},ce={kernelName:S.Ly9,gradFunc:(e,t,n)=>{const r=n.inputShape,s=n.shape,a=Array.from(s);for(let o=r.length-1;o>=0;o--)if(r[o]===s[o])a[o]=1;else if(1!==r[o])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${s}].`);const i=[];for(let o=0;o<a.length;o++)a[o]>1&&i.push(o);return{x:()=>(0,z.S)(e,i,!0)}}},he={kernelName:S.RFZ,gradFunc:e=>({x:()=>e.clone()})},pe={kernelName:S.gJX,gradFunc:e=>({x:()=>(0,V.P)(e)})};var de=n(7630),fe=n(624),me=n(2856),ge=n(5912);const ye={kernelName:S.xnO,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>(0,ge.a)((0,me.H)((0,de.b)(r,s),(0,fe.z)(r,a)),e,(0,V.P)(e))}}},be={kernelName:S.yj2,inputsToSave:["x"],gradFunc:$.gradFunc};var xe=n(8644);const we={kernelName:S.Eh3,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=(0,J.parseAxisParam)(s,t[0].shape)[0],i=r.map((e=>e[a]));return(0,xe.V)(e,i,a).map((e=>()=>e))}};var ve=n(6013),ke=n(9832);const Ie={kernelName:S.mhS,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:u}=n;return J.assert(ee.I0(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>(0,ke._)(r.shape,e,s,i,o,u),filter:()=>(0,ve.p)(r,e,s.shape,i,o,u)}}};var Se=n(4794);const Ne={kernelName:S.wm,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>(0,Se.T)(e,s,a,i,o,1,u),filter:()=>(0,ve.p)(e,r,s.shape,a,i,o,u)}}};const Te=(0,te.op)({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=(0,L.X)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;return 4===i.rank&&(i=(0,L.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),J.assert(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),J.assert(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),J.assert(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),J.assert(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),J.assert(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`)),Q.BV.runKernel(S.o2y,{x:a,dy:i},{strides:r,pad:s,filterShape:n})}});var Ce=n(7594);const $e={kernelName:S.x12,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;J.assert((0,ee.I0)(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>(0,Ce._)(i.shape,e,o,s,a),filter:()=>Te(i,e,o.shape,s,a)}}};var Ee=n(9331);const Ae={kernelName:S.mc4,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)((0,A.W)((0,Ee.O)((0,N.p)(n,"float32"))),e)}}};var _e=n(3254);const De={kernelName:S.TR1,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)((0,_e.R)((0,N.p)(n,"float32")),e)}}};var Re=n(3591),Oe=n(7405),Fe=n(9065);const Me={kernelName:S.iHb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=(0,Re.Q3)([s],r.rank);let n=(0,Oe.z)(e,s,a,!i);return null!=t&&(n=(0,Fe.p)(n,t)),n}}}};var Be=n(8098),Le=n(4375);const ze={kernelName:S.cie,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;J.assert(ee.I0(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return J.assert(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),J.assert(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),J.assert(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),J.assert(ee.jT(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),ee.m("depthwiseConv2d",a,i),{x:()=>(0,Le.v)(u.shape,e,l,s,a,o,i),filter:()=>(0,Be.z)(u,e,l.shape,s,a,o,i)}}},Ue={kernelName:S.p4S,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>Q.BV.runKernel(S.ekb,a,n),filter:()=>Q.BV.runKernel(S.Vn9,i,n)}}},Pe={kernelName:S.SX0,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>Q.BV.runKernel(S.HEU,r)}}};var Ve=n(4842);const We={kernelName:S.Omj,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=(0,T.d)((0,Ve.Q)((0,A.W)((0,R.h)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,T.d)(e,r)}}},Ge={kernelName:S.NEP,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)(e,n)}}},He={kernelName:S.YFo,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>(0,L.X)(e,n.shape)}}},je={kernelName:S.Y0y,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)(e,(0,Ve.Q)(n))}}},Xe={kernelName:S.OR,gradFunc:e=>({x:()=>(0,V.P)(e)})},qe={kernelName:S.jeX,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,B.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,E.h)(e,(0,N.p)(r,"float32")),a=(0,B.getReductionAxes)(n.shape,s);return a.length>0?(0,L.X)((0,z.S)(t,a),n.shape):t},b:()=>{let t=(0,T.d)(e,(0,N.p)(n,"float32"));const a=(0,B.getReductionAxes)(r.shape,s);a.length>0&&(t=(0,L.X)((0,z.S)(t,a),r.shape));const i=(0,R.h)(r);return(0,A.W)((0,E.h)(t,(0,N.p)(i,"float32")))}}}};var Ke=n(2634),Ye=n(7501);const Qe={kernelName:S.sHE,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,u=null==o?(0,_.i)(1):o,l=(0,B.getReductionAxes)(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=(0,O.l)(s,a),p=(0,T.d)(e,u),d=(0,Ke.b)((0,j.I)(i,(0,_.i)(r))),f=(0,T.d)((0,T.d)((0,T.d)(d,d),d),(0,_.i)(-.5));return{x:()=>(0,L.X)((0,T.d)((0,T.d)(e,1===a.rank?(0,Ye.G)((0,L.X)(d,[1,1,1,a.shape[0]]),c):d),u),s.shape),mean:()=>{let e=(0,T.d)((0,T.d)(d,(0,_.i)(-1)),p);return 1===a.rank&&(e=(0,z.S)(e,l)),(0,L.X)(e,a.shape)},variance:()=>{let e=(0,T.d)((0,T.d)(f,h),p);return 1===a.rank&&(e=(0,z.S)(e,l)),(0,L.X)(e,a.shape)},scale:()=>{const t=(0,T.d)(h,d);let n=(0,T.d)(e,t);return 1===a.rank&&(n=(0,z.S)(n,l)),(0,L.X)(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=(0,z.S)(t,l)),(0,L.X)(t,a.shape)}}}};var Ze=n(8749);const Je={kernelName:S.qi_,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a}=n,i=(0,J.parseAxisParam)(a,r.shape)[0];return{x:()=>{const t=r.shape,n=s.size,o=t.slice(0,i),u=o.length,l=t.slice(a,t.length).slice(1),c=l.length,h=et(0,u),p=et(u+1,u+1+c),d=tt([o,[n],l]),f=(0,L.X)(e,d),m=(0,L.X)(s,[n]),g=tt([[u],h,p]),y=(0,Fe.p)(f,g);let b=(0,Ze.p)(y,m,r.shape[i]);const x=(0,Re.LJ)(g);return b=(0,Fe.p)(b,x),b},indices:()=>s}}};function et(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function tt(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const nt={kernelName:S.Acj,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,V.P)(n),b:()=>(0,V.P)(r)}}},rt={kernelName:S.iJz,gradFunc:e=>({x:()=>(0,N.p)(e,"float32")})},st={kernelName:S.avt,gradFunc:e=>({x:()=>(0,V.P)(e)})},at={kernelName:S.iWB,gradFunc:e=>({x:()=>(0,V.P)(e)})},it={kernelName:S.r7n,gradFunc:e=>({x:()=>(0,V.P)(e)})};var ot=n(636);const ut={kernelName:S.J$2,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=(0,ot.p)(r,0);return{x:()=>(0,ge.a)(a,e,(0,T.d)(e,s))}}},lt={kernelName:S.kU,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,E.h)(e,(0,j.I)(n,1))}}},ct={kernelName:S.ZbH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,E.h)(e,(0,N.p)(n,"float32"))}}},ht={kernelName:S.qCd,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=(0,Ve.Q)(r);return(0,O.l)(e,(0,T.d)((0,z.S)(e,s,!0),t))}}}};const pt=(0,te.op)({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,i=.5){return Q.BV.runKernel(S.Hhh,{x:e,y:t,dy:n},{depthRadius:r,bias:s,alpha:a,beta:i})}}),dt={kernelName:S.eZ0,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:u}=n;return{x:()=>pt(r,s,e,a,i,o,u)}}};var ft=n(6477);function mt(e,t,n,r){return t.rank<n.rank&&(t=(0,L.X)(t,Re.rv(t.shape,r))),e.rank<n.rank&&(e=(0,L.X)(e,Re.rv(e.shape,r))),{x:()=>(0,T.d)(e,(0,N.p)((0,ft.D)(n,t),e.dtype))}}const gt={kernelName:S.YoZ,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=mt(e,t[1],a,J.parseAxisParam(s,a.shape));return{x:()=>i.x()}}};var yt=n(6573);const bt={kernelName:S.BMI,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,T.d)(e,(0,N.p)((0,de.b)(n,r),"float32")),b:()=>(0,T.d)(e,(0,N.p)((0,yt.d)(n,r),"float32"))}}};const xt=(0,te.op)({maxPool3dGrad_:function(e,t,n,r,s,a,i){const o=(0,Z._1)(e,"dy","maxPool3dGrad"),u=(0,Z._1)(t,"input","maxPool3dGrad"),l=(0,Z._1)(n,"output","maxPool3dGrad");let c=o,h=u,p=l,d=!1;4===u.rank&&(d=!0,c=(0,L.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=(0,L.X)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=(0,L.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),J.assert(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),J.assert(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),J.assert(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),(0,ee.m)("maxPool3dGrad",a,i);const f=Q.BV.runKernel(S.OU7,{dy:c,input:h,output:p},{filterSize:r,strides:s,pad:a,dimRoundingMode:i});return d?(0,L.X)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),wt={kernelName:S.OAf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>xt(e,r,s,a,i,o,u)}}};const vt=(0,te.op)({maxPoolGrad_:function(e,t,n,r,s,a,i){const o=(0,Z._1)(e,"dy","maxPoolGrad"),u=(0,Z._1)(t,"input","maxPoolGrad"),l=(0,Z._1)(n,"output","maxPoolGrad");return J.assert(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),J.assert(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),J.assert(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),ee.m("maxPoolGrad",a,i),Q.BV.runKernel(S.OV7,{dy:o,input:u,output:l},{filterSize:r,strides:s,pad:a,dimRoundingMode:i})}}),kt={kernelName:S.mTV,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>vt(e,r,s,a,i,o)}}};var It=n(4917);const St={kernelName:S.q2K,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=J.parseAxisParam(s,r.shape),i=(0,Re.kz)(r.shape,a),o=J.sizeFromShape(i[1]);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=(0,L.X)(e,t);return(0,E.h)((0,T.d)(n,(0,It.i)(r.shape,"float32")),o)}}}},Nt={kernelName:S.c17,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=mt(e,i,a,J.parseAxisParam(s,a.shape));return{x:()=>o.x()}}},Tt={kernelName:S.q8u,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,T.d)(e,(0,N.p)((0,fe.z)(n,r),"float32")),b:()=>(0,T.d)(e,(0,N.p)((0,ot.p)(n,r),"float32"))}}};var Ct=n(2676);const $t={kernelName:S.jQs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>(0,Ct.t)(e,a,r.shape)}}};var Et=n(6943);const At={kernelName:S.Vbg,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,B.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,B.getReductionAxes)(n.shape,s);return t.length>0?(0,L.X)((0,z.S)(e,t),n.shape):e},b:()=>{const t=(0,T.d)(e,(0,A.W)((0,Et.G)((0,E.h)(n,r)))),a=(0,B.getReductionAxes)(r.shape,s);return a.length>0?(0,L.X)((0,z.S)(t,a),r.shape):t}}}},_t={kernelName:S.wYn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,B.assertAndGetBroadcastShape)(n.shape,r.shape);return{a:()=>{const t=(0,T.d)(e,(0,N.p)(r,"float32")),a=(0,B.getReductionAxes)(n.shape,s);return a.length>0?(0,L.X)((0,z.S)(t,a),n.shape):t},b:()=>{const t=(0,T.d)(e,(0,N.p)(n,"float32")),a=(0,B.getReductionAxes)(r.shape,s);return a.length>0?(0,L.X)((0,z.S)(t,a),r.shape):t}}}},Dt={kernelName:S.kuV,gradFunc:e=>({x:()=>(0,A.W)(e)})};var Rt=n(723);const Ot={kernelName:S.we_,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>(0,Rt.l)(n.shape,"float32")}}},Ft={kernelName:S.qWM,gradFunc:e=>({x:()=>(0,V.P)(e)})};var Mt=n(4136);const Bt={kernelName:S.QiL,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return(0,Mt.H)(e,r).map((e=>()=>e))}},Lt={kernelName:S.lyA,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>(0,Ct.t)(e,a,r.shape)}}};var zt=n(2597),Ut=n(3453);const Pt={kernelName:S.pe_,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=B.assertAndGetBroadcastShape(a.shape,i.shape);return{a:()=>{const t=(0,N.p)(i,"float32");let n=(0,T.d)(e,(0,T.d)(t,(0,Ut.s)(a,(0,O.l)(t,(0,_.i)(1)))));const r=B.getReductionAxes(a.shape,o);return r.length>0&&(n=(0,z.S)(n,r)),(0,L.X)(n,a.shape)},b:()=>{const t=(0,ot.p)(a,0),n=(0,ge.a)(t,(0,zt.c)(a),(0,V.P)(a));let r=(0,T.d)(e,(0,T.d)(s,n));const u=B.getReductionAxes(i.shape,o);return u.length>0&&(r=(0,z.S)(r,u)),(0,L.X)(r,i.shape)}}}},Vt={kernelName:S.o0g,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,ot.p)(n,0);return{x:()=>(0,ge.a)(s,e,(0,T.d)(e,r)),alpha:()=>{let t=(0,ge.a)(s,(0,V.P)(e),(0,T.d)(e,n));const a=(0,B.getReductionAxes)(r.shape,e.shape);return a.length>0&&(t=(0,z.S)(t,a)),(0,L.X)(t,r.shape)}}}};var Wt=n(5010),Gt=n(9640);function Ht(e,t,n){const r=e.shape.length,s=r-n.length,a=Wt.Wap.getAxesPermutation(n,r);let i=e;null!=a&&(i=(0,Fe.p)(e,a));const o=i.shape.slice(),u=o.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(u);let l=function(e,t,n){const r=e.shape.slice();r[n]=1;const s=(0,L.X)(t,r),a=(0,Gt.$)(e,n,!0,!1),i=(0,Gt.$)(e,n,!0,!0),o=(0,T.d)(a,i);return(0,T.d)(s,o)}(i.reshape(o),t,s);if(l=l.reshape(i.shape),null!=a){const e=Wt.Wap.getUndoAxesPermutation(a);l=(0,Fe.p)(l,e)}return l}const jt={kernelName:S.DlI,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;let a=[];return a=void 0===s||null===s?r.shape.map(((e,t)=>t)):"number"===typeof s?[s]:s,{x:()=>Ht(r,e,a)}}},Xt={kernelName:S.oHH,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=B.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{const t=(0,E.h)(e,(0,N.p)(r,"float32")),a=B.getReductionAxes(n.shape,s);return a.length>0?(0,L.X)((0,z.S)(t,a),n.shape):t},b:()=>{let t=(0,T.d)(e,(0,N.p)(n,"float32"));const a=B.getReductionAxes(r.shape,s);a.length>0&&(t=(0,L.X)((0,z.S)(t,a),r.shape));const i=(0,R.h)(r);return(0,A.W)((0,E.h)(t,(0,N.p)(i,"float32")))}}}},qt={kernelName:S.$HU,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,E.h)(e,(0,A.W)((0,R.h)(n)))}}},Kt={kernelName:S.SbG,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=(0,T.d)((0,fe.z)(n,6),(0,C.N)(n));return{x:()=>(0,T.d)(e,(0,N.p)(r,"float32"))}}},Yt={kernelName:S.qkr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)(e,(0,N.p)((0,C.N)(n),"float32"))}}},Qt={kernelName:S.HZH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,L.X)(e,n.shape)}}},Zt={kernelName:S._Yw,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Q.BV.runKernel(S.zbQ,s,n)}}},Jt={kernelName:S.dpD,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Q.BV.runKernel(S.Hmb,s,n)}}};var en=n(7486);const tn={kernelName:S.mKl,gradFunc:(e,t,n)=>{const{dims:r}=n,s=(0,J.parseAxisParam)(r,e.shape);return{x:()=>(0,en.G)(e,s)}}},nn={kernelName:S.e07,gradFunc:e=>({x:()=>(0,V.P)(e)})},rn={kernelName:S.bV0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,A.W)((0,E.h)(e,(0,T.d)((0,Ut.s)(n,1.5),2)))}}};var sn=n(8651);const an={kernelName:S.PhF,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>(0,N.p)((0,V.P)(n),"float32"),t:()=>(0,T.d)(e,(0,N.p)(n,e.dtype)),e:()=>(0,T.d)(e,(0,N.p)((0,sn.h)(n),e.dtype))}}};var on=n(3179);const un={kernelName:S.oFR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,ot.p)(n,(0,_.i)(0)),r=(0,_.i)(on.y),s=(0,_.i)(on.$),a=(0,T.d)(e,s),i=(0,T.d)((0,T.d)(e,r),(0,Ve.Q)((0,N.p)(n,"float32")));return(0,ge.a)(t,a,i)}}}},ln={kernelName:S.a5O,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)(e,(0,T.d)(n,(0,O.l)((0,_.i)(1),n)))}}},cn={kernelName:S.i5y,gradFunc:e=>({x:()=>(0,V.P)(e)})};var hn=n(173);const pn={kernelName:S.RQH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)((0,hn.m)((0,N.p)(n,"float32")),e)}}};var dn=n(2699);const fn={kernelName:S.wYB,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)((0,dn.f)((0,N.p)(n,"float32")),e)}}};var mn=n(9682),gn=n(7650);const yn={kernelName:S.p2w,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,u]=(0,gn.parseSliceParams)(r,s,a),l=[];for(let c=0;c<e.rank;c++)l.push([o[c],i[c]-o[c]-u[c]]);return{x:()=>(0,mn.v)(e,l)}}},bn={kernelName:S.Gcp,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=(0,T.d)(e,r);return{logits:()=>(0,O.l)(a,(0,T.d)((0,z.S)(a,[s],true),r))}}};var xn=n(625);const wn={kernelName:S.MRv,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)(e,(0,xn.X)(n))}}};var vn=n(8441);const kn={kernelName:S.TQc,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>(0,vn.E)(e,r,s)}}};var In=n(6884);const Sn={kernelName:S.L8s,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>(0,In.z)(e,r)}}},Nn={kernelName:S.FKq,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,E.h)(e,(0,T.d)((0,D._)((0,N.p)(n,"float32")),2))}}},Tn={kernelName:S.bK0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)(e,(0,T.d)((0,N.p)(n,"float32"),2))}}},Cn={kernelName:S._tC,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=(0,_.i)(2);return{a:()=>(0,T.d)(e,(0,T.d)(s,(0,O.l)(n,r))),b:()=>(0,T.d)(e,(0,T.d)(s,(0,O.l)(r,n)))}}},$n={kernelName:S.h8e,gradFunc:e=>({x:()=>(0,V.P)(e)})},En={kernelName:S.Tr8,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=B.assertAndGetBroadcastShape(n.shape,r.shape);return{a:()=>{let t=e;const r=B.getReductionAxes(n.shape,s);return r.length>0&&(t=(0,z.S)(t,r)),(0,L.X)(t,n.shape)},b:()=>{let t=e;const n=B.getReductionAxes(r.shape,s);return n.length>0&&(t=(0,z.S)(t,n)),(0,L.X)((0,A.W)(t),r.shape)}}}},An={kernelName:S.GBy,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;(0,J.parseAxisParam)(a,r.shape).forEach((e=>{s[e]=1}));const i=(0,L.X)(e,s),o=(0,T.d)(i,(0,It.i)(r.shape,"float32"));return{x:()=>o}}},_n={kernelName:S.sEM,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,E.h)(e,(0,R.h)((0,hn.m)(n)))}}},Dn={kernelName:S.MIZ,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)((0,O.l)((0,_.i)(1),(0,R.h)(n)),e)}}},Rn={kernelName:S.n9L,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=(0,V.P)(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=(0,j.I)(t,(0,Ct.t)(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=(0,j.I)(t,(0,Ct.t)(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=(0,j.I)(t,(0,Ct.t)(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=(0,j.I)(t,(0,Ct.t)(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},On={kernelName:S.G3Y,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=Re.LJ(s);return{x:()=>(0,Fe.p)(e,a)}}};var Fn=n(2991);const Mn={kernelName:S.ToN,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>(0,Fn.k)(e,s)}}};var Bn=n(1300),Ln=n(4926),zn=n(632);const Un={kernelName:S.Qvg,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=(0,zn.g)(t,(0,V.P)(t)),r=(0,Ln.I)(e,n);let s=(0,de.b)(t,(0,_.i)(0,"int32"));const a=r.rank-s.rank;for(let o=0;o<a;++o)s=(0,Bn.d)(s,o+1);s=(0,me.H)(s,(0,It.i)(r.shape,"bool"));const i=(0,V.P)(r);return(0,ge.a)(s,r,i)}(e,n)}}};const Pn={kernelName:S.RuY,gradFunc:e=>({x:()=>(0,V.P)(e)})};var Vn=n(6151);const Wn=[$,F,M,U,P,W,G,H,X,q,K,Y,re,ae,oe,le,ce,he,pe,ye,be,we,Ne,Ie,$e,Ae,De,Me,ze,Ue,Xt,Pe,We,Ge,He,je,qe,Xe,Qe,Je,nt,rt,st,at,it,ut,lt,ct,ht,dt,gt,gt,bt,wt,kt,St,Nt,Tt,$t,At,_t,Dt,Ot,Ft,Bt,Lt,Lt,Pt,Vt,jt,qt,Kt,Yt,Qt,Zt,Jt,tn,nn,rn,an,un,ln,cn,pn,fn,yn,bn,wn,kn,kn,Sn,Sn,Nn,Cn,Tn,$n,En,An,_n,Dn,Rn,On,Mn,Un,Pn];for(const Vg of Wn)(0,Vn.Li)(Vg);var Gn=n(985),Hn=n(4077);(0,Hn.t3)().prototype.abs=function(){return this.throwIfDisposed(),(0,Gn.WnP)(this)},(0,Hn.t3)().prototype.acos=function(){return this.throwIfDisposed(),(0,Gn.Khb)(this)},(0,Hn.t3)().prototype.acosh=function(){return this.throwIfDisposed(),(0,Gn.__u)(this)},(0,Hn.t3)().prototype.add=function(e){return this.throwIfDisposed(),(0,j.I)(this,e)};var jn=n(781);(0,Hn.t3)().prototype.all=function(e,t){return this.throwIfDisposed(),(0,jn.$)(this,e,t)};var Xn=n(2998);(0,Hn.t3)().prototype.any=function(e,t){return this.throwIfDisposed(),(0,Xn.Y)(this,e,t)};var qn=n(47);(0,Hn.t3)().prototype.argMax=function(e){return this.throwIfDisposed(),(0,qn.N)(this,e)};var Kn=n(7394);(0,Hn.t3)().prototype.argMin=function(e){return this.throwIfDisposed(),(0,Kn.v)(this,e)},(0,Hn.t3)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,J.assert)(1===this.size,(()=>"The array must have only 1 element.")),(0,L.X)(this,[])},(0,Hn.t3)().prototype.asType=function(e){return this.throwIfDisposed(),(0,Gn.pju)(this,e)},(0,Hn.t3)().prototype.as1D=function(){return this.throwIfDisposed(),(0,L.X)(this,[this.size])},(0,Hn.t3)().prototype.as2D=function(e,t){return this.throwIfDisposed(),(0,L.X)(this,[e,t])},(0,Hn.t3)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),(0,L.X)(this,[e,t,n])},(0,Hn.t3)().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),(0,L.X)(this,[e,t,n,r])},(0,Hn.t3)().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),(0,L.X)(this,[e,t,n,r,s])},(0,Hn.t3)().prototype.asin=function(){return this.throwIfDisposed(),(0,Gn.ZRM)(this)},(0,Hn.t3)().prototype.asinh=function(){return this.throwIfDisposed(),(0,Gn.VfV)(this)},(0,Hn.t3)().prototype.atan=function(){return this.throwIfDisposed(),(0,Gn.z4N)(this)};var Yn=n(9812);(0,Hn.t3)().prototype.atan2=function(e){return this.throwIfDisposed(),(0,Yn.f)(this,e)},(0,Hn.t3)().prototype.atanh=function(){return this.throwIfDisposed(),(0,Gn.C80)(this)};var Qn=n(5176);(0,Hn.t3)().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),(0,Qn.w)(this,e,t,n,r)},(0,Hn.t3)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),(0,vn.E)(this,e,t)};var Zn=n(7505);(0,Hn.t3)().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),(0,Zn.t)(this,e,t,n,r,s)};var Jn=n(8247);(0,Hn.t3)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),(0,Jn.U)(this,e)},(0,Hn.t3)().prototype.cast=function(e){return this.throwIfDisposed(),(0,Gn.pju)(this,e)},(0,Hn.t3)().prototype.ceil=function(){return this.throwIfDisposed(),(0,Gn.mDi)(this)},(0,Hn.t3)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),(0,Gn.iUl)(this,e,t)},(0,Hn.t3)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Hn.es&&(e=[e]),(0,In.z)([this,...e],t)};var er=n(1355);(0,Hn.t3)().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,er.P)(this,e,t,n,r,s,a)};var tr=n(1405);(0,Hn.t3)().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),(0,tr.b)(this,e,t,n,r,s)},(0,Hn.t3)().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,Se.T)(this,e,t,n,r,s,a)},(0,Hn.t3)().prototype.cos=function(){return this.throwIfDisposed(),(0,Gn.mCk)(this)},(0,Hn.t3)().prototype.cosh=function(){return this.throwIfDisposed(),(0,Gn.f9Y)(this)},(0,Hn.t3)().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),(0,Gt.$)(this,e,t,n)},(0,Hn.t3)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),(0,Oe.z)(this,e,t,n)};var nr=n(9112);(0,Hn.t3)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),(0,nr.n)(this,e,t)};var rr=n(4718);(0,Hn.t3)().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,rr.B)(this,e,t,n,r,s,a)};var sr=n(557);(0,Hn.t3)().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),(0,sr.W)(this,e,t,n,r,s)};var ar=n(9322);(0,Hn.t3)().prototype.divNoNan=function(e){return this.throwIfDisposed(),(0,ar.N)(this,e)},(0,Hn.t3)().prototype.div=function(e){return this.throwIfDisposed(),(0,E.h)(this,e)};var ir=n(548);(0,Hn.t3)().prototype.dot=function(e){return this.throwIfDisposed(),(0,ir.A)(this,e)};var or=n(3233);(0,Hn.t3)().prototype.elu=function(){return this.throwIfDisposed(),(0,or.p)(this)},(0,Hn.t3)().prototype.equal=function(e){return this.throwIfDisposed(),(0,ft.D)(this,e)},(0,Hn.t3)().prototype.erf=function(){return this.throwIfDisposed(),(0,Gn.qNN)(this)};var ur=n(1954);(0,Hn.t3)().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),(0,ur.d)(this,e,t)},(0,Hn.t3)().prototype.exp=function(){return this.throwIfDisposed(),(0,Gn.Qqt)(this)},(0,Hn.t3)().prototype.expandDims=function(e){return this.throwIfDisposed(),(0,Bn.d)(this,e)},(0,Hn.t3)().prototype.expm1=function(){return this.throwIfDisposed(),(0,Gn.t$B)(this)},(0,Hn.t3)().prototype.fft=function(){return this.throwIfDisposed(),(0,Gn.kp_)(this)},(0,Hn.t3)().prototype.flatten=function(){return this.throwIfDisposed(),(0,L.X)(this,[this.size])},(0,Hn.t3)().prototype.floor=function(){return this.throwIfDisposed(),(0,Gn.GWj)(this)};var lr=n(9165);(0,Hn.t3)().prototype.floorDiv=function(e){return this.throwIfDisposed(),(0,lr.q)(this,e)},(0,Hn.t3)().prototype.gather=function(e,t,n){return this.throwIfDisposed(),(0,Ln.I)(this,e,t,n)},(0,Hn.t3)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),(0,de.b)(this,e)},(0,Hn.t3)().prototype.greater=function(e){return this.throwIfDisposed(),(0,ot.p)(this,e)},(0,Hn.t3)().prototype.ifft=function(){return this.throwIfDisposed(),(0,Gn.Sxn)(this)},(0,Hn.t3)().prototype.irfft=function(){return this.throwIfDisposed(),(0,Gn.wx0)(this)},(0,Hn.t3)().prototype.isFinite=function(){return this.throwIfDisposed(),(0,Gn.xVT)(this)},(0,Hn.t3)().prototype.isInf=function(){return this.throwIfDisposed(),(0,Gn.UWc)(this)},(0,Hn.t3)().prototype.isNaN=function(){return this.throwIfDisposed(),(0,Gn.i2d)(this)};var cr=n(9133);(0,Hn.t3)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),(0,cr.h)(this,e)},(0,Hn.t3)().prototype.lessEqual=function(e){return this.throwIfDisposed(),(0,fe.z)(this,e)},(0,Hn.t3)().prototype.less=function(e){return this.throwIfDisposed(),(0,yt.d)(this,e)};var hr=n(9648);(0,Hn.t3)().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),(0,hr.G)(this,e,t,n,r)},(0,Hn.t3)().prototype.logSigmoid=function(){return this.throwIfDisposed(),(0,Gn.e_t)(this)},(0,Hn.t3)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),(0,Gn.CmS)(this,e)};var pr=n(1391);(0,Hn.t3)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),(0,pr.l)(this,e,t)},(0,Hn.t3)().prototype.log=function(){return this.throwIfDisposed(),(0,Gn.cM7)(this)},(0,Hn.t3)().prototype.log1p=function(){return this.throwIfDisposed(),(0,Gn.Krr)(this)},(0,Hn.t3)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),(0,me.H)(this,e)},(0,Hn.t3)().prototype.logicalNot=function(){return this.throwIfDisposed(),(0,sn.h)(this)};var dr=n(5750);(0,Hn.t3)().prototype.logicalOr=function(e){return this.throwIfDisposed(),(0,dr.K)(this,e)};var fr=n(596);(0,Hn.t3)().prototype.logicalXor=function(e){return this.throwIfDisposed(),(0,fr.e)(this,e)},(0,Hn.t3)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),(0,ie.O)(this,e,t,n)};var mr=n(1174);(0,Hn.t3)().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),(0,mr._)(this,e,t,n,r)};var gr=n(3307);(0,Hn.t3)().prototype.max=function(e,t){return this.throwIfDisposed(),(0,gr.F)(this,e,t)},(0,Hn.t3)().prototype.maximum=function(e){return this.throwIfDisposed(),(0,zn.g)(this,e)};var yr=n(5130);(0,Hn.t3)().prototype.mean=function(e,t){return this.throwIfDisposed(),(0,yr.J)(this,e,t)};var br=n(5735);(0,Hn.t3)().prototype.min=function(e,t){return this.throwIfDisposed(),(0,br.V)(this,e,t)};var xr=n(4513);(0,Hn.t3)().prototype.minimum=function(e){return this.throwIfDisposed(),(0,xr.L)(this,e)};var wr=n(1483);(0,Hn.t3)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),(0,wr.V)(this,e,t)};var vr=n(5228);(0,Hn.t3)().prototype.mod=function(e){return this.throwIfDisposed(),(0,vr.w)(this,e)},(0,Hn.t3)().prototype.mul=function(e){return this.throwIfDisposed(),(0,T.d)(this,e)},(0,Hn.t3)().prototype.neg=function(){return this.throwIfDisposed(),(0,Gn.W76)(this)},(0,Hn.t3)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),(0,Gn.KOy)(this,e,t,n)};var kr=n(6500);(0,Hn.t3)().prototype.notEqual=function(e){return this.throwIfDisposed(),(0,kr.Q)(this,e)};var Ir=n(6708);(0,Hn.t3)().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),(0,Ir.l)(this,e,t,n)},(0,Hn.t3)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,Gn.JpU)(this)},(0,Hn.t3)().prototype.pad=function(e,t){return this.throwIfDisposed(),(0,mn.v)(this,e,t)};var Sr=n(5860);(0,Hn.t3)().prototype.pool=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,Sr.d)(this,e,t,n,r,s,a)},(0,Hn.t3)().prototype.pow=function(e){return this.throwIfDisposed(),(0,Ut.s)(this,e)};var Nr=n(8151);(0,Hn.t3)().prototype.prelu=function(e){return this.throwIfDisposed(),(0,Nr.A)(this,e)};var Tr=n(9451);(0,Hn.t3)().prototype.prod=function(e,t){return this.throwIfDisposed(),(0,Tr.W)(this,e,t)},(0,Hn.t3)().prototype.reciprocal=function(){return this.throwIfDisposed(),(0,Gn.M25)(this)};var Cr=n(7409);(0,Hn.t3)().prototype.relu=function(){return this.throwIfDisposed(),(0,Cr.U)(this)};var $r=n(3582);(0,Hn.t3)().prototype.relu6=function(){return this.throwIfDisposed(),(0,$r.b)(this)},(0,Hn.t3)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),(0,L.X)(this,e.shape)},(0,Hn.t3)().prototype.reshape=function(e){return this.throwIfDisposed(),(0,L.X)(this,e)};var Er=n(3305);(0,Hn.t3)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),(0,Er.I)(this,e,t,n)};var Ar=n(5098);(0,Hn.t3)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),(0,Ar.j)(this,e,t,n)},(0,Hn.t3)().prototype.reverse=function(e){return this.throwIfDisposed(),(0,en.G)(this,e)},(0,Hn.t3)().prototype.rfft=function(){return this.throwIfDisposed(),(0,Gn.QEs)(this)},(0,Hn.t3)().prototype.round=function(){return this.throwIfDisposed(),(0,Gn.NMM)(this)},(0,Hn.t3)().prototype.rsqrt=function(){return this.throwIfDisposed(),(0,Gn.bp0)(this)};var _r=n(5503);(0,Hn.t3)().prototype.selu=function(){return this.throwIfDisposed(),(0,_r.U)(this)};var Dr=n(8678);(0,Hn.t3)().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),(0,Dr.U)(this,e,t,n,r,s,a)},(0,Hn.t3)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,Gn.XD2)(this)},(0,Hn.t3)().prototype.sign=function(){return this.throwIfDisposed(),(0,Gn.Xxe)(this)},(0,Hn.t3)().prototype.sin=function(){return this.throwIfDisposed(),(0,Gn.O$l)(this)},(0,Hn.t3)().prototype.sinh=function(){return this.throwIfDisposed(),(0,Gn.R_K)(this)},(0,Hn.t3)().prototype.slice=function(e,t){return this.throwIfDisposed(),(0,Gn.tPi)(this,e,t)},(0,Hn.t3)().prototype.softmax=function(e){return this.throwIfDisposed(),(0,Gn.XAC)(this,e)},(0,Hn.t3)().prototype.softplus=function(){return this.throwIfDisposed(),(0,Gn.Wvh)(this)},(0,Hn.t3)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),(0,ue.f)(this,e,t)},(0,Hn.t3)().prototype.split=function(e,t){return this.throwIfDisposed(),(0,xe.V)(this,e,t)},(0,Hn.t3)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,Gn._b3)(this)},(0,Hn.t3)().prototype.square=function(){return this.throwIfDisposed(),(0,Gn.h62)(this)};var Rr=n(5265);(0,Hn.t3)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),(0,Rr.$)(this,e)};var Or=n(9590);(0,Hn.t3)().prototype.squeeze=function(e){return this.throwIfDisposed(),(0,Or.L)(this,e)},(0,Hn.t3)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Hn.es?[this,e]:[this,...e];return(0,Fn.k)(n,t)},(0,Hn.t3)().prototype.step=function(e){return this.throwIfDisposed(),(0,Gn.Nbs)(this,e)},(0,Hn.t3)().prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),(0,Gn.NXj)(this,e,t,n,r,s,a,i,o)},(0,Hn.t3)().prototype.sub=function(e){return this.throwIfDisposed(),(0,O.l)(this,e)},(0,Hn.t3)().prototype.sum=function(e,t){return this.throwIfDisposed(),(0,z.S)(this,e,t)},(0,Hn.t3)().prototype.tan=function(){return this.throwIfDisposed(),(0,Gn.ORZ)(this)},(0,Hn.t3)().prototype.tanh=function(){return this.throwIfDisposed(),(0,Gn.AEp)(this)},(0,Hn.t3)().prototype.tile=function(e){return this.throwIfDisposed(),(0,Ye.G)(this,e)},(0,Hn.t3)().prototype.toBool=function(){return this.throwIfDisposed(),(0,Gn.pju)(this,"bool")},(0,Hn.t3)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,Gn.pju)(this,"float32")},(0,Hn.t3)().prototype.toInt=function(){return this.throwIfDisposed(),(0,Gn.pju)(this,"int32")};var Fr=n(3243);(0,Hn.t3)().prototype.topk=function(e,t){return this.throwIfDisposed(),(0,Fr.h)(this,e,t)},(0,Hn.t3)().prototype.transpose=function(e){return this.throwIfDisposed(),(0,Fe.p)(this,e)};var Mr=n(9608);(0,Hn.t3)().prototype.unique=function(e){return this.throwIfDisposed(),(0,Mr.T)(this,e)},(0,Hn.t3)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),(0,Ze.p)(this,e,t)},(0,Hn.t3)().prototype.unstack=function(e){return this.throwIfDisposed(),(0,Mt.H)(this,e)},(0,Hn.t3)().prototype.where=function(e,t){return this.throwIfDisposed(),(0,ge.a)(e,this,t)},(0,Hn.t3)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,Gn.P84)(this)};class Br extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Br.prototype)}}class Lr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Lr.prototype)}}class zr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,zr.prototype)}}class Ur extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ur.prototype)}}class Pr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Pr.prototype)}}class Vr{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function Wr(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Gr(e,t){if(!e)throw new Pr(t)}function Hr(e,t){let n=0;for(const r of e)r===t&&n++;return n}function jr(e){return 1===e.length?e[0]:e}function Xr(e){return Array.isArray(e)?e:[e]}function qr(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Kr(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Yr={};function Qr(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Zr(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>Zr(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!==typeof t.value?Zr(t):e[n]=t.value)}}}function Jr(e,t={},n={},r="object",s=!1){if("string"===typeof e){let s;if(e in n)s=n[e];else if(e in Yr)s=Yr[e];else if(s=t[e],null==s)throw new zr(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const a=e;if(null==a.className||null==a.config)throw new zr(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,u;if(i in n?[o,u]=n[i]:i in Yr?[o,u]=Yr.className:i in t&&([o,u]=t[i]),null==o)throw new zr(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const n of Object.keys(Yr))e[n]=Yr[n];for(const s of Object.keys(n))e[s]=n[s];a.config.customObjects=e;const t=Object.assign({},Yr);for(const s of Object.keys(n))Yr[s]=n[s];Zr(a.config);const r=u(o,a.config,n,s);return Yr=Object.assign({},t),r}{const e=Object.assign({},Yr);for(const r of Object.keys(n))Yr[r]=n[r];const t=new o(a.config);return Yr=Object.assign({},e),t}}}function es(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function ts(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function ns(e){if(null==e)throw new zr(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function rs(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new zr(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function ss(e,t,n=0,r=1/0){return Gr(n>=0),Gr(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function as(e,t){Array.isArray(e)?(I.D5U.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>as(e,`element ${n+1} of ${t}`)))):I.D5U.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${is(e)}.`))}function is(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>is(e))).join(",")+"]":"string"===typeof e?`"${e}"`:`${e}`}function os(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let us=0;function ls(){return us++}const cs={};function hs(e=""){return e in cs||(cs[e]=0),cs[e]+=1,e+cs[e].toString()}const ps=["channelsFirst","channelsLast"],ds=["nearest","bilinear"],fs=["valid","same","causal"],ms=["max","avg"],gs=["sum","mul","concat","ave"],ys=new Map;function bs(e){rs(ps,"DataFormat",e)}function xs(e){rs(fs,"PaddingMode",e)}function ws(e){rs(ms,"PoolMode",e)}const vs=[],ks="/";function Is(e,t){vs.push(e);try{const e=t();return vs.pop(),e}catch(n){throw vs.pop(),n}}function Ss(e){if(!Cs(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===vs.length?"":vs.join(ks)+ks)+e}function Ns(e){if(!Cs(e))throw new Error("Not a valid tensor name: '"+e+"'");ys.has(e)||ys.set(e,0);const t=ys.get(e);if(ys.set(e,ys.get(e)+1),t>0){const n=`${e}_${t}`;return ys.set(n,1),n}return e}const Ts=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Cs(e){return!!e.match(Ts)}function $s(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function Es(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function As(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function _s(e,t){if(t<e)throw new zr(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}let Ds;function Rs(){return null==Ds&&(Ds=(0,I.y3$)().epsilon()),Ds}function Os(e,t){return I.pju(e,t)}function Fs(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),I.XLQ(e,n)}function Ms(e,t,n){return(0,I.lub)((()=>{switch(e.rank){case 1:return I.jZU(e,t,n);case 2:return I.SmN(e,[t,0],[n,e.shape[1]]);case 3:return I.CnO(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return I.p0P(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return I.tPi(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return I.tPi(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new zr(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Bs(e,t,n){return(0,I.lub)((()=>{switch(e.rank){case 1:return I.jZU(e,t,n);case 2:return I.SmN(e,[0,t],[e.shape[0],n]);case 3:return I.CnO(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return I.p0P(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new zr(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Ls(e,t,n,r){return(0,I.lub)((()=>{switch(e.rank){case 1:return I.jZU(e,t,n);case 2:switch(r){case 1:return Ms(e,t,n);case 2:return Bs(e,t,n);default:throw new zr(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Ms(e,t,n);case 2:return I.CnO(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Bs(e,t,n);default:throw new zr(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Ms(e,t,n);case 2:return I.p0P(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return I.p0P(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Bs(e,t,n);default:throw new zr(`The axis is not within the rank of the tensor ${r}`)}default:throw new zr(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function zs(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),I.zoF(e,t)}function Us(e,t){switch(e.rank){case 1:return I.gME([e,t]);case 2:return I.Izb([e,t],0);case 3:return I.MNy([e,t],0);case 4:return I.ZaL([e,t],0);default:throw new zr(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Ps(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new zr(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return I.Gg6(e,t)}function Vs(e,t=0,n=1,r,s){return I.nGf(e,t,n,r,s)}function Ws(e,t,n,r){if(e.rank<2||t.rank<2)throw new Ur(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Ur(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){return I.imm.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?js(e.rank,r,"channelsLast"):null,activation:n})}{const s=e.shape.slice(),a=s.pop();e=I.XLQ(e,[-1,a]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=I.XLQ(I.p4s(t,c),[u,-1]);const h=[...s,...l];return I.XLQ(I.imm.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?js(e.rank,r,"channelsLast"):null,activation:n}),h)}}function Gs(e,t,n){return(0,I.lub)((()=>(t=Array.isArray(t)?(0,I.RRF)(t,"int32"):I.pju(t,"int32"),I.Iqj(e,t,n))))}function Hs(e){return I.dC7(e,e)}function js(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new zr(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return I.XLQ(t,1===r.length?[1,r[0],1,1,1]:[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return I.XLQ(t,1===r.length?[1,1,1,1,r[0]]:[1].concat(r))}else if(4===e){if("channelsFirst"===n)return I.XLQ(t,1===r.length?[1,r[0],1,1]:[1,r[2],r[0],r[1]]);if("channelsLast"===n)return I.XLQ(t,1===r.length?[1,1,1,r[0]]:[1].concat(r))}else if(3===e){if("channelsFirst"===n)return I.XLQ(t,1===r.length?[1,r[0],1]:[1,r[1],r[0]]);if("channelsLast"===n)return I.XLQ(t,1===r.length?[1,1,r[0]]:[1].concat(r))}else if(e<3)return t;throw new zr(`Unsupported input rank by biasAdd: ${t.rank}`)}function Xs(e,t,n){return(0,I.lub)((()=>(null==n&&(n="channelsLast"),bs(n),I.IHx(e,js(e.rank,t,n)))))}function qs(e,t,n,r){return(0,I.lub)((()=>I.rvX(e,t,n,r)))}function Ks(e,t,n=!1){return n?e():t()}const Ys=["fanIn","fanOut","fanAvg"],Qs=["normal","uniform","truncatedNormal"];class Zs extends I.m7h.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Js extends Zs{apply(e,t){return(0,I.lls)(e,t)}}Js.className="Zeros",I.m7h.registerClass(Js);class ea extends Zs{apply(e,t){return(0,I.iUs)(e,t)}}ea.className="Ones",I.m7h.registerClass(ea);class ta extends Zs{constructor(e){if(super(),"object"!==typeof e)throw new zr(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new zr(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return(0,I.lub)((()=>(0,I.dC7)((0,I.iD$)(this.value),(0,I.iUs)(e,t))))}getConfig(){return{value:this.value}}}ta.className="Constant",I.m7h.registerClass(ta);class na extends Zs{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return(0,I.LGj)(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}na.className="RandomUniform",I.m7h.registerClass(na);class ra extends Zs{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Ur(`randomNormal does not support dType ${t}.`);return Vs(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ra.className="RandomNormal",I.m7h.registerClass(ra);class sa extends Zs{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Ur(`truncatedNormal does not support dType ${t}.`);return(0,I.Xu6)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}sa.className="TruncatedNormal",I.m7h.registerClass(sa);class aa extends Zs{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return(0,I.lub)((()=>{if(2!==e.length||e[0]!==e[1])throw new zr("Identity matrix initializer can only be used for 2D square matrices.");return(0,I.dC7)(this.gain,(0,I.iyy)(e[0]))}))}getConfig(){return{gain:this.gain}}}aa.className="Identity",I.m7h.registerClass(aa);class ia extends Zs{constructor(e){if(super(),e.scale<0)throw new zr(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,rs(Ys,"FanMode",this.mode),this.distribution=null==e.distribution?"normal":e.distribution,function(e){rs(Qs,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(bs(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=$s(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=$s(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=$s(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if(a/="fanIn"===this.mode?Math.max(1,r):"fanOut"===this.mode?Math.max(1,s):Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Ur(`${this.getClassName()} does not support dType ${t}.`);return(0,I.Xu6)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return(0,I.LGj)(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}ia.className="VarianceScaling",I.m7h.registerClass(ia);class oa extends ia{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ia.className}}oa.className="GlorotUniform",I.m7h.registerClass(oa);class ua extends ia{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ia.className}}ua.className="GlorotNormal",I.m7h.registerClass(ua);class la extends ia{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ia.className}}la.className="HeNormal",I.m7h.registerClass(la);class ca extends ia{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ia.className}}ca.className="HeUniform",I.m7h.registerClass(ca);class ha extends ia{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return ia.className}}ha.className="LeCunNormal",I.m7h.registerClass(ha);class pa extends ia{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return ia.className}}pa.className="LeCunUniform",I.m7h.registerClass(pa);class da extends Zs{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return(0,I.lub)((()=>{if(e.length<2)throw new Ur("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=I.D5U.sizeFromShape(e.slice(0,-1)),r=e[e.length-1],s=n*r;s>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${s}) elements: Slowness may result.`);const a=Vs([Math.max(r,n),Math.min(r,n)],0,1,t,this.seed),i=I.$r2.qr(a,!1);let o=i[0];const u=i[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return o=(0,I.dC7)(o,u.sign()),n<r&&(o=o.transpose()),(0,I.dC7)((0,I.iD$)(this.gain),o.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}da.className="Orthogonal",I.m7h.registerClass(da);const fa={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function ma(e,t={}){return Jr(e,I.m7h.SerializationMap.getMap().classNameMap,t,"initializer")}function ga(e){return Qr(e)}function ya(e){if("string"===typeof e){const t=e in fa?fa[e]:e;if("GlorotNormal"===t)return new ua;if("GlorotUniform"===t)return new oa;if("HeNormal"===t)return new la;if("HeUniform"===t)return new ca;if("LeCunNormal"===t)return new ha;if("LeCunUniform"===t)return new pa;{const e={};return e.className=t,e.config={},ma(e)}}return e instanceof Zs?e:ma(e)}function ba(e){return Array.isArray(e)&&Array.isArray(e[0])}function xa(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function wa(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new zr(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function va(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new zr(`Expected exactly 1 Shape; got ${e.length}`)}return e}function ka(e){let t=0;for(const n of e)t+=0===n.shape.length?1:n.shape.reduce(((e,t)=>e*t));return t}const Ia="Variable";class Sa{constructor(e,t="float32",n=Ia,r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=ls(),this.originalName=Ss(n=null==n?Ia:n),this.name=Ns(this.originalName),this.trainable_=r,this.constraint=s,this.val=I.VD$(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Na(e){return e.map((e=>e.read()))}function Ta(e){e.forEach((e=>{e[0].write(e[1])}))}class Ca{constructor(e){this.dtype=e.dtype,this.shape=e.shape,this.ndim=null!=e.shape?e.shape.length:e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class $a{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=ls(),null!=a&&(this.originalName=Ss(a),this.name=Ns(this.originalName)),this.rank=t.length}}let Ea=0;class Aa{constructor(e,t){this.callArgs=t,this.id=Ea++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)e.push(null!=t?t.name:null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let _a=0;class Da extends I.m7h.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=_a++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=qr(e)+"_"+hs(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}this.initialWeights=null!=e.weights?e.weights:null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Lr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new zr(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return jr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return jr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Br(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Br(`Layer ${this.name} is not connected, no input to return.`);return jr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Br(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Br(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return jr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Xr(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=Xr(this.inputSpec);if(e.length!==t.length)throw new zr(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new zr(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new zr(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new zr(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new zr(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const e=r.shape;for(const t in s.axes){const r=Number(t),a=s.axes[t];if(null!=a&&-1===[a,null].indexOf(r>=0?e[r]:e[e.length+r]))throw new zr(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],a=r.shape[e];if(null!=t&&null!=a&&t!==a)throw new zr(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Xr(e);let r=!0;for(const a of n)if(!(a instanceof $a)){r=!1;break}let s=!0;for(const a of n)if(a instanceof $a){s=!1;break}if(r===s)throw new zr("Arguments to apply() must be all SymbolicTensors or all Tensors");return Is(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Xr(e))t.push(n.shape);this.build(jr(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);const s=Xr(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=jr(a),null!=this.activityRegularizer)throw new Ur("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=Xr(e);const t=[];for(const n of e)t.push(n.shape);return jr(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new $a(a,n,this,Xr(e),t,this.name,r))):new $a(a,r,this,Xr(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new Ur("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Br(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Br(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Lr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return ka(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Na(e?this.trainableWeights:this.weights)}setWeights(e){(0,I.lub)((()=>{const t=this.weights;if(t.length!==e.length)throw new zr(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Na(t);for(let s=0;s<r.length;++s){const a=r[s],i=t[s],o=e[s];if(!I.D5U.arraysEqual(a.shape,o.shape))throw new zr(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Ta(n)}))}addWeight(e,t,n,r,s,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new zr(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():ya("zeros"));const u=r.apply(t,n),l=new Sa(u,n,e,a,i);return u.dispose(),null!=s&&this.addLoss((()=>s.apply(l.read()))),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Xr(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,s,a,i=null){const o=Xr(e);t=Xr(t),n=Xr(n),r=Xr(r),s=xa(s),a=xa(a);const u=[],l=[],c=[];for(const h of o)u.push(h.sourceLayer),l.push(h.nodeIndex),c.push(h.tensorIndex);new Aa({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Ra(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=Ra(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class Oa extends Da{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:hs("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new zr("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new zr("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new zr("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new $a(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Aa({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new zr(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Oa.className="InputLayer",I.m7h.registerClass(Oa);class Fa{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Fa)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new zr(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return(0,I.pju)(t,e.dtype)}catch(n){throw new zr(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof $a){if(null==this.id2Value[e.id])throw new zr(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new zr(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof $a){if(null==this.id2Value[e.id])throw new zr(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new zr(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&(0,I.B90)(this.id2Mask)}}const Ma=new Vr,Ba=new Vr;function La(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),u=[],l=t.names();for(const f of o)-1!==l.indexOf(f)?u.push(t.getValue(f)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,p=Ma.get(c);if(null==p){const e=function(e,t){I.D5U.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=Ua(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:i}=Ua(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const t in i)null==r[t]&&(r[t]=new Set),i[t].forEach((e=>r[t].add(e)))}}return{sorted:n,recipientCounts:za(r)}}(i,t);p=e.sorted,h=e.recipientCounts,Ma.put(c,p),Ba.put(c,h)}h={},s||Object.assign(h,Ba.get(c));const d=new Fa(t);for(let f=0;f<p.length;++f){if(null!=r){const e=(0,I.sq6)().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const e=p[f],a=e.sourceLayer;if(a instanceof Oa)continue;const i=[],l=[],c=[];let m=!1;for(const n of e.inputs){const e=d.getValue(n),r=d.getMask(n);i.push(e),l.push(r),null!=r&&(m=!0),s||(h[n.name]--,0!==h[n.name]||t.hasKey(n)||-1!==o.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||c.push(e))}m&&((n=n||{}).mask=l[0]);const g=Xr(a.apply(i,n));let y=null;a.supportsMasking&&(y=a.computeMask(i,l));const b=Pa(e),x=Array.isArray(b)?b:[b];for(let t=0;t<x.length;++t){d.hasKey(x[t])||d.add(x[t],g[t],Array.isArray(y)?y[0]:y);const e=o.indexOf(x[t].name);-1!==e&&(u[e]=g[t])}s||(0,I.B90)(c)}return d.disposeMasks(),a?u:u[0]}function za(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Ua(e,t){const n=new Set,r=[],s={};for(const o of t.names())n.add(o);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function Pa(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function Va(e,t){return(0,I.lub)((()=>I._b3(I.Smz(I.dC7(e,e),t,!0))))}(0,I.OBj)().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=Ma&&Ma.setMaxEntries(e),null!=Ba&&Ba.setMaxEntries(e)}));class Wa extends I.m7h.Serializable{getConfig(){return{}}}class Ga extends Wa{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,I.lub)((()=>{const t=Va(e,this.axis),n=I.iUl(t,0,this.maxValue);return I.dC7(e,I.hiC(n,I.IHx(Rs(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Ga.className="MaxNorm",I.m7h.registerClass(Ga);class Ha extends Wa{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,I.lub)((()=>I.hiC(e,I.IHx(Rs(),Va(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Ha.className="UnitNorm",I.m7h.registerClass(Ha);class ja extends Wa{apply(e){return I.UYe(e)}}ja.className="NonNeg",I.m7h.registerClass(ja);class Xa extends Wa{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,I.lub)((()=>{const t=Va(e,this.axis),n=I.IHx(I.dC7(this.rate,I.iUl(t,this.minValue,this.maxValue)),I.dC7(1-this.rate,t));return I.dC7(e,I.hiC(n,I.IHx(Rs(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Xa.className="MinMaxNorm",I.m7h.registerClass(Xa);const qa={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ka(e){return Qr(e)}function Ya(e,t={}){return Jr(e,I.m7h.SerializationMap.getMap().classNameMap,t,"constraint")}function Qa(e){if(null==e)return null;if("string"===typeof e){return Ya({className:e in qa?qa[e]:e,config:{}})}return e instanceof Wa?e:Ya(e)}async function Za(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!==typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];(0,I.B90)(r)}}function Ja(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}var ei;(function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"})(ei||(ei={}));class ti{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class ni{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class ri extends ti{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const r in t){const e=t[r];if("number"===typeof e)this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+e*n;else{let t;r in this.totals?t=this.totals[r]:this.totals[r]=0;const s=(0,I.lub)((()=>(0,I.IHx)(this.totals[r],(0,I.dC7)(e,n))));this.totals[r]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:(0,I.lub)((()=>{const e=(0,I.dC7)((0,I.hiC)(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),(0,I.CnY)(t[n])})))}}class si extends ti{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!==typeof r[a]){e.push(r[a].data()),t.push(s),n.push(a)}}const r=await Promise.all(e);for(let s=0;s<r.length;++s){this.history[t[s]][n[s]].dispose(),this.history[t[s]][n[s]]=r[s][0]}}}class ai extends ti{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||I.glt,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");I.D5U.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,s=null!=n?n():I.D5U.now();return(...a)=>{const i=null!=n?n():I.D5U.now();return i-s<t||(s=i,r=e(...a)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Za(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Za(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Za(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Za(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Za(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):I.D5U.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Za(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Za(e),await this.trainEnd(e))}}function ii(e,t){if(null==e&&(e={}),e instanceof ti)return[e];if(Array.isArray(e)&&e[0]instanceof ti)return e;return Xr(e).map((e=>new ai(e,t)))}class oi{constructor(){}static registerCallbackConstructor(e,t){I.D5U.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),oi.checkForDuplicate(t),null==oi.constructors[e]&&(oi.constructors[e]=[]),oi.constructors[e].push(t)}static checkForDuplicate(e){for(const t in oi.constructors){oi.constructors[+t].forEach((t=>{if(t===e)throw new zr("Duplicate callback constructor.")}))}}static clear(){oi.constructors={}}static createCallbacks(e){const t=[];for(const n in oi.constructors){const r=+n;e>=r&&t.push(...oi.constructors[r])}return t.map((e=>new e))}}function ui(e,t,n,r,s,a,i,o,u){const l=new si,c=[new ri,...oi.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new ni(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}function li(e,t={},n=!1){return Jr(e,I.m7h.SerializationMap.getMap().classNameMap,t,"layer",n)}function ci(e,t){return(0,I.lub)((()=>{"float32"!==e.dtype&&(e=I.pju(e,"float32"));const n=I.Smz(Hs(e),t,!0),r=I.hlL(n.shape,Rs()),s=I._b3(I.gWQ(n,r));return I.hiC(e,s)}))}function hi(e,t){return(0,I.lub)((()=>I.J69(Hs(I.luU(t,e)),-1)))}function pi(e,t){return(0,I.lub)((()=>I.J69(I.WnP(I.luU(t,e)),-1)))}function di(e,t){return(0,I.lub)((()=>{const n=I.luU(e,t),r=I.iUl(I.WnP(e),Rs(),Number.MAX_VALUE),s=I.WnP(I.hiC(n,r));return I.dC7(100,I.J69(s,-1))}))}function fi(e,t){return(0,I.lub)((()=>{const n=I.iUl(t,Rs(),Number.MAX_VALUE),r=I.cM7(I.IHx(1,n)),s=I.iUl(e,Rs(),Number.MAX_VALUE),a=I.cM7(I.IHx(1,s));return I.J69(Hs(I.luU(r,a)),-1)}))}function mi(e,t,n=!1){return(0,I.lub)((()=>{if(n)t=I.XAC(t);else{const e=I.Smz(t,t.shape.length-1,!0);t=I.hiC(t,e)}return t=I.iUl(t,Rs(),1-Rs()),I.W76(I.Smz(I.dC7(I.pju(e,"float32"),I.cM7(t)),t.shape.length-1))}))}function gi(e,t,n=!1){return(0,I.lub)((()=>{const r=I.pju(I.GWj(function(e){const t=[$s(e.shape)];return I.XLQ(e,t)}(e)),"int32"),s=(t=I.iUl(t,Rs(),1-Rs())).shape;return mi(I.XLQ(I.lfX(r,s[s.length-1]),s),t,n)}))}function yi(e,t){return(0,I.lub)((()=>{let n;return n=I.iUl(t,Rs(),1-Rs()),n=I.cM7(I.hiC(n,I.luU(1,n))),I.J69(function(e,t){if(!I.D5U.arraysEqual(e.shape,t.shape))throw new zr(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return(0,I.lub)((()=>{const n=I.UYe(t),r=I.W76(I.WnP(t));return I.IHx(I.luU(n,I.dC7(t,e)),I.Krr(I.Qqt(r)))}))}(e,n),-1)}))}function bi(e,t){return(0,I.lub)((()=>{const n=I.iUl(e,Rs(),1),r=I.iUl(t,Rs(),1);return I.Smz(I.dC7(e,I.cM7(I.hiC(n,r))),-1)}))}function xi(e,t){return(0,I.lub)((()=>{const n=ci(e,-1),r=ci(t,-1),s=I.dC7(n,r);return I.W76(I.Smz(s,-1))}))}oi.constructors={};const wi={meanSquaredError:hi,meanAbsoluteError:pi,meanAbsolutePercentageError:di,meanSquaredLogarithmicError:fi,squaredHinge:function(e,t){return(0,I.lub)((()=>{const n=I.gWQ(0,I.luU(1,I.dC7(e,t)));return I.J69(Hs(n),-1)}))},hinge:function(e,t){return(0,I.lub)((()=>{const n=I.gWQ(0,I.luU(1,I.dC7(e,t)));return I.J69(n,-1)}))},categoricalHinge:function(e,t){return(0,I.lub)((()=>{const n=I.Smz(I.dC7(e,t),-1),r=I.Fp7(I.dC7(I.luU(1,e),t),-1);return I.gWQ(0,I.IHx(1,I.luU(r,n)))}))},logcosh:function(e,t){return(0,I.lub)((()=>{const n=Math.log(2),r=I.luU(t,e),s=I.luU(I.IHx(r,I.Wvh(I.dC7(-2,r))),n);return I.J69(s,-1)}))},categoricalCrossentropy:mi,sparseCategoricalCrossentropy:gi,binaryCrossentropy:yi,kullbackLeiblerDivergence:bi,poisson:function(e,t){return(0,I.lub)((()=>{const n=I.cM7(I.IHx(Rs(),t));return I.J69(I.luU(t,I.dC7(e,n)),-1)}))},cosineProximity:xi};function vi(e){if("string"===typeof e){if(e in wi)return wi[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new zr(t)}return e}function ki(e,t){return(0,I.lub)((()=>{const n=I.dC7(.5,I.JpU(t)),r=Os(I.pjt(t,n),e.dtype);return I.J69(I.DgJ(e,r),-1)}))}function Ii(e,t){return(0,I.lub)((()=>Os(I.DgJ(I.NqF(e,-1),I.NqF(t,-1)),"float32")))}function Si(e,t){return(0,I.lub)((()=>I.pju(I.Smz(I.HvI(I.DgJ(e,1),I.DgJ(t,1))),"float32")))}function Ni(e,t){return yi(e,t)}function Ti(e,t){return e.rank===t.rank&&(e=I.L9e(e,[e.rank-1])),(t=I.NqF(t,-1)).dtype!==e.dtype&&(t=I.pju(t,e.dtype)),I.pju(I.DgJ(e,t),"float32")}const Ci=mi,$i=gi,Ei={binaryAccuracy:ki,categoricalAccuracy:Ii,precision:function(e,t){return(0,I.lub)((()=>{const n=Si(e,t),r=function(e,t){return(0,I.lub)((()=>I.pju(I.Smz(I.HvI(I.DgJ(e,0),I.DgJ(t,1))),"float32")))}(e,t),s=I.IHx(n,r);return I.pju(I.arb(I.pjt(s,0),I.hiC(n,s),0),"float32")}))},categoricalCrossentropy:Ci,sparseCategoricalCrossentropy:$i,mse:hi,MSE:hi,mae:pi,MAE:pi,mape:di,MAPE:di,cosine:xi};function Ai(e){if("string"===typeof e&&e in Ei)return Ei[e];if("string"!==typeof e&&null!=e)return e;throw new zr(`Unknown metric ${e}`)}function _i(e){if(Gr(null!==e,`Unknown LossOrMetricFn ${e}`),"string"===typeof e)return e;{let t;for(const n of Object.keys(wi))if(wi[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Ei))if(Ei[n]===e){t=n;break}return void 0!==t?t:e.name}}const Di=1048576;function Ri(e,t,n=!1){if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Oi(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>Di&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Oi(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!Oi(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Oi(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Fi(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const s in e.nodesByDepth)n.push(e.nodesByDepth[s]);for(const s of n){if(s.length>1||1===s.length&&s[0].inboundLayers.length>1){t=!1;break}r.push(...s)}if(t)for(const s of e.layers){let e=!1;for(const n of s.inboundNodes)if(-1!==r.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),Mi(a,n,r),r("=".repeat(t));const o=e.layers;for(let c=0;c<o.length;++c)s?Bi(o[c],n,r):Li(o[c],n,i,r),r((c===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;t=ka(null!=e.collectedTrainableWeights?e.collectedTrainableWeights:e.trainableWeights);return t}(e),l=ka(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}function Mi(e,t,n=console.log){let r="";for(let s=0;s<e.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=e[s],r=r.slice(0,t[s]),r+=" ".repeat(t[s]-r.length);n(r)}function Bi(e,t,n){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(a){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(a){r="multiple"}Mi([`${e.name} (${e.getClassName()})`,s,r,e.countParams().toString()],t,n)}function Li(e,t,n,r){let s,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(c){a="multiple"}try{s=JSON.stringify(e.outputShape)}catch(c){s="multiple"}const i=[];for(const h of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(h)))for(let e=0;e<h.inboundLayers.length;++e){i.push(`${h.inboundLayers[e].name}[${h.nodeIndices[e]}][${h.tensorIndices[e]}]`)}const o=e.name,u=e.getClassName(),l=0===i.length?"":i[0];Mi([`${o} (${u})`,a,s,e.countParams().toString(),l],t,r);for(let h=1;h<i.length;++h)Mi(["","","","",i[h]],t,r)}function zi(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function Ui(e,t){if(null===e)return null;if("string"===typeof e)return Kr(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];zi(t,s,r)?n.push(r):n.push(Ui(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"===typeof r)t[n]=r;else{const e=Kr(n);t[e]=Ui(r,e)}}return t}}function Pi(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return qr(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];zi(t,s,r)?n.push(r):n.push(Pi(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n],s=qr(n);t[s]="name"!==n&&"className"!==n||"string"!==typeof r?Pi(r,n):r}return t}}const Vi="4.10.0";class Wi extends Da{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=hs(e)}if(this.supportsMasking=!1,this.trainable_=!0,this.inputs=Array.isArray(e.inputs)?e.inputs.slice():[e.inputs],this.outputs=Array.isArray(e.outputs)?e.outputs.slice():[e.outputs],ts(this.inputs).length!==this.inputs.length)throw new zr(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);ts(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.nodeIndex,t=y.tensorIndex;this.outputLayers.push(y.sourceLayer),this.outputLayersNodeIndices.push(e),this.outputLayersTensorIndices.push(t)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;Gr(0===t,"input layer has >1 nodes"),Gr(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof Oa))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,u)=>{null!=r&&null!=s&&null!=u||(r=e.sourceLayer,s=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[s];if(-1!==n.indexOf(l))throw new Lr(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(Wi.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let a=0;a<c;a++){o(l.inputTensors[a],t,n,l.inboundLayers[a],l.nodeIndices[a],l.tensorIndices[a])}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const y of this.outputs)o(y,u,l);const c=i.slice().reverse();for(const y of c){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];e=Math.max(e,null==r[y.outboundLayer.id]?0:r[y.outboundLayer.id]),r[y.outboundLayer.id]=e,s[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let r=0;r<y.inboundLayers.length;r++){const s=y.inboundLayers[r].inboundNodes[y.nodeIndices[r]];t[s.id]=Math.max(e+1,null==t[s.id]?0:t[s.id]),n[s.id]=s}}const h={};for(const y in t){const e=t[y];e in h||(h[e]=[]),h[e].push(n[y])}const p={};for(const y in r){const e=r[y];e in p||(p[e]=[]),p[e].push(s[y])}let d=Object.keys(p).map((e=>parseInt(e,10))).sort(es);this.layers=[];for(const y of d){const e=p[y];e.sort(((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0}));for(const t of e)t instanceof Wi&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=p,d=Object.keys(h).map((e=>parseInt(e,10))).sort(es);const f=this.inputs.slice(),m=[];for(const y of d)for(const e of h[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new Lr(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${m}`);for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const y of g){const e=g.filter((e=>e===y)).length;if(1!==e)throw new Lr(`The name "${y}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Aa({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new zr("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;const s=Object.keys(e)[0].split("/"),a=!isNaN(parseInt(s[s.length-1],10));for(const o of this.layers)for(const[e,t]of o.weights.entries()){const s=a?`${t.name.split("/").slice(0,-1).join("/")+"/"}${e}`:t.originalName;if(null!=n[s])throw new zr(`Duplicate weight name: ${s}`);n[s]=t,r++}const i=[];for(const o in e){let r=o;if(null==n[o]){const e=o.split("/");r=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[r])i.push([n[r],e[o]]);else if(t)throw new zr(`Provided weight data has no target variable: ${o}`);delete n[r]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new zr(`${e.length} of ${r} weights are not set: ${e}`)}Ta(i)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Vi}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Pi(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return(0,I.lub)((()=>{e=Xr(e);const n=new Fa;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return La(this.outputs,n,t)}))}computeMask(e,t){return(0,I.lub)((()=>{let n;return e=Xr(e),n=null==t?Wr(null,e.length):Xr(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=xa(e);if(t.length!==this.inputLayers.length)throw new zr(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let i=0;i<t.length;i++){n[this.inputLayers[i].name+"_0_0"]=t[i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(es);if(r.length>1)for(const i of r){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const r=[];for(let i=0;i<t.inboundLayers.length;i++){r.push(n[`${t.inboundLayers[i].name}_${t.nodeIndices[i]}_${t.tensorIndices[i]}`])}const s=xa(e.computeOutputShape(jr(r))),a=e.inboundNodes.indexOf(t);for(let t=0;t<s.length;t++){n[`${e.name}_${a}_${t}`]=s[t]}}}const s=[],a=[];for(let i=0;i<this.outputLayers.length;i++){a.push(`${this.outputLayers[i].name}_${this.outputLayersNodeIndices[i]}_${this.outputLayersTensorIndices[i]}`)}for(let i=0;i<a.length;i++){const e=a[i];Gr(e in n),s.push(n[e])}return jr(s)}runInternalGraph(e,t){null==t&&(t=Wr(null,e.length));const n={};for(let o=0;o<this.inputs.length;++o){n[this.inputs[o].id]=[e[o],t[o]]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(es);for(const o of r){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer,r=t.inputTensors,s=t.outputTensors,a=new Array;for(const t of r)t.id in n&&a.push(n[t.id]);if(a.length===r.length){let r,i,o,u,l={};if(null!=t.callArgs&&(l=t.callArgs),1===a.length){const[t,n]=a[0];null==l.mask&&(l.mask=n),o=Xr(e.call(t,l)),u=Xr(e.computeMask(t,n)),r=[t],i=[n]}else r=a.map((e=>e[0])),i=a.map((e=>e[1])),null==l.mask&&(l.mask=i),o=Xr(e.call(r,l)),u=Xr(e.computeMask(r,i));if(e.activityRegularizer)throw new Ur("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){n[s[e].id]=[o[e],u[e]]}}}}const s=[],a=[],i=[];for(const o of this.outputs){Gr(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[e,t]=n[o.id];i.push(e.shape),s.push(e),a.push(t)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const r of this.layers){n=r instanceof Wi?1:0;for(let e=0;e<r.inboundNodes.length;e++){const s=Wi.nodeKey(r,e);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new zr("Provide either a layer name or layer index");if("number"===typeof e)return this.findLayer(e);for(const n of this.layers)if(n.name===e)return n;throw new zr(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new zr(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return(0,I.lub)((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Wi.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const i of this.layers){const e=i.getClassName(),r=i.getConfig(),s=[];for(let n=0;n<i.inboundNodes.length;n++){const e=i.inboundNodes[n],r=Wi.nodeKey(i,n);let o={};if(this.containerNodes.has(r)){if(e.callArgs)try{JSON.stringify(e.callArgs),o=e.callArgs}catch(a){console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${e.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),o={}}if(e.inboundLayers.length>0){const n=[];for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],a=e.tensorIndices[r];let i=t[Wi.nodeKey(s,e.nodeIndices[r])];null==i&&(i=0),n.push([s.name,i,a,o])}s.push(n)}}}const o={};o.name=i.name,o.className=e,o.config=r,o.inboundNodes=s,n.push(o)}e.layers=n;const r=[];for(let i=0;i<this.inputLayers.length;i++){const e=this.inputLayers[i],n=Wi.nodeKey(e,this.inputLayersNodeIndices[i]);if(!this.containerNodes.has(n))continue;let s=t[n];null!==s&&void 0!==s||(s=0);r.push([e.name,s,this.inputLayersTensorIndices[i]])}e.inputLayers=r;const s=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],n=Wi.nodeKey(e,this.outputLayersNodeIndices[i]);if(!this.containerNodes.has(n))continue;let r=t[n];null!==r&&void 0!==r||(r=0);s.push([e.name,r,this.outputLayersTensorIndices[i]])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let r;for(const a of t){const o=a[0],u=a[1],l=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(e,t);const c=s[o];if(c.inboundNodes.length<=u)return void i(e,t);n.push(c.inboundNodes[u].outputTensors[l])}n.length>0&&e.apply(jr(n),r)}function u(e){const n=e.name,a=li(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new zr(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const l=t.name,c=t.layers;for(const m of c)u(m);for(;!ns(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],p=[],d=t.inputLayers;for(const m of d){const e=m[0],t=m[1],n=m[2];Gr(e in s);h.push(s[e].inboundNodes[t].outputTensors[n])}const f=t.outputLayers;for(const m of f){const e=m[0],t=m[1],n=m[2];Gr(e in s);p.push(s[e].inboundNodes[t].outputTensors[n])}return new e({inputs:h,outputs:p,name:l})}get stateful(){if(this._stateful)throw new zr("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){(0,I.lub)((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Gi(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{n.push(t in e?e[t]:null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function Hi(e,t){return Gi(e,t,"classWeight")}async function ji(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=(0,I.lub)((()=>{if(1===e.shape.length)return(0,I.d9v)(e);if(2===e.shape.length){if(e.shape[1]>1){return(0,I.NqF)(e,1)}if(1===e.shape[1])return(0,I.XLQ)(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());(0,I.B90)(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),(0,I.RRF)(s,"float32")}return null}function Xi(e,t){return(0,I.dC7)(e,t)}function qi(e,t){let n,r;n=t.xs,r=t.ys,I.D5U.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const s=Ki("input",e.inputNames,n),a=Ki("output",e.outputNames,r),i=s[0].shape[0];I.D5U.assert(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),I.D5U.assert(a.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let o=0;o<s.length;o++)I.D5U.assert(s[o].shape[0]===i,(()=>`Batch size mismatch: input ${e.inputNames[o]} has ${s[o].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`));for(let o=0;o<a.length;o++)I.D5U.assert(a[o].shape[0]===i,(()=>`Batch size mismatch: output ${e.outputNames[o]} has ${a[o].shape[0]}; expected  ${i} based on input ${e.inputNames[0]}.`));return{xs:s,ys:a}}function Ki(e,t,n){if(n instanceof I.esB)return[n];if(Array.isArray(n))return I.D5U.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new zr(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}async function Yi(e,t,n){const r=null!=n.batchesPerEpoch;if(I.D5U.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),I.D5U.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),I.D5U.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),I.D5U.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),I.D5U.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(Qi(n.validationData))I.D5U.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Ur("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=s?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=ii(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:d}=ui(c,h,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,s,l);p.setModel(e),e.history=d,await p.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await p.onEpochBegin(f);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=qi(e,t.value),a={};a.batch=h,a.size=r[0].shape[0],await p.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=Hi(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await ji(s[e],null,t[e]))}const l=r.concat(s).concat(i),d=o(l);I.B90(l);for(let e=0;e<u.length;++e){const t=d[e];a[u[e]]=t,I.CnY(t)}await p.onBatchEnd(h,a),Ja(a),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=Qi(n.validationData)?Xr(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Xr(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,l),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function Qi(e){return"function"===typeof e.iterator}function Zi(e){I.D5U.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Ji(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Ms(e,t,n-t))):Ms(e,t,n-t)}function eo(e,t){return I.lub((()=>null==e?null:Array.isArray(e)?e.map((e=>eo(e,t))):Gs(e,"int32"===t.dtype?t:I.pju(t,"int32"))))}function to(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function no(e){const t=[];e instanceof I.esB&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(Fs(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function ro(e,t){if(null==e)return;const n=[];if(t instanceof I.esB)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const s in t){n.push(t[s].id)}const r=[];if(e instanceof I.esB)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const s in e){const t=e[s];-1===n.indexOf(t.id)&&r.push(t)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function so(e){return Array.isArray(e)}function ao(e){return!function(e){return e instanceof I.esB}(e)&&!so(e)}function io(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(so(e)&&e.length>0)t=!0;else if(ao(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new zr(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(ao(e)){a=[];for(const n of t){if(null==e[n])throw new zr(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(so(e)){if(e.length!==t.length)throw new zr(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new zr(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=no(a),null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=a[i];if(e.shape.length!==n[i].length)throw new zr(`Error when checking ${s}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${e.shape}`);for(let t=0;t<n[i].length;++t){if(0===t&&!r)continue;const a=n[i][t];if(null!=a&&a>=0&&e.shape[t]!==a)throw new zr(`${s} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${s} received an input with ${e.shape[0]} examples, each with shape [${e.shape.slice(1,e.shape.length)}] (tensor shape [${e.shape}])`)}}return a}function oo(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new zr(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new zr(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let i=0;i<t.length;++i){if(null==n[i])continue;const e=a[i];if(e.shape.length!==n[i].length)throw new zr(`Error when checking ${s}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let a=0;a<n[i].length;++a){if(0===a&&!r)continue;const o=n[i][a];if(null!=o&&o!==e.shape[a])throw new zr(`Error when checking ${s}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}class uo extends Wi{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new zr("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Fi(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>I.p_j.adagrad(.01),Adadelta:()=>I.p_j.adadelta(1,.95,Rs()),Adam:()=>I.p_j.adam(.001,.9,.999,Rs()),Adamax:()=>I.p_j.adamax(.002,.9,.999,Rs(),0),RMSProp:()=>I.p_j.rmsprop(.001,.9,0,Rs()),SGD:()=>I.p_j.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new zr(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof I.gaJ))throw new zr("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new zr(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map((e=>vi(e)))}else{const n=vi(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new zr(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(vi(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const e=this.internalOutputShapes[a];this.feedOutputNames.push(this.outputNames[a]),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[a])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Is("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;this.outputs.length>1&&(this.metricsTensors.push([this.lossFunctions[e],e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Is("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,a;for(const i of t){if("string"===typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===yi?-1!==["accuracy","acc"].indexOf(i)?r=ki:-1!==["crossentropy","ce"].indexOf(i)&&(r=Ni):this.lossFunctions[e]===gi?-1!==["accuracy","acc"].indexOf(i)?r=Ti:-1!==["crossentropy","ce"].indexOf(i)&&(r=$i):-1!==["accuracy","acc"].indexOf(i)?r=Ii:-1!==["crossentropy","ce"].indexOf(i)&&(r=Ci),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=Ai(i);a=e,n=""+_i(i)}let t;Is(n,(()=>{t=a})),s(e,n,t)}})(r[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Zi(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const e=s[0].concat(s[1]);this.makeTestFunction();return jr(this.testLoop(this.testFunction,e,r,n.verbose,n.steps))}finally{ro(s[0],e),ro(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new Ur("Verbose mode is not implemented yet.");I.D5U.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"===typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(a=I.lub((()=>{if(t.value){const{xs:n,ys:r}=qi(e,t.value),i=n.concat(r),l=I.lub((()=>s(i)));if(I.B90(i),0===u)for(let e=0;e<l.length;++e)a.push((0,I.iD$)(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=a[e];a[e]=I.lub((()=>I.IHx(a[e],I.dC7(c,t)))),u>0&&I.B90(n)}I.B90(l),o+=c,++u}return a})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let l=0;l<a.length;++l){const e=a[l];a[l]=I.hiC(a[l],o),I.B90(e)}return jr(a)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new zr(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new zr(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new zr("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=this.retrieveSymbolicTensors(n?t:[t]),s=new Fa;if(e instanceof I.esB&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new zr(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const i of this.inputs){const t=e[i.name];if(null==t)throw new zr(`No value is provided for the model's input ${i.name}`);s.add(i,t)}const a=La(r,s);return n?a:a[0]}retrieveSymbolicTensors(e){const t=Wr(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((e=>e.name));for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new zr(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return I.lub((()=>{const r=this.checkNumSamples(e);if(n)throw new Ur("Verbose predictLoop() is not implemented yet.");const s=to(r,t),a=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t){I.lub((()=>{const n=Ji(e,s[t][0],s[t][1]),r=[];if(Array.isArray(n))for(let e=0;e<n.length;++e)r.push({key:this.inputs[e],value:n[e]});else r.push({key:this.inputs[0],value:n});const a=new Fa(r);return La(this.outputs,a)})).forEach(((e,t)=>a[t].push(e)))}return jr(a.map((e=>I.zoF(e,0))))}))}predict(e,t={}){const n=no(e);oo(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return Zi(e),this.predictLoop(n,e)}finally{ro(n,e)}}predictOnBatch(e){oo(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new Lr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let a=0;a<this.feedOutputShapes.length;++a){const e=this.feedOutputShapes[a];s.push(this.feedLossFns[a]===gi?e.slice(0,e.length-1).concat([1]):e)}if(function(e,t,n){const r=ts(e.map((e=>e.shape[0])));r.sort();const s=ts(t.map((e=>e.shape[0])));if(s.sort(),r.length>1)throw new zr(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new zr(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&s.length>0&&!I.D5U.arraysEqual(r,s))throw new zr(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=io(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=io(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[hi,yi,mi];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===mi&&1===a.shape[a.shape.length-1])throw new zr(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=t[n];if(null!=r&&e[n]!==r)throw new zr(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!==0)throw new zr(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=Hi(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await ji(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,s){return I.lub((()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new Ur("Verbose mode is not implemented yet.");if(null!=s)throw new Ur("steps mode in testLoop() is not implemented yet");{const r=to(a,n),s=(0,I.RRF)(_s(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],u=Ms(s,a,o-a),l=eo(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push((0,I.iD$)(0));for(let e=0;e<c.length;++e){i[e]=I.IHx(i[e],I.dC7(o-a,c[e]))}}for(let e=0;e<i.length;++e)i[e]=I.hiC(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;if(Hr(e,r)>1){s+=`_${Hr(e.slice(0,n),r)}`}t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Fa(e),o=La(this.outputs,i,{training:!0});let u;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(r[n],o[n]);null!=s[n]&&(e=Xi(e,s[n]));const a=I.J69(e);t.push(a),u=0===n?e:I.IHx(u,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][1];e=I.J69((0,this.metricsTensors[n][0])(r[t],o[t]))}I.CnY(e),a.push(e)}return u=I.J69(u),this.calculateLosses().forEach((e=>{u=I.IHx(u,e)})),u}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>I.lub((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new Fa(a),o=La(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=I.J69((0,this.lossFunctions[e])(s[e],o[e]));n=0===e?r:I.IHx(n,r),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][1],r=I.J69((0,this.metricsTensors[e][0])(s[n],o[n]));t.push(r)}return t}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,s,a,i,o,u,l,c,h;this.isTraining=!0;try{const p=null==n.batchSize?32:n.batchSize;Zi(p);const d=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,d,p);r=f[0],s=f[1],h=f[2];let m,g=!1;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2!==n.validationData.length)throw 3===n.validationData.length?new Ur("validationData including sample weights is not supported yet."):new zr(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],u=n.validationData[1];const e=!0,t=await this.standardizeUserData(o,u,null,null,e,p);l=t[0],c=t[1],m=l.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;const e=Math.floor(r[0].shape[0]*(1-n.validationSplit)),t=r[0].shape[0];l=Ji(r,e,t),a=r,r=Ji(r,0,e),c=Ji(s,e,t),i=s,s=Ji(s,0,e),m=l.concat(c)}else null!=n.validationSteps&&(g=!0);const y=r.concat(s).concat(h);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let w,v;g?(this.makeTestFunction(),w=this.testFunction,v=x.slice().concat(x.map((e=>"val_"+e)))):(w=null,m=[],v=x.slice());const k=ii(n.callbacks,n.yieldEvery);return await this.fitLoop(b,y,x,p,n.epochs,n.verbose,k,w,m,n.shuffle,v,n.initialEpoch,null,null)}finally{this.isTraining=!1,ro(r,e),ro(s,t),ro(a,e),ro(i,t),ro(l,o),ro(c,u),null!=h&&I.B90(h)}}async fitLoop(e,t,n,r,s,a,i,o,u,l,c,h,p,d){null==r&&(r=32),null==s&&(s=1),null==l&&(l=!0),null==h&&(h=0);let f=!1;if(null!=o&&null!=u&&(f=!0),null!=d&&(f=!0,null==p))throw new zr("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,r,p,"steps_per_epoch");let g;null!=m&&(g=_s(0,m)),null==a&&(a=1);const{callbackList:y,history:b}=ui(i,a,s,h,m,p,r,f,c);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let x=h;x<s;++x){await y.onEpochBegin(x);const s={};if(null!=p)throw new Ur("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new Ur("batch shuffling is not implemneted yet");l&&I.D5U.shuffle(g);const a=(0,I.RRF)(g),i=to(m,r);for(let l=0;l<i.length;++l){const c={};if(await y.onBatchBegin(l,c),I.lub((()=>{const h=i[l][0],p=i[l][1],d=Ms(a,h,p-h);c.batch=l,c.size=p-h;const m=eo(t,d),g=e(m);for(let e=0;e<n.length;++e){const t=g[e];c[n[e]]=t,I.CnY(t)}if(l===i.length-1&&f){const e=this.testLoop(o,u,r);for(let t=0;t<n.length;++t){const r=n[t],a=e[t];I.CnY(a),s["val_"+r]=a}}})),await y.onBatchEnd(l,c),Ja(c),this.stopTraining_)break}a.dispose()}if(await y.onEpochEnd(x,s),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return Yi(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const o of a){const e=await o.data();i.push(e[0])}return I.B90(a),ro(n[0],e),ro(n[1],t),jr(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let a=0;a<r.length;++a)n&&!r[a].trainable||t.push({name:r[a].originalName,tensor:s[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=I.sq6().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-I.sq6().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=qr(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>qr(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!==typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=qr(n[r])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[qr(_i(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>qr(_i(e))));{const e={};for(const t in this.metrics)e[t]=qr(_i(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=li(Ui(e.optimizer_config));let n,r;if("string"===typeof e.loss)n=Kr(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Kr(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Kr(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>Kr(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=Kr(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"===typeof e){const t=I.io.getSaveHandlers(e);if(0===t.length)throw new zr(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new zr(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new zr("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await I.io.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Vi}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await I.io.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=I.io.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){Ri(this.userDefinedMetadata,this.name,!0),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Ri(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}uo.className="Model",I.m7h.registerClass(uo);class lo extends uo{}lo.className="Functional",I.m7h.registerClass(lo);class co extends uo{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:hs("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new zr(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof co||e instanceof uo;let n;if(t){if(n=e,1!==n.outputs.length)throw new zr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new zr("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new zr("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new zr("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Oa({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new zr(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new zr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Ra(this.outputs[0])}this.inboundNodes=[],new Aa({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Wr(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(va(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new uo({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Lr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Lr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Lr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Lr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new zr("Legacy serialization format not supported yet.");s=t}else I.D5U.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof co))throw new Ur(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const o of s){const e=li(o,void 0,r);r&&e.setFastWeightInitDuringBuild(!0),i.add(e)}return i}set stopTraining(e){if(null==this.model)throw new zr("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new zr("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}co.className="Sequential",I.m7h.registerClass(co);class ho extends I.m7h.Serializable{getConfig(){return{}}}class po extends ho{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Ur(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return I.pyx(e)}(e,t)}}po.className="elu",I.m7h.registerClass(po);class fo extends ho{apply(e){return I.U8D(e)}}fo.className="selu",I.m7h.registerClass(fo);class mo extends ho{apply(e){return I.UYe(e)}}mo.className="relu",I.m7h.registerClass(mo);class go extends ho{apply(e){return(0,I.lub)((()=>I.LTh(6,I.UYe(e))))}}go.className="relu6",I.m7h.registerClass(go);class yo extends ho{apply(e){return e}}yo.className="linear",I.m7h.registerClass(yo);class bo extends ho{apply(e){return I.XD2(e)}}bo.className="sigmoid",I.m7h.registerClass(bo);class xo extends ho{apply(e){return function(e){return(0,I.lub)((()=>{const t=I.IHx(.5,I.dC7(.2,e));return I.iUl(t,0,1)}))}(e)}}xo.className="hardSigmoid",I.m7h.registerClass(xo);class wo extends ho{apply(e){return I.Wvh(e)}}wo.className="softplus",I.m7h.registerClass(wo);class vo extends ho{apply(e){return function(e){return(0,I.lub)((()=>I.hiC(e,I.IHx(I.WnP(e),1))))}(e)}}vo.className="softsign",I.m7h.registerClass(vo);class ko extends ho{apply(e){return I.AEp(e)}}ko.className="tanh",I.m7h.registerClass(ko);class Io extends ho{apply(e,t=-1){return I.XAC(e,t)}}Io.className="softmax",I.m7h.registerClass(Io);class So extends ho{apply(e,t=-1){return I.CmS(e,t)}}So.className="logSoftmax",I.m7h.registerClass(So);class No extends ho{apply(e,t=1){return(0,I.lub)((()=>I.dC7(I.XD2(I.dC7(e,t)),e)))}}No.className="swish",I.m7h.registerClass(No);class To extends ho{apply(e){return(0,I.lub)((()=>I.dC7(e,I.AEp(I.Wvh(e)))))}}function Co(e){return e.getClassName()}function $o(e,t={}){return Jr(e,I.m7h.SerializationMap.getMap().classNameMap,t,"activation")}function Eo(e){if(null==e){const e={className:"linear",config:{}};return $o(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},$o(t)}return e instanceof ho?e:$o(e)}function Ao(e){if(null!=e&&"object"!==typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}To.className="mish",I.m7h.registerClass(To);class _o extends I.m7h.Serializable{}class Do extends _o{constructor(e){super(),Ao(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return(0,I.lub)((()=>{let t=(0,I.lls)([1]);return this.hasL1&&(t=(0,I.IHx)(t,(0,I.Smz)(I.dC7(this.l1,(0,I.WnP)(e))))),this.hasL2&&(t=(0,I.IHx)(t,(0,I.Smz)(I.dC7(this.l2,Hs(e))))),I.XLQ(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Do.className="L1L2",I.m7h.registerClass(Do);const Ro={l1l2:"L1L2"};function Oo(e){return Qr(e)}function Fo(e,t={}){return Jr(e,I.m7h.SerializationMap.getMap().classNameMap,t,"regularizer")}function Mo(e){if(null==e)return null;if("string"===typeof e){return Fo({className:e in Ro?Ro[e]:e,config:{}})}return e instanceof _o?e:Fo(e)}class Bo extends Da{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=wa(e);let n=(0,I.UYe)(e);return null!=this.maxValue&&(n=(0,I.iUl)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Bo.className="ReLU",I.m7h.registerClass(Bo);class Lo extends Da{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=wa(e);return(0,I.hi7)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Lo.className="LeakyReLU",I.m7h.registerClass(Lo);class zo extends Da{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=ya(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Mo(e.alphaRegularizer),this.alphaConstraint=Qa(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new zr(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=va(e)).slice(1);if(null!=this.sharedAxes)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new Ca({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=wa(e),(0,I.AL3)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:ga(this.alphaInitializer),alphaRegularizer:Oo(this.alphaRegularizer),alphaConstraint:Ka(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}zo.className="PReLU",I.m7h.registerClass(zo);class Uo extends Da{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Ur(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=wa(e);return(0,I.pyx)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Uo.className="ELU",I.m7h.registerClass(Uo);class Po extends Da{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=wa(e);return(0,I.dC7)(n,(0,I.pju)((0,I.pjt)(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Po.className="ThresholdedReLU",I.m7h.registerClass(Po);class Vo extends Da{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Io).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=wa(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Wo(e,t,n){if("number"===typeof e)return Wr(e,t);if(e.length!==t)throw new zr(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new zr(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var r}function Go(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function Ho(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+As([n-t,0]);else{if("same"!==r)throw new zr(`Unsupport padding mode: ${r}.`);e*=t}return e}function jo(e,t){return(0,I.lub)((()=>(bs(t),"channelsFirst"===t?I.p4s(e,[0,2,3,1]):e)))}function Xo(e,t){return(0,I.lub)((()=>(bs(t),"channelsFirst"===t?I.p4s(e,[0,2,3,4,1]):e)))}function qo(e,t,n,r=1,s="valid",a,i=1){return(0,I.lub)((()=>{if(null==a&&(a="channelsLast"),bs(a),3!==e.shape.length)throw new zr(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new zr(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new zr(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=I.p4s(e,[0,2,1])),"causal"===s)throw new Ur("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=I.PAt(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=Xs(o,n)),o}))}function Ko(e,t,n,r=[1,1],s="valid",a,i,o=null){return(0,I.lub)((()=>{if(null==a&&(a="channelsLast"),bs(a),3!==e.rank&&4!==e.rank)throw new zr(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new zr(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=jo(e,a);if("causal"===s)throw new Ur("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=I.imm.conv2d({x:u,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(u=I.p4s(u,[0,3,1,2])),u}))}function Yo(e,t,n,r=[1,1,1],s="valid",a,i){return(0,I.lub)((()=>{if(null==a&&(a="channelsLast"),bs(a),4!==e.rank&&5!==e.rank)throw new zr(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new zr(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Xo(e,a);if("causal"===s)throw new Ur("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=I.pdZ(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=Xs(o,n)),"channelsFirst"===a&&(o=I.p4s(o,[0,4,1,2,3])),o}))}Vo.className="Softmax",I.m7h.registerClass(Vo);class Qo extends Da{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Qo.verifyArgs(t),this.rank=e,as(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Ur(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Wo(t.kernelSize,e,"kernelSize"),this.strides=Wo(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,xs(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,bs(this.dataFormat),this.activation=Eo(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=ya(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Qa(t.biasConstraint),this.biasRegularizer=Mo(t.biasRegularizer),this.activityRegularizer=Mo(t.activityRegularizer),this.dilationRate=Wo(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new zr(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new zr(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new zr(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Gr("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!ss(e.kernelSize,"number",1,3))throw new zr(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Co(this.activation),useBias:this.useBias,biasInitializer:ga(this.biasInitializer),biasRegularizer:Oo(this.biasRegularizer),activityRegularizer:Oo(this.activityRegularizer),biasConstraint:Ka(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Zo extends Qo{constructor(e,t){super(e,t),this.kernel=null,Zo.verifyArgs(t),this.filters=t.filters,as(this.filters,"filters"),this.kernelInitializer=ya(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Qa(t.kernelConstraint),this.kernelRegularizer=Mo(t.kernelRegularizer)}build(e){e=va(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new zr(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return(0,I.lub)((()=>{let t;e=wa(e);const n=null==this.bias?null:this.bias.read(),r=os(this.activation.getClassName());if(null!=r&&2===this.rank)t=Ko(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=qo(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Ko(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Ur("convolutions greater than 3D are not implemented yet.");t=Yo(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=va(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let s=0;s<n.length;++s){const e=Go(n[s],this.kernelSize[s],this.padding,this.strides[s],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[s]);t.push(e)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:ga(this.kernelInitializer),kernelRegularizer:Oo(this.kernelRegularizer),kernelConstraint:Ka(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new zr(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Jo extends Zo{constructor(e){super(2,e),Jo.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!ss(e.kernelSize,"number",1,2))throw new zr(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Jo.className="Conv2D",I.m7h.registerClass(Jo);class eu extends Zo{constructor(e){super(3,e),eu.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new zr(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}eu.className="Conv3D",I.m7h.registerClass(eu);class tu extends Jo{constructor(e){if(super(e),this.inputSpec=[new Ca({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new zr(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=va(e)).length)throw new zr("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new zr("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ca({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return I.lub((()=>{let t=wa(e);if(4!==t.shape.length)throw new zr(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape;let r,s;"channelsFirst"===this.dataFormat?(r=2,s=3):(r=1,s=2);const a=n[s],i=this.kernelSize[1],o=this.strides[1],u=[n[0],Ho(n[r],this.strides[0],this.kernelSize[0],this.padding),Ho(a,o,i,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=I.p4s(t,[0,2,3,1]));let l=I.bc(t,this.kernel.read(),u,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(l=I.p4s(l,[0,3,1,2])),null!=this.bias&&(l=Xs(l,this.bias.read(),this.dataFormat)),null!=this.activation&&(l=this.activation.apply(l)),l}))}computeOutputShape(e){const t=(e=va(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=Ho(t[r],o,a,this.padding),t[s]=Ho(t[s],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}tu.className="Conv2DTranspose",I.m7h.registerClass(tu);class nu extends eu{constructor(e){if(super(e),this.inputSpec=[new Ca({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new zr(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=va(e)).length)throw new zr("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new zr("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ca({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return I.lub((()=>{let t=wa(e);if(5!==t.shape.length)throw new zr(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape;let r,s,a;"channelsFirst"===this.dataFormat?(a=2,r=3,s=4):(a=1,r=2,s=3);const i=n[r],o=n[s],u=this.kernelSize[1],l=this.kernelSize[2],c=this.strides[1],h=this.strides[2],p=[n[0],Ho(n[a],this.strides[0],this.kernelSize[0],this.padding),Ho(i,c,u,this.padding),Ho(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=I.p4s(t,[0,2,3,4,1]));let d=I.$QV(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=I.p4s(d,[0,4,1,2,3])),null!==this.bias&&(d=Xs(d,this.bias.read(),this.dataFormat)),null!==this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(e){const t=(e=va(e)).slice();let n,r,s,a;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=Ho(t[r],l,i,this.padding),t[s]=Ho(t[s],c,o,this.padding),t[a]=Ho(t[a],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}nu.className="Conv3DTranspose",I.m7h.registerClass(nu);class ru extends Zo{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new zr("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new zr("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new zr(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=ya(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Mo(t.depthwiseRegularizer),this.depthwiseConstraint=Qa(t.depthwiseConstraint),this.pointwiseInitializer=ya(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Mo(t.pointwiseRegularizer),this.pointwiseConstraint=Qa(t.pointwiseConstraint)}build(e){if((e=va(e)).length<this.rank+2)throw new zr(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new zr(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let i=0;i<this.rank;++i)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):null,this.inputSpec=[new Ca({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return(0,I.lub)((()=>{let t;if(e=wa(e),1===this.rank)throw new Ur("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=I.p4s(e,[0,2,3,1])),t=I.U_I(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Xs(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=I.p4s(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=ga(this.depthwiseInitializer),e.pointwiseInitializer=ga(this.pointwiseInitializer),e.depthwiseRegularizer=Oo(this.depthwiseRegularizer),e.pointwiseRegularizer=Oo(this.pointwiseRegularizer),e.depthwiseConstraint=Ka(this.depthwiseConstraint),e.pointwiseConstraint=Ka(this.pointwiseConstraint),e}}ru.className="SeparableConv";class su extends ru{constructor(e){super(2,e)}}su.className="SeparableConv2D",I.m7h.registerClass(su);class au extends Zo{constructor(e){super(1,e),au.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!ss(e.kernelSize,"number",1,1))throw new zr(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}au.className="Conv1D",I.m7h.registerClass(au);class iu extends Da{constructor(e){super(e),this.cropping="number"===typeof e.cropping?[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return(0,I.lub)((()=>{if(e=wa(e),"channelsLast"===this.dataFormat){const t=Ls(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Ls(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Ls(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Ls(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}iu.className="Cropping2D",I.m7h.registerClass(iu);class ou extends Da{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,bs(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,rs(ds,"InterpolationFormat",this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){return[e[0],e[1],null==e[2]?null:this.size[0]*e[2],null==e[3]?null:this.size[1]*e[3]]}return[e[0],null==e[1]?null:this.size[0]*e[1],null==e[2]?null:this.size[1]*e[2],e[3]]}call(e,t){return I.lub((()=>{let t=wa(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=I.p4s(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?I.image.resizeNearestNeighbor(t,[e,r]):I.image.resizeBilinear(t,[e,r]);return I.p4s(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?I.image.resizeNearestNeighbor(t,[e,r]):I.image.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}ou.className="UpSampling2D",I.m7h.registerClass(ou);class uu extends Qo{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=ya(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Qa(e.depthwiseConstraint),this.depthwiseRegularizer=Mo(e.depthwiseRegularizer)}build(e){if((e=va(e)).length<4)throw new zr(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new zr(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t];this.depthwiseKernel=this.addWeight("depthwise_kernel",[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier],null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return(0,I.lub)((()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return(0,I.lub)((()=>{null==s&&(s="channelsLast"),bs(s);let i=jo(e,s);if(4!==e.rank)throw new zr(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new zr(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=I.B10(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=I.p4s(i,[0,3,1,2])),i}))}(e=wa(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Xs(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=va(e);const t="channelsFirst"===this.dataFormat?e[3]:e[2],n="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Go("channelsFirst"===this.dataFormat?e[2]:e[1],this.kernelSize[0],this.padding,this.strides[0]),s=Go(t,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],n,r,s]:[e[0],r,s,n]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=ga(this.depthwiseInitializer),e.depthwiseRegularizer=Oo(this.depthwiseRegularizer),e.depthwiseConstraint=Ka(this.depthwiseRegularizer),e}}function lu(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new zr("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function cu(e,t,n,r=!1,s,a,i=!1,o=!1){return I.lub((()=>{const u=t.shape.length;if(u<3)throw new zr(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(_s(2,u));if(t=I.p4s(t,l),null!=a)throw new Ur("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=I.pju(I.pju(s,"bool"),"float32")).rank===u-1&&(s=I.dt4(s,-1)),s=I.p4s(s,l)),r&&(t=I.GYS(t,0),null!=s&&(s=I.GYS(s,0)));const c=[];let h,p=n;const d=t.shape[0],f=I.HHK(t);let m,g;null!=s&&(m=I.HHK(s));for(let t=0;t<d;++t){const n=f[t],r=I.lub((()=>e(n,p)));if(null==s)h=r[0],p=r[1];else{const e=I.lub((()=>{const e=m[t],n=I.luU(I.JpU(e),e);return{output:I.IHx(I.dC7(r[0],e),I.dC7(p[0],n)),newStates:p.map(((t,s)=>I.IHx(I.dC7(r[1][s],e),I.dC7(t,n))))}}));h=e.output,p=e.newStates}o&&c.push(h)}if(o){g=I.knu(c,1)}return[h,g,p]}))}uu.className="DepthwiseConv2D",I.m7h.registerClass(uu);class hu extends Da{constructor(e){let t;if(super(e),null==e.cell)throw new zr("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new xu({cells:e.cell}):e.cell,null==t.stateSize)throw new zr("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Ca({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return _s(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){ba(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return I.lub((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Ur("Constants support is not implemented in RNN yet.");ba(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Ca({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!I.D5U.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new zr(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new Ca({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){(0,I.lub)((()=>{if(!this.stateful)throw new Br("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new zr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>I.lls([n,e]))):[I.lls([n,this.cell.stateSize])];else if(null==e)I.B90(this.states_),null!=this.keptStates&&(I.B90(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>I.lls([n,e]))):this.states_[0]=I.lls([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new zr(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):I.B90(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!I.D5U.arraysEqual(r.shape,a))throw new zr(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>I.CnY(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=lu(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Ca({shape:e.shape}));i=i.concat(this.stateSpec)}null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length);if(a[0]instanceof $a){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return(0,I.lub)((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=wa(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new zr(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=cu(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(e){return(0,I.lub)((()=>{let t=I.lls(e.shape);return t=I.Smz(t,[1,2]),t=Fs(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Ps(t,[1,e]):t)):this.cell.stateSize>1?[Ps(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===hu.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const r=li(t.cell,n);return new e(Object.assign(t,{cell:r}))}}hu.className="RNN",I.m7h.registerClass(hu);class pu extends Da{}class du extends pu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,as(this.units,"units"),this.activation=Eo(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ya(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ya(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ya(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Mo(e.kernelRegularizer),this.recurrentRegularizer=Mo(e.recurrentRegularizer),this.biasRegularizer=Mo(e.biasRegularizer),this.kernelConstraint=Qa(e.kernelConstraint),this.recurrentConstraint=Qa(e.recurrentConstraint),this.biasConstraint=Qa(e.biasConstraint),this.dropout=Es([1,As([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Es([1,As([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=va(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return(0,I.lub)((()=>{if(2!==e.length)throw new zr(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=wu({ones:()=>I.JpU(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=wu({ones:()=>I.JpU(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=Ws(null!=a?I.dC7(e,a):e,this.kernel.read()),null!=this.bias&&(s=Xs(s,this.bias.read())),null!=i&&(n=I.dC7(n,i));let o=I.IHx(s,Ws(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Co(this.activation),useBias:this.useBias,kernelInitializer:ga(this.kernelInitializer),recurrentInitializer:ga(this.recurrentInitializer),biasInitializer:ga(this.biasInitializer),kernelRegularizer:Oo(this.kernelRegularizer),recurrentRegularizer:Oo(this.recurrentRegularizer),biasRegularizer:Oo(this.biasRegularizer),activityRegularizer:Oo(this.activityRegularizer),kernelConstraint:Ka(this.kernelConstraint),recurrentConstraint:Ka(this.recurrentConstraint),biasConstraint:Ka(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}du.className="SimpleRNNCell",I.m7h.registerClass(du);class fu extends hu{constructor(e){e.cell=new du(e),super(e)}call(e,t){return(0,I.lub)((()=>{null!=this.cell.dropoutMask&&(I.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(I.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);return super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})}))}static fromConfig(e,t){return new e(t)}}fu.className="SimpleRNN",I.m7h.registerClass(fu);class mu extends pu{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new zr("GRUCell does not support reset_after parameter set to true.");this.units=e.units,as(this.units,"units"),this.activation=Eo(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Eo(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ya(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ya(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ya(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Mo(e.kernelRegularizer),this.recurrentRegularizer=Mo(e.recurrentRegularizer),this.biasRegularizer=Mo(e.biasRegularizer),this.kernelConstraint=Qa(e.kernelConstraint),this.recurrentConstraint=Qa(e.recurrentConstraint),this.biasConstraint=Qa(e.biasConstraint),this.dropout=Es([1,As([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Es([1,As([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=va(e);this.kernel=this.addWeight("kernel",[e[e.length-1],3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return(0,I.lub)((()=>{if(2!==e.length)throw new zr(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=wu({ones:()=>I.JpU(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=wu({ones:()=>I.JpU(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.recurrentDropoutMask;let a,i,o;0<this.dropout&&this.dropout<1&&(e=I.dC7(e,this.dropoutMask[0]));let u=Ws(e,this.kernel.read());this.useBias&&(u=Xs(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=I.dC7(r,s[0]));const l=this.recurrentKernel.read(),[c,h]=I.Vl2(l,[2*this.units,this.units],l.rank-1),p=Ws(r,c),[d,f,m]=I.Vl2(u,3,u.rank-1),[g,y]=I.Vl2(p,2,p.rank-1);a=this.recurrentActivation.apply(I.IHx(d,g)),i=this.recurrentActivation.apply(I.IHx(f,y));const b=Ws(I.dC7(i,r),h);o=this.activation.apply(I.IHx(m,b));const x=I.IHx(I.dC7(a,r),I.dC7(I.IHx(1,I.W76(a)),o));return[x,x]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Co(this.activation),recurrentActivation:Co(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ga(this.kernelInitializer),recurrentInitializer:ga(this.recurrentInitializer),biasInitializer:ga(this.biasInitializer),kernelRegularizer:Oo(this.kernelRegularizer),recurrentRegularizer:Oo(this.recurrentRegularizer),biasRegularizer:Oo(this.biasRegularizer),activityRegularizer:Oo(this.activityRegularizer),kernelConstraint:Ka(this.kernelConstraint),recurrentConstraint:Ka(this.recurrentConstraint),biasConstraint:Ka(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}mu.className="GRUCell",I.m7h.registerClass(mu);class gu extends hu{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new mu(e),super(e)}call(e,t){return(0,I.lub)((()=>{null!=this.cell.dropoutMask&&(I.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(I.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);return super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}gu.className="GRU",I.m7h.registerClass(gu);class yu extends pu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,as(this.units,"units"),this.activation=Eo(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Eo(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ya(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ya(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ya(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Mo(e.kernelRegularizer),this.recurrentRegularizer=Mo(e.recurrentRegularizer),this.biasRegularizer=Mo(e.biasRegularizer),this.kernelConstraint=Qa(e.kernelConstraint),this.recurrentConstraint=Qa(e.recurrentConstraint),this.biasConstraint=Qa(e.biasConstraint),this.dropout=Es([1,As([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Es([1,As([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=va(e);let n;if(this.kernel=this.addWeight("kernel",[e[e.length-1],4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,r=this.units;n=new((t=class extends Zs{apply(t,n){const s=e.apply([r]),a=(new ea).apply([r]),i=e.apply([2*r]);return Us(Us(s,a),i)}}).className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return(0,I.lub)((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new zr(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=wu({ones:()=>I.JpU(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=wu({ones:()=>I.JpU(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.recurrentDropoutMask;let i,o,u,l;0<this.dropout&&this.dropout<1&&(e=I.dC7(e,this.dropoutMask[0]));let c=Ws(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=I.dC7(r,a[0])),c=I.IHx(c,Ws(r,this.recurrentKernel.read())),this.useBias&&(c=Xs(c,this.bias.read()));const[h,p,d,f]=I.Vl2(c,4,c.rank-1);i=this.recurrentActivation.apply(h),o=this.recurrentActivation.apply(p),u=I.IHx(I.dC7(o,s),I.dC7(i,this.activation.apply(d))),l=this.recurrentActivation.apply(f);const m=I.dC7(l,this.activation.apply(u));return[m,m,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Co(this.activation),recurrentActivation:Co(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ga(this.kernelInitializer),recurrentInitializer:ga(this.recurrentInitializer),biasInitializer:ga(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Oo(this.kernelRegularizer),recurrentRegularizer:Oo(this.recurrentRegularizer),biasRegularizer:Oo(this.biasRegularizer),activityRegularizer:Oo(this.activityRegularizer),kernelConstraint:Ka(this.kernelConstraint),recurrentConstraint:Ka(this.recurrentConstraint),biasConstraint:Ka(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}yu.className="LSTMCell",I.m7h.registerClass(yu);class bu extends hu{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new yu(e),super(e)}call(e,t){return(0,I.lub)((()=>{null!=this.cell.dropoutMask&&(I.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(I.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);return super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}bu.className="LSTM",I.m7h.registerClass(bu);class xu extends pu{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return(0,I.lub)((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;ba(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{Is(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){const r=[];for(const s of t.cells)r.push(li(s,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Na(e)}setWeights(e){const t=[];for(const n of this.cells){const r=e.splice(n.weights.length);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}Ta(t)}}function wu(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:a}=e,i=()=>null!=a?a(t(),n):qs(t(),n),o=()=>Ks(i,t,r);if(!s||s<=1)return I.CnY(o().clone());return Array(s).fill(void 0).map(o).map((e=>I.CnY(e.clone())))}xu.className="StackedRNNCells",I.m7h.registerClass(xu);var vu=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n};class ku extends hu{constructor(e){if(e.unroll)throw new Ur("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Ur("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Ca({ndim:5})]}call(e,t){return I.lub((()=>{if(null!=this.cell.dropoutMask&&(I.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(I.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new zr("ConvRNN2D cell does not support constants");return super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return I.lub((()=>{const{stateSize:t}=this.cell,n=this.computeSingleOutputShape(e.shape),r=[n[0],...n.slice(2)],s=I.lls(r);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){I.lub((()=>{if(!this.stateful)throw new Br("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new zr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((()=>I.lls(s))):[I.lls(s)];else if(null==e)I.B90(this.states_),null!=this.keptStates&&(I.B90(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>I.lls(s))):this.states_[0]=I.lls(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new zr(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):I.B90(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!I.D5U.arraysEqual(n.shape,r))throw new zr(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>I.CnY(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?4:3],l=Go(e[o?3:2],r[0],s,a[0],i[0]),c=Go(u,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,l,c]:[l,c,n]]}}ku.className="ConvRNN2D";class Iu extends yu{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,as(this.filters,"filters"),this.kernelSize=Wo(n,2,"kernelSize"),this.kernelSize.forEach((e=>as(e,"kernelSize"))),this.strides=Wo(r||1,2,"strides"),this.strides.forEach((e=>as(e,"strides"))),this.padding=s||"valid",xs(this.padding),this.dataFormat=a||"channelsLast",bs(this.dataFormat),this.dilationRate=Wo(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>as(e,"dilationRate")))}build(e){var t;e=va(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new zr(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=this.kernelSize.concat([e[n],4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends Zs{apply(e,t){return zs([n.apply([r]),I.iUs([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return I.lub((()=>{if(3!==e.length)throw new zr(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=wu({ones:()=>I.JpU(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?I.dC7(t[n],e):e;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=wu({ones:()=>I.JpU(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let d=o(s,p,0),f=o(s,p,1),m=o(s,p,2),g=o(s,p,3);const[y,b,x,w]=I.Vl2(this.kernel.read(),4,3),[v,k,S,N]=this.useBias?I.Vl2(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,v,this.padding),l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,x,S,this.padding),h=this.inputConv(h,w,N,this.padding);const[T,C,$,E]=I.Vl2(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,T),f=this.recurrentConv(f,C),m=this.recurrentConv(m,$),g=this.recurrentConv(g,E);const A=this.recurrentActivation.apply(I.IHx(u,d)),_=this.recurrentActivation.apply(I.IHx(l,f)),D=I.IHx(I.dC7(_,a),I.dC7(A,this.activation.apply(I.IHx(c,m)))),R=I.dC7(this.recurrentActivation.apply(I.IHx(h,g)),this.activation.apply(D));return[R,R,D]}))}getConfig(){const e=super.getConfig(),t=vu(e,["units"]),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},t),n)}inputConv(e,t,n,r){const s=I.Tek(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Xs(s,n,this.dataFormat):s}recurrentConv(e,t){return I.Tek(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Iu.className="ConvLSTM2DCell",I.m7h.registerClass(Iu);class Su extends ku{constructor(e){const t=new Iu(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}Su.className="ConvLSTM2D",I.m7h.registerClass(Su);class Nu extends Da{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(null==this.noiseShape[r]?t[r]:this.noiseShape[r]);return n}call(e,t){return(0,I.lub)((()=>{this.invokeCallHook(e,t);const n=wa(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return Ks((()=>qs(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Nu.className="Dropout",I.m7h.registerClass(Nu);class Tu extends Nu{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Tu.className="SpatialDropout1D",I.m7h.registerClass(Tu);class Cu extends Da{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,as(this.units,"units"),this.activation=Eo(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=ya(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ya(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Qa(e.kernelConstraint),this.biasConstraint=Qa(e.biasConstraint),this.kernelRegularizer=Mo(e.kernelRegularizer),this.biasRegularizer=Mo(e.biasRegularizer),this.activityRegularizer=Mo(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=va(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=va(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return(0,I.lub)((()=>{this.invokeCallHook(e,t);const n=wa(e),r=os(this.activation.getClassName());let s;return null!=r?s=Ws(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=Ws(n,this.kernel.read()),null!=this.bias&&(s=Xs(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:Co(this.activation),useBias:this.useBias,kernelInitializer:ga(this.kernelInitializer),biasInitializer:ga(this.biasInitializer),kernelRegularizer:Oo(this.kernelRegularizer),biasRegularizer:Oo(this.biasRegularizer),activityRegularizer:Oo(this.activityRegularizer),kernelConstraint:Ka(this.kernelConstraint),biasConstraint:Ka(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Cu.className="Dense",I.m7h.registerClass(Cu);class $u extends Da{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=va(e);for(const t of e.slice(1))if(null==t)throw new zr(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],$s(e,1)]}call(e,t){return(0,I.lub)((()=>{this.invokeCallHook(e,t);let n=wa(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=(0,I.p4s)(n,e)}return function(e){if(e.rank<=1)throw new zr(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],$s(e.shape,1)];return I.XLQ(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}$u.className="Flatten",I.m7h.registerClass($u);class Eu extends Da{constructor(e){super(e),this.supportsMasking=!0,this.activation=Eo(e.activation)}call(e,t){return(0,I.lub)((()=>{this.invokeCallHook(e,t);const n=wa(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Co(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Eu.className="Activation",I.m7h.registerClass(Eu);class Au extends Da{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return(0,I.lub)((()=>{return e=wa(e),t=e,n=this.n,(0,I.lub)((()=>{if(2!==t.shape.length)throw new zr(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Ps(Fs(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Au.className="RepeatVector",I.m7h.registerClass(Au);class _u extends Da{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let o=0;o<r.length;++o){const e=r[o];if(this.isUnknown(e)){if(null!==a)throw new zr("Can only specifiy one unknown dimension.");a=o}else s*=e}const i=$s(e);if(null!==a){if(0===s||i%s!==0)throw new zr(n);r[a]=i/s}else if(i!==s)throw new zr(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return(0,I.lub)((()=>{this.invokeCallHook(e,t);const n=wa(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return(0,I.XLQ)(n,s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}_u.className="Reshape",I.m7h.registerClass(_u);class Du extends Da{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=_s(1,e.dims.length+1);if(!I.D5U.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Ca({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=va(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return(0,I.p4s)(wa(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Du.className="Permute",I.m7h.registerClass(Du);class Ru extends Da{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=wa(e);return(0,I.YjB)((0,I.Quu)(n,this.maskValue),-1)}call(e,t){return(0,I.lub)((()=>{this.invokeCallHook(e,t);const n=wa(e),r=(0,I.YjB)((0,I.Quu)(n,this.maskValue),-1,!0);return(0,I.dC7)(n,(0,I.pju)(r,n.dtype))}))}}Ru.className="Masking",I.m7h.registerClass(Ru);class Ou extends Da{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=null==e.inputLength?[t,null]:[t].concat(Xr(e.inputLength))}this.inputDim=e.inputDim,as(this.inputDim,"inputDim"),this.outputDim=e.outputDim,as(this.outputDim,"outputDim"),this.embeddingsInitializer=ya(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Mo(e.embeddingsRegularizer),this.activityRegularizer=Mo(e.activityRegularizer),this.embeddingsConstraint=Qa(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return(0,I.lub)((()=>this.maskZero?(e=wa(e),(0,I.Quu)(e,(0,I.P84)(e))):null))}computeOutputShape(e){if(e=va(e),null==this.inputLength)return[...e,this.outputDim];const t=Xr(this.inputLength);if(t.length!==e.length-1)throw new zr(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new zr(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return(0,I.lub)((()=>{this.invokeCallHook(e,t);let n=wa(e);"int32"!==n.dtype&&(n=Os(n,"int32"));const r=Gs(this.embeddings.read(),(0,I.XLQ)(n,[n.size]));return(0,I.XLQ)(r,va(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:ga(this.embeddingsInitializer),embeddingsRegularizer:Oo(this.embeddingsRegularizer),activityRegularizer:Oo(this.activityRegularizer),embeddingsConstraint:Ka(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Ou.className="Embedding",I.m7h.registerClass(Ou);class Fu extends Da{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Ur}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new zr("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[va(e)]),e.length<2)throw new zr(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const s of e)null!=s&&null!==s[0]&&t.push(s[0]);if(t=ts(t),t.length>1)throw new zr(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let s=1;s<e.length;++s){const t=null==e[s]?null:e[s].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const r=e.map((e=>e.length));this.reshapeRequired=-1!==e.indexOf(null)||1!==ts(r).length}call(e,t){return(0,I.lub)((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=As(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=Fs(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const a of e){const e=a.rank;if(null==e){const e=a.shape,r=e[0],s=e.slice(1).concat([r]);let i=I.XLQ(a,[r].concat($s(e.slice(1))));i=I.p4s(i,[1,0]),i=I.XLQ(i,s),t.push(i),n=!0}else if(e>1){const r=_s(1,e).concat([0]);t.push(I.p4s(a,r)),n=!0}else t.push(a)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=I.XLQ(I.p4s(I.XLQ(r,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(_s(0,s-1));r=I.p4s(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const n=null==e[r]?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const r of e)null!=r&&null!==r[0]&&n.push(r[0]);return n=ts(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return I.lub((()=>{if(null==t)return null;if(!Array.isArray(t))throw new zr("`mask` should be an Array");if(!Array.isArray(e))throw new zr("`inputs` should be an Array");if(t.length!==e.length)throw new zr(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:I.dt4(e,0))))[0];for(let e=1;e<t.length-1;++e)n=I.HvI(n,t[e]);return n}))}}class Mu extends Fu{constructor(e){super(e)}mergeFunction(e){return(0,I.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=I.IHx(t,e[n]);return t}))}}Mu.className="Add",I.m7h.registerClass(Mu);class Bu extends Fu{constructor(e){super(e)}mergeFunction(e){return(0,I.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=I.dC7(t,e[n]);return t}))}}Bu.className="Multiply",I.m7h.registerClass(Bu);class Lu extends Fu{constructor(e){super(e)}mergeFunction(e){return(0,I.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=I.IHx(t,e[n]);return I.dC7(1/e.length,t)}))}}Lu.className="Average",I.m7h.registerClass(Lu);class zu extends Fu{constructor(e){super(e)}mergeFunction(e){return(0,I.lub)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=I.gWQ(t,e[n]);return t}))}}zu.className="Maximum",I.m7h.registerClass(zu);class Uu extends Fu{constructor(e){super(e)}mergeFunction(e){return(0,I.lub)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=I.LTh(t,e[n]);return t}))}}Uu.className="Minimum",I.m7h.registerClass(Uu);class Pu extends Fu{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new zr("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const r of e)if(null!=r){t=!1;break}if(t)return;const n=[];for(let r=0;r<e.length;++r){const t=e[r].slice();t.splice(this.axis,1);let s=!1;for(const e of n)if(I.D5U.arraysEqual(e,t)){s=!0;break}s||n.push(t)}if(n.length>1)throw new zr("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return(0,I.lub)((()=>zs(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new zr("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const s of t.slice(1)){if(null==n[r]||null==s[r]){n[r]=null;break}n[r]+=s[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new zr("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new zr("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new zr(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return I.lub((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let a=0;a<e.length;++a)r.push(null==t[a]?I.pju(I.JpU(e[a]),"bool"):t[a].rank<e[a].rank?I.dt4(t[a],-1):t[a]);const s=I.zoF(r,this.axis);return I.$6P(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Vu(e,t){for(;e<0;)e+=t;return e}Pu.className="Concatenate",I.m7h.registerClass(Pu);class Wu extends Fu{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){I.D5U.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Ur("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new zr(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new zr(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Vu(t,e[n].shape.length))):[Vu(this.axes,n.shape.length),Vu(this.axes,r.shape.length)],this.normalize&&(n=ci(n,t[0]),r=ci(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Ur("batchDot is not implemented for tensors of 4D or higher rank yet");if(I.D5U.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),I.D5U.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Ur("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return I.lub((()=>{let n,i;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=I.XLQ(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=I.XLQ(e,e.shape.concat(t))}else n=0;if(i=2===e.shape.length&&2===t.shape.length?a[0]===a[1]?I.Smz(I.dC7(e,t),a[0]):I.Smz(I.dC7(I.p4s(e,[1,0]),t),a[1]):I.OI3(e,t,a[0]!==e.shape.length-1,a[1]===t.shape.length-1),n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=I.L9e(i,t)}return 1===i.shape.length&&(i=I.dt4(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Vu(this.axes,e.length),Vu(this.axes,t.length)],n}computeOutputShape(e){I.D5U.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Ur("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Wu.className="Dot",I.m7h.registerClass(Wu);class Gu extends Da{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return(0,I.lub)((()=>{this.invokeCallHook(e,t);const n=wa(e);return Ks((()=>(0,I.IHx)(Vs(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}Gu.className="GaussianNoise",I.m7h.registerClass(Gu);class Hu extends Da{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,I.lub)((()=>{this.invokeCallHook(e,t);const n=wa(e);if(this.rate>0&&this.rate<1){return Ks((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return(0,I.dC7)(n,Vs(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}Hu.className="GaussianDropout",I.m7h.registerClass(Hu);class ju extends Da{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||wa(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,I.lub)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),r=()=>{const t=wa(e),r=-1.7580993408473766;let s=(0,I.brS)((0,I.LGj)(n),this.rate);s=Os(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate,o=(0,I.IHx)((0,I.dC7)(t,s),(0,I.dC7)((0,I.IHx)(s,-1),r));return(0,I.IHx)((0,I.dC7)(o,a),i)};return Ks(r,(()=>wa(e)),t.training||!1)}return e}))}}function Xu(e,t,n,r,s,a=.001){let i;if(2===e.rank)i=I.Dxk(e,t,n,r,s,a);else if(3===e.rank)i=I.JY5(e,t,n,r,s,a);else{if(4!==e.rank)throw new Ur(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=I.p3b(e,t,n,r,s,a)}return i}function qu(e,t,n,r,s=.001){return I.D5U.arraysEqual(r.slice().sort(),_s(0,e.rank-1))?function(e,t,n,r,s=.001){return(0,I.lub)((()=>{const a=I.Gi7(e,r),i=a.mean,o=a.variance;return[Xu(e,i,o,n,t,s),i,o]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return(0,I.lub)((()=>{const a=I.Gi7(e,r),i=a.mean,o=a.variance,u=[];for(const t of _s(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=(0,I.XLQ)(i,u),c=(0,I.XLQ)(o,u),h=null==t?null:(0,I.XLQ)(t,u),p=null==n?null:(0,I.XLQ)(n,u);return[Xu(e,l,c,p,h,s),i,o]}))}(e,t,n,r,s)}ju.className="AlphaDropout",I.m7h.registerClass(ju);class Ku extends Da{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=ya(e.betaInitializer||"zeros"),this.gammaInitializer=ya(e.gammaInitializer||"ones"),this.movingMeanInitializer=ya(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ya(e.movingVarianceInitializer||"ones"),this.betaConstraint=Qa(e.betaConstraint),this.gammaConstraint=Qa(e.gammaConstraint),this.betaRegularizer=Mo(e.betaRegularizer),this.gammaRegularizer=Mo(e.gammaRegularizer)}build(e){e=va(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new zr(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Ca({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return(0,I.lub)((()=>{const n=null!=t.training&&t.training,r=wa(e),s=r.shape,a=s.length,i=_s(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const u=Wr(1,a);u[o]=s[o];const l=i.slice();l.sort();const c=!I.D5U.arraysEqual(l,_s(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=(0,I.XLQ)(this.movingMean.read(),u),t=(0,I.XLQ)(this.movingVariance.read(),u),n=this.center?(0,I.XLQ)(this.beta.read(),u):null,s=this.scale?(0,I.XLQ)(this.gamma.read(),u):null;return Xu(r,e,t,n,s,this.epsilon)}return Xu(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,d]=qu(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{I.lub((()=>{const r=1-n,s=e.read(),a=I.dC7(I.luU(s,t),r);e.write(I.luU(s,a))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,d,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ga(this.betaInitializer),gammaInitializer:ga(this.gammaInitializer),movingMeanInitializer:ga(this.movingMeanInitializer),movingVarianceInitializer:ga(this.movingVarianceInitializer),betaRegularizer:Oo(this.betaRegularizer),gammaRegularizer:Oo(this.gammaRegularizer),betaConstraint:Ka(this.betaConstraint),gammaConstraint:Ka(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Ku.className="BatchNormalization",I.m7h.registerClass(Ku);class Yu extends Da{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=ya(e.betaInitializer||"zeros"),this.gammaInitializer=ya(e.gammaInitializer||"ones"),this.betaRegularizer=Mo(e.betaRegularizer),this.gammaRegularizer=Mo(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=va(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==ts(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.gamma=this.scale?this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):null,this.beta=this.center?this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):null,this.built=!0}call(e,t){const n=wa(e),r=n.shape,s=r.length;return(0,I.lub)((()=>{let{mean:e,variance:t}=(0,I.Gi7)(n,this.axis,!0);const a=Wr(1,s);for(const n of this.axis)a[n]=r[n];const i=e=>null!=e&&e.shape.length!==s?I.XLQ(e,a):e;let o=this.scale?i(this.gamma.read()):null,u=this.center?i(this.beta.read()):null;const l=[],c=[];for(let n=0;n<s;++n)-1!==this.axis.indexOf(n)?(l.push(r[n]),c.push(1)):(l.push(1),c.push(r[n]));return e=I.Gg6(e,l),t=I.Gg6(t,l),null!=o&&(o=I.Gg6(o,c)),null!=u&&(u=I.Gg6(u,c)),Xu(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ga(this.betaInitializer),gammaInitializer:ga(this.gammaInitializer),betaRegularizer:Oo(this.betaRegularizer),gammaRegularizer:Oo(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Yu.className="LayerNormalization",I.m7h.registerClass(Yu);class Qu extends Da{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new zr(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new zr(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new zr(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Ca({ndim:4})]}computeOutputShape(e){let t,n;return e=va(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return(0,I.lub)((()=>{return t=wa(e),n=this.padding,r=this.dataFormat,(0,I.lub)((()=>{if(4!==t.rank)throw new zr(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new zr("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new zr(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],I.vku(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Zu(e,t,n,r,s,a){return(0,I.lub)((()=>{let i;bs(s),ws(a),xs(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=jo(e,s);const o="same"===r?"same":"valid";return i="max"===a?I._sB(e,t,n,o):I.wS1(e,t,n,o),"channelsFirst"===s&&(i=I.p4s(i,[0,3,1,2])),i}))}function Ju(e,t,n,r,s,a){return(0,I.lub)((()=>{let i;bs(s),ws(a),xs(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=Xo(e,s);const o="same"===r?"same":"valid";return i="max"===a?I.YQQ(e,t,n,o):I.uR5(e,t,n,o),"channelsFirst"===s&&(i=I.p4s(i,[0,4,1,2,3])),i}))}Qu.className="ZeroPadding2D",I.m7h.registerClass(Qu);class el extends Da{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new zr(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(as(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new zr(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}as(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,xs(this.padding),this.inputSpec=[new Ca({ndim:3})]}computeOutputShape(e){const t=Go((e=va(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return(0,I.lub)((()=>{this.invokeCallHook(e,t),e=Fs(wa(e),2);const n=this.poolingFunction(wa(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return I.L9e(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class tl extends el{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return bs(s),xs(r),Zu(e,t,n,r,s,"max")}}tl.className="MaxPooling1D",I.m7h.registerClass(tl);class nl extends el{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return bs(s),xs(r),Zu(e,t,n,r,s,"avg")}}nl.className="AveragePooling1D",I.m7h.registerClass(nl);class rl extends Da{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new zr(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];as(this.poolSize,"poolSize"),as(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,bs(this.dataFormat),xs(this.padding),this.inputSpec=[new Ca({ndim:4})]}computeOutputShape(e){e=va(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Go(t,this.poolSize[0],this.padding,this.strides[0]),n=Go(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return(0,I.lub)((()=>(this.invokeCallHook(e,t),this.poolingFunction(wa(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class sl extends rl{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return bs(s),xs(r),Zu(e,t,n,r,s,"max")}}sl.className="MaxPooling2D",I.m7h.registerClass(sl);class al extends rl{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return bs(s),xs(r),Zu(e,t,n,r,s,"avg")}}al.className="AveragePooling2D",I.m7h.registerClass(al);class il extends Da{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new zr(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];as(this.poolSize,"poolSize"),as(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,bs(this.dataFormat),xs(this.padding),this.inputSpec=[new Ca({ndim:5})]}computeOutputShape(e){e=va(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Go(t,this.poolSize[0],this.padding,this.strides[0]),n=Go(n,this.poolSize[1],this.padding,this.strides[1]),r=Go(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return(0,I.lub)((()=>(this.invokeCallHook(e,t),this.poolingFunction(wa(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class ol extends il{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return bs(s),xs(r),Ju(e,t,n,r,s,"max")}}ol.className="MaxPooling3D",I.m7h.registerClass(ol);class ul extends il{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return bs(s),xs(r),Ju(e,t,n,r,s,"avg")}}ul.className="AveragePooling3D",I.m7h.registerClass(ul);class ll extends Da{constructor(e){super(e),this.inputSpec=[new Ca({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Ur}}class cl extends ll{constructor(e){super(e||{})}call(e,t){return(0,I.lub)((()=>{const t=wa(e);return I.J69(t,1)}))}}cl.className="GlobalAveragePooling1D",I.m7h.registerClass(cl);class hl extends ll{constructor(e){super(e||{})}call(e,t){return(0,I.lub)((()=>{const t=wa(e);return I.Fp7(t,1)}))}}hl.className="GlobalMaxPooling1D",I.m7h.registerClass(hl);class pl extends Da{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,bs(this.dataFormat),this.inputSpec=[new Ca({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Ur}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class dl extends pl{call(e,t){return(0,I.lub)((()=>{const t=wa(e);return I.J69(t,"channelsLast"===this.dataFormat?[1,2]:[2,3])}))}}dl.className="GlobalAveragePooling2D",I.m7h.registerClass(dl);class fl extends pl{call(e,t){return(0,I.lub)((()=>{const t=wa(e);return I.Fp7(t,"channelsLast"===this.dataFormat?[1,2]:[2,3])}))}}fl.className="GlobalMaxPooling2D",I.m7h.registerClass(fl);class ml extends Da{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=li(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class gl extends ml{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=va(e)).length<3)throw new zr(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=va(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t);return[n[0],e[1]].concat(n.slice(1))}call(e,t){return(0,I.lub)((()=>cu(((e,n)=>[wa(this.layer.call(e,t)),[]]),e=wa(e),[],!1,null,null,!1,!0)[1]))}}gl.className="TimeDistributed",I.m7h.registerClass(gl);class yl extends ml{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=li(n),t.goBackwards=!0!==t.goBackwards;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=li(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,rs(gs,"BidirectionalMergeMode",this.mergeMode),e.weights)throw new Ur("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=Math.floor(e.length/2);this.forwardLayer.setWeights(e.slice(0,t)),this.backwardLayer.setWeights(e.slice(t))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):jr(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=lu(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new zr("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new Ca({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new Ur("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof $a;for(const u of a)if(u instanceof $a!==o)throw new zr("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return(0,I.lub)((()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=I.GYS(s,1)),"concat"===this.mergeMode?i=zs([r,s]):"sum"===this.mergeMode?i=I.IHx(r,s):"ave"===this.mergeMode?i=I.dC7(.5,I.IHx(r,s)):"mul"===this.mergeMode?i=I.dC7(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Is(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Is(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=li(t.layer);if(delete t.layer,null!=t.numConstants)throw new Ur("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}yl.className="Bidirectional",I.m7h.registerClass(yl);class bl extends Da{constructor(e){super(e),this.scale=e.scale,this.offset=e.offset?e.offset:0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,I.lub)((()=>("float32"!==(e=wa(e)).dtype&&(e=Os(e,"float32")),(0,I.IHx)((0,I.dC7)(e,this.scale),this.offset))))}}bl.className="Rescaling",I.m7h.registerClass(bl);const{resizeBilinear:xl,cropAndResize:wl}=I.image;class vl extends Da{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,s,a,i,o){return(0,I.lub)((()=>{let u,l=!1;const c=[t/a,n/i,(r+t)/a,(s+n)/i],h=[];3===e.rank?(l=!0,u=(0,I.knu)([e])):u=e;for(let e=0;e<u.shape[0];e++)h.push(c);const p=(0,I.XeE)(h,[h.length,4]),d=(0,I.w6H)(0,h.length,1,"int32"),f=wl(u,p,d,[r,s],"nearest");return Os(l?wa((0,I.HHK)(f)):f,o)}))}upsize(e,t,n,r){return(0,I.lub)((()=>Os(xl(e,[t,n]),r)))}call(e,t){return(0,I.lub)((()=>{const t=wa(e),n=t.dtype,r=t.shape,s=r[r.length-3],a=r[r.length-2];let i=0;s!==this.height&&(i=Math.floor((s-this.height)/2));let o=0;return a!==this.width&&(o=Math.floor((a-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,s,a,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=va(e)).length-2;return e[e.length-3]=this.height,e[t]=this.width,e}}vl.className="CenterCrop",I.m7h.registerClass(vl);class kl extends Da{constructor(e){super(e),this.numTokens=e.numTokens,this.outputMode=e.outputMode?e.outputMode:"multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=va(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return(0,I.lub)((()=>{let n;if("int32"!==(e=wa(e)).dtype&&(e=Os(e,"int32")),"undefined"!==typeof t.countWeights){if("count"!==this.outputMode)throw new zr(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=wa(t.countWeights)}const r=(0,I.Fp7)(e),s=(0,I.VV$)(e),a=(0,I.pjt)(this.numTokens,r).bufferSync().get(0),i=(0,I.brS)(s,0).bufferSync().get(0);if(!a||!i)throw new zr(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,r){let s=wa(e);if("int32"!==s.dtype&&(s=Os(s,"int32")),"int"===t)return s;const a=s.shape;if(0===s.rank&&(s=(0,I.dt4)(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=(0,I.dt4)(s,-1)),s.rank>2)throw new zr(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${a} which would result in output rank ${s.rank}.`);const i=["multiHot","oneHot"].includes(t),o=s;let u;if(u=(0,I.ppE)(o,"undefined"!==typeof r&&"count"===t?r:[],n,i),"tfIdf"!==t)return u;if(r)return(0,I.dC7)(u,r);throw new zr("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}kl.className="CategoryEncoding",I.m7h.registerClass(kl);const Il=new Set(["bilinear","nearest"]);class Sl extends Da{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!Il.has(e.interpolation))throw new zr(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){e=va(e);return[this.height,this.width,e[2]]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,I.lub)((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return I.image.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return I.image.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Il]} are supported`)}))}}Sl.className="Resizing",I.m7h.registerClass(Sl);class Nl{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}Nl.className="RandomSeed";class Tl extends Da{constructor(e){super(e),this.randomGenerator=new Nl(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}Tl.className="BaseRandomLayer";const Cl=new Set(["bilinear","nearest"]);class $l extends Tl{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new zr(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new zr(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new zr(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!Cl.has(n))throw new zr(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=va(e);return[this.imgHeight,-1,e[2]]}call(e,t){return(0,I.lub)((()=>{const t=wa(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=(0,I.LGj)([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);const s=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return I.image.resizeBilinear(e,s);case"nearest":return I.image.resizeNearestNeighbor(e,s);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...Cl]} are supported`)}}))}}$l.className="RandomWidth",I.m7h.registerClass($l);var El,Al;(0,I.OBj)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(El||(El={})),function(e){let t;(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Al||(Al={}));const _l={};function Dl(e){return _l[e]}function Rl(e,t,n,r,s){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd,o=e<0?t.inputNames.length+e:e;if("tensor"===a.type)return Ol(t.inputNames[o],n,r,s);if("tensors"===a.type){const a=t.inputs.slice(e,i);return t.inputNames.slice(e,i).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=a[t])||void 0===n?void 0:n.op)})).map((e=>Ol(e,n,r,s)))}const u=Ol(t.inputNames[o],n,r,s),l=u.dataSync();return"number"===a.type?l[0]:I.D5U.toNestedArray(u.shape,l)}const i=t.attrParams[e];return i&&i.value}function Ol(e,t,n,r){const[s,a]=Ll(e,n);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[Bl(s,e)]));return void 0!==i?t[Bl(s,i)][a]:void 0}function Fl(e,t,n){return t[Bl(e,n.currentContextId)]}function Ml(e,t){const[n,r,s]=Ll(e,t);return[Bl(n,t&&t.currentContextId),r,s]}function Bl(e,t){return t?`${e}-${t}`:e}function Ll(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const r=e.split(":");let s;if(1===r.length)s=[e,0,void 0];else{const e=3===r.length?r[1]:void 0;s=[r[0],Number(r[r.length-1]),e]}return n&&t.parseNodeNameCache.set(e,s),s}function zl(e,t,n){let r=Rl("pad",e,t,n);if("explicit"===r){r=Rl("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function Ul(e){return e.kept?e:(0,I.d9v)(e)}const Pl=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Vl=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Wl=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],Gl=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Hl=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],jl=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Xl=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],ql=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Kl=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],Yl=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],Ql=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],Zl=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],Jl=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],ec=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],tc=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],nc=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],rc=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],sc=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],ac=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];var ic=n(8764).lW;class oc{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[r,s,a,i,o,u,l,c,h,p,d,f,m,g,y,b,x,w,v].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=[],r=[],s=[],a=e.node.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?n.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let i=[];const o=[];let u={},l={};null!=t&&(u=this.mapSignatureEntries(t.inputs),l=this.mapSignatureEntries(t.outputs));const c=Object.keys(a);c.forEach((e=>{const t=a[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=Ml(e),i=a[r];if(null!=i.outputs){const e=i.outputs.indexOf(s);if(-1!==e){t.inputNames[n]=`${r}:${e}`}}t.inputs.push(i),i.children.push(t)}))})),0===Object.keys(l).length?c.forEach((e=>{const t=a[e];0===t.children.length&&o.push(t)})):Object.keys(l).forEach((e=>{const[t]=Ml(e),n=a[t];null!=n&&(n.signatureKey=l[e],o.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=Ml(e),n=a[t];n&&(n.signatureKey=u[e],i.push(n))})):i=n;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:a,inputs:i,outputs:o,weights:r,placeholders:n,signature:t,functions:h};return s.length>0&&(p.initNodes=s),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=Dl(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let s;switch(n.type){case"string":s=lc(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=lc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=xc(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=xc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=hc(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=hc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=bc(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=bc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=cc(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=cc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=vc(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=vc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=yc(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=yc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=wc(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=wc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=fc(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=fc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=mc(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=mc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=dc(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=dc(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const s=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=Ml(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:pc(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),r[t]=n}));Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[s,,a]=Ml(e),i=r[s];if(null!=i.outputs){const e=i.outputs.indexOf(a);if(-1!==e){t.inputNames[n]=`${s}:${e}`}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=Ml(i[e.name]),s=r[t];null!=s&&(s.defaultOutput=n,a.push(s))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function uc(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,I.OBj)().global;if("undefined"!==typeof t.atob)return t.atob(e);if("undefined"!==typeof ic)return new ic(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function lc(e,t,n,r=!1){const s=e[t];return null!=s?uc(s.s,r):n}function cc(e,t,n){const r=e[t];return r?r.b:n}function hc(e,t,n){const r=e[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"===typeof s?s:parseInt(s,10)}function pc(e){switch("string"===typeof e&&(e=El[e]),e){case El.DT_FLOAT:case El.DT_HALF:return"float32";case El.DT_INT32:case El.DT_INT64:case El.DT_INT8:case El.DT_UINT8:return"int32";case El.DT_BOOL:return"bool";case El.DT_DOUBLE:return"float32";case El.DT_STRING:return"string";default:return null}}function dc(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function fc(e,t,n){const r=e[t];return r&&r.type?pc(r.type):n}function mc(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>pc(e))):n}function gc(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"===typeof e.size?e.size:parseInt(e.size,10))):[]}function yc(e,t,n){const r=e[t];return r&&r.shape?gc(r.shape):n}function bc(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"===typeof e?e:parseInt(e,10))):n}function xc(e,t,n,r=!1){const s=e[t];return s&&s.list&&s.list.s?s.list.s.map((e=>uc(e,r))):n}function wc(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>gc(e))):n}function vc(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class kc{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return Ol(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Ol(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return hc(this.node.rawAttrs,e,t);if(null!=n.s)return lc(this.node.rawAttrs,e,t);if(null!=n.b)return cc(this.node.rawAttrs,e,t);if(null!=n.shape)return yc(this.node.rawAttrs,e,t);if(null!=n.type)return fc(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return bc(this.node.rawAttrs,e,t);if(null!=n.list.s)return xc(this.node.rawAttrs,e,t);if(null!=n.list.shape)return wc(this.node.rawAttrs,e,t);if(null!=n.list.b)return vc(this.node.rawAttrs,e,t);if(null!=n.list.type)return mc(this.node.rawAttrs,e,t)}return t}}function Ic(e,t,n=""){if("number"!==typeof e&&"number"!==typeof t){I.D5U.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const s=e[r],a=t[r];I.D5U.assert(s<0||a<0||s===a,(()=>n+` Shapes ${e} and ${t} must match`))}}}function Sc(e){return"number"!==typeof e&&!e.some((e=>e<0))}function Nc(e,t,n){let r=Tc(e,n);const s=!Sc(r);if(s&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach((e=>{r=Tc(e.shape,r)})),!Sc(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Tc(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const s=e[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=s>=0?s:a}return n}class Cc{constructor(e,t,n,r,s,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=(0,I.iD$)(0),(0,I.CnY)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),Ic(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,(0,I.CnY)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,I.XeE)([],[0].concat(this.elementShape));const n=this.readMany(e);return Ic(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,I.knu)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,I.XeE)([],[0].concat(this.elementShape));const t=[];for(let r=0;r<this.size();r++)t.push(r);const n=this.readMany(t);return Ic(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,I.zoF)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,(0,I.HHK)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,a=[];(0,I.lub)((()=>{t=(0,I.XLQ)(t,[1,n,s]);for(let n=0;n<e.length;++n){a[n]=(0,I.XLQ)((0,I.tPi)(t,[0,0===n?0:r[n-1],0],[1,e[n],s]),this.elementShape)}return a}));const i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,a)}}class $c{get id(){return this.idTensor.id}constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);Ic(t,e.shape,"TensorList shape mismatch: "),(0,I.CnY)(e)})),this.idTensor=(0,I.iD$)(0),this.maxNumElements=r,(0,I.CnY)(this.idTensor)}copy(){return new $c([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Ic(e,this.elementShape,"TensorList shape mismatch: ");const r=Nc(this.elementShape,this.tensors,e);return(0,I.lub)((()=>{const e=this.tensors.map((e=>(0,I.XLQ)(e,r)));return(0,I.knu)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Nc(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,Ic(r.shape,e,"TensorList shape mismatch: "),(0,I.XLQ)(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Ic(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,I.CnY)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);const t=new $c([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);Ic(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=Nc(this.elementShape,this.tensors,t);return(0,I.XLQ)(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Ic(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,I.CnY)(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Ic(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=Nc(this.elementShape,this.tensors,n);return 0===e.length?(0,I.XeE)([],[0].concat(r)):(0,I.lub)((()=>{const t=e.map((e=>(0,I.XLQ)(this.tensors[e],r)));return(0,I.knu)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Ic(this.elementShape,t,"TensorList shape mismatch: ");const n=Nc(this.elementShape,this.tensors,t);return 0===this.size()?(0,I.XeE)([],[0].concat(n)):(0,I.lub)((()=>{const e=this.tensors.map((e=>(0,I.XLQ)(e,n)));return(0,I.zoF)(e,0)}))}}const Ec=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=Rl("thenBranch",e,t,n),s=Rl("elseBranch",e,t,n),a=Rl("cond",e,t,n),i=Rl("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Rl("body",e,t,n),s=Rl("cond",e,t,n),a=Rl("args",e,t,n),i=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((e=>e.id));let u=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let l=a;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await a[0].data(),a.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[Ul(Rl("pred",e,t,n))];case"Switch":{const r=Rl("pred",e,t,n);let s=Rl("data",e,t,n);return s.kept||(s=Ul(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==Ol(e,t,n)));if(r){return[Ul(Ol(r,t,n))]}return}case"Enter":{const r=Rl("frameName",e,t,n),s=Rl("tensor",e,t,n);return n.enterFrame(r),[Ul(s)]}case"Exit":{const r=Rl("tensor",e,t,n);return n.exitFrame(),[Ul(r)]}case"NextIteration":{const r=Rl("tensor",e,t,n);return n.nextIteration(),[Ul(r)]}case"TensorArrayV3":{const r=Rl("size",e,t,n),s=Rl("dtype",e,t,n),a=Rl("elementShape",e,t,n),i=Rl("dynamicSize",e,t,n),o=Rl("clearAfterRead",e,t,n),u=Rl("identicalElementShapes",e,t,n),l=Rl("name",e,t,n),c=new Cc(l,s,r,a,u,i,o);return n.addTensorArray(c),[c.idTensor,(0,I.iD$)(1)]}case"TensorArrayWriteV3":{const r=Rl("tensorArrayId",e,t,n),s=Rl("index",e,t,n),a=Rl("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(s,a),[i.idTensor]}case"TensorArrayReadV3":{const r=Rl("tensorArrayId",e,t,n),s=Rl("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=Rl("tensorArrayId",e,t,n),s=Rl("indices",e,t,n),a=Rl("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=Rl("tensorArrayId",e,t,n),s=Rl("indices",e,t,n),a=Rl("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(s,a),[i.idTensor]}case"TensorArrayConcatV3":{const r=Rl("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=Rl("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=Rl("tensorArrayId",e,t,n),s=Rl("tensor",e,t,n),a=Rl("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(a,s),[i.idTensor]}case"TensorArraySizeV3":{const r=Rl("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return[(0,I.iD$)(s.size(),"int32")]}case"TensorArrayCloseV3":{const r=Rl("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=Rl("tensorListId",e,t,n),s=Rl("index",e,t,n),a=Rl("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(s,a),[i.idTensor]}case"TensorListGetItem":{const r=Rl("tensorListId",e,t,n),s=Rl("index",e,t,n),a=Rl("elementShape",e,t,n),i=Rl("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Rl("indices",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new $c([],n,e.dtype,r),i=(0,I.HHK)(e,0);return t.forEach(((e,t)=>{a.setItem(e,i[t])})),a}(Rl("tensor",e,t,n),r,Rl("elementShape",e,t,n),Rl("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=Rl("elementShape",e,t,n),s=Rl("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=Rl(a,e,t,n),o=function(e,t,n,r){return new $c([],e,t,r)}(r,s,0,"TensorListReserve"===e.op?-1:i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=Rl("tensorListId",e,t,n),s=Rl("indices",e,t,n),a=Rl("elementShape",e,t,n),i=Rl("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,i,a)]}case"TensorListStack":{const r=Rl("tensorListId",e,t,n),s=Rl("elementShape",e,t,n),a=Rl("elementDType",e,t,n),i=Rl("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,a,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);Ic(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=(0,I.HHK)(e);return new $c(s,t,r)}(Rl("tensor",e,t,n),Rl("elementShape",e,t,n),Rl("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=Rl("tensorListId",e,t,n),s=n.getTensorList(r.id),a=Rl("dtype",e,t,n),i=Rl("elementShape",e,t,n);return[s.concat(a,i)]}case"TensorListPushBack":{const r=Rl("tensorListId",e,t,n),s=Rl("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=Rl("tensorListId",e,t,n),s=Rl("elementShape",e,t,n),a=Rl("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=Rl("tensor",e,t,n),s=Rl("elementShape",e,t,n),a=function(e,t,n){let r=0;const s=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const a=Tc(e.shape.slice(1),n),i=0===r?0:e.size/r,o=(0,I.lub)((()=>{const n=[];e=(0,I.XLQ)(e,[1,r,i]);for(let r=0;r<t.length;++r)n[r]=(0,I.XLQ)((0,I.tPi)(e,[0,0===r?0:s[r-1],0],[1,t[r],i]),a);return e.dispose(),n})),u=new $c([],n,e.dtype,t.length);for(let l=0;l<o.length;l++)u.setItem(l,o[l]);return u}(r,Rl("lengths",e,t,n),s);return n.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=Rl("tensorListId",e,t,n),s=n.getTensorList(r.id);return[(0,I.iD$)(s.size(),"int32")]}case"TensorListResize":{const r=Rl("tensorListId",e,t,n),s=Rl("size",e,t,n),a=n.getTensorList(r.id).resize(s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Ac(e,t,n){const[r,s]=Rl("fusedOps",e,t,n),a="biasadd"===r,i=!a,o="prelu"===s,u="fusedbatchnorm"===r,l=Rl("numArgs",e,t,n);if(a){if(o&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=Rl("strides",e,t,n),h=zl(e,t,n),p=Rl("dataFormat",e,t,n).toUpperCase(),d=Rl("dilations",e,t,n);let[f,m]=Rl("args",e,t,n);i&&(m=f,f=void 0);return{stride:c,pad:h,dataFormat:p,dilations:d,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:Rl("leakyreluAlpha",e,t,n)}}function _c(e,t,n){return{boxes:Rl("boxes",e,t,n),scores:Rl("scores",e,t,n),maxOutputSize:Rl("maxOutputSize",e,t,n),iouThreshold:Rl("iouThreshold",e,t,n),scoreThreshold:Rl("scoreThreshold",e,t,n),softNmsSigma:Rl("softNmsSigma",e,t,n)}}class Dc{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,I.iD$)(0),this.tensorMap=new Map,(0,I.CnY)(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Gn.iD$(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,I.lub)((()=>{const e=(0,I.HHK)(t),r=n.length,s=e.length;I.D5U.assert(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let t=0;t<r;t++){const r=n[t],s=e[t];(0,I.CnY)(s),this.tensorMap.set(r,s)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,I.lub)((()=>{const e=[];for(let r=0;r<n.length;r++){const s=this.findWithDefault(n[r],t);e.push(s)}return(0,I.knu)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function Rc(e,t,n,r,s=I.lub){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(Rl("a",e,t,n),Rl("b",e,t,n))];case"AddN":return[r.addN(Rl("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(Rl("a",e,t,n),Rl("b",e,t,n))];case"Mul":return[r.mul(Rl("a",e,t,n),Rl("b",e,t,n))];case"RealDiv":case"Div":return[r.div(Rl("a",e,t,n),Rl("b",e,t,n))];case"DivNoNan":return[r.divNoNan(Rl("a",e,t,n),Rl("b",e,t,n))];case"FloorDiv":return[r.floorDiv(Rl("a",e,t,n),Rl("b",e,t,n))];case"Sub":return[r.sub(Rl("a",e,t,n),Rl("b",e,t,n))];case"Minimum":return[r.minimum(Rl("a",e,t,n),Rl("b",e,t,n))];case"Maximum":return[r.maximum(Rl("a",e,t,n),Rl("b",e,t,n))];case"Pow":return[r.pow(Rl("a",e,t,n),Rl("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(Rl("a",e,t,n),Rl("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(Rl("x",e,t,n))];case"Acos":return[r.acos(Rl("x",e,t,n))];case"Acosh":return[r.acosh(Rl("x",e,t,n))];case"Asin":return[r.asin(Rl("x",e,t,n))];case"Asinh":return[r.asinh(Rl("x",e,t,n))];case"Atan":return[r.atan(Rl("x",e,t,n))];case"Atan2":return[r.atan2(Rl("x",e,t,n),Rl("y",e,t,n))];case"Atanh":return[r.atanh(Rl("x",e,t,n))];case"Ceil":return[r.ceil(Rl("x",e,t,n))];case"Complex":return[r.complex(Rl("real",e,t,n),Rl("imag",e,t,n))];case"Cos":return[r.cos(Rl("x",e,t,n))];case"Cosh":return[r.cosh(Rl("x",e,t,n))];case"Elu":return[r.elu(Rl("x",e,t,n))];case"Erf":return[r.erf(Rl("x",e,t,n))];case"Exp":return[r.exp(Rl("x",e,t,n))];case"Expm1":return[r.expm1(Rl("x",e,t,n))];case"Floor":return[r.floor(Rl("x",e,t,n))];case"Log":return[r.log(Rl("x",e,t,n))];case"Log1p":return[r.log1p(Rl("x",e,t,n))];case"Imag":return[r.imag(Rl("x",e,t,n))];case"Neg":return[r.neg(Rl("x",e,t,n))];case"Reciprocal":return[r.reciprocal(Rl("x",e,t,n))];case"Real":return[r.real(Rl("x",e,t,n))];case"Relu":return[r.relu(Rl("x",e,t,n))];case"Round":return[r.round(Rl("x",e,t,n))];case"Selu":return[r.selu(Rl("x",e,t,n))];case"Sigmoid":return[r.sigmoid(Rl("x",e,t,n))];case"Sin":return[r.sin(Rl("x",e,t,n))];case"Sign":return[r.sign(Rl("x",e,t,n))];case"Sinh":return[r.sinh(Rl("x",e,t,n))];case"Softplus":return[r.softplus(Rl("x",e,t,n))];case"Sqrt":return[r.sqrt(Rl("x",e,t,n))];case"Square":return[r.square(Rl("x",e,t,n))];case"Tanh":return[r.tanh(Rl("x",e,t,n))];case"Tan":return[r.tan(Rl("x",e,t,n))];case"ClipByValue":return[r.clipByValue(Rl("x",e,t,n),Rl("clipValueMin",e,t,n),Rl("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(Rl("x",e,t,n))];case"Rsqrt":return[r.rsqrt(Ol(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(Rl("x",e,t,n),Rl("alpha",e,t,n))];case"Prelu":return[r.prelu(Rl("x",e,t,n),Rl("alpha",e,t,n))];case"IsNan":return[r.isNaN(Ol(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(Ol(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(Ol(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return Ec(e,t,n);case"convolution":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"Conv1D":{const s=Rl("stride",e,t,n),a=Rl("pad",e,t,n),i=Rl("dataFormat",e,t,n).toUpperCase(),o=Rl("dilation",e,t,n);return[r.conv1d(Rl("x",e,t,n),Rl("filter",e,t,n),s,a,i,o)]}case"Conv2D":{const s=Rl("strides",e,t,n),a=zl(e,t,n),i=Rl("dataFormat",e,t,n).toUpperCase(),o=Rl("dilations",e,t,n);return[r.conv2d(Rl("x",e,t,n),Rl("filter",e,t,n),[s[1],s[2]],a,i,[o[1],o[2]])]}case"_FusedConv2D":{const{stride:s,pad:a,dataFormat:i,dilations:o,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=Ac(e,t,n);return[r.fused.conv2d({x:Rl("x",e,t,n),filter:Rl("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:a,dataFormat:i,dilations:o,biasArg:u,preluArg:l,activationFunc:c,leakyreluAlpha:h}=Ac(e,t,n);return[r.fused.depthwiseConv2d({x:Rl("x",e,t,n),filter:Rl("filter",e,t,n),strides:[s[1],s[2]],pad:a,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:c,preluActivationWeights:l,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=Rl("outputShape",e,t,n),a=Rl("strides",e,t,n),i=zl(e,t,n);return[r.conv2dTranspose(Rl("x",e,t,n),Rl("filter",e,t,n),s,[a[1],a[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=Rl("strides",e,t,n),a=zl(e,t,n),i=Rl("dilations",e,t,n),o=Rl("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(Rl("input",e,t,n),Rl("filter",e,t,n),[s[1],s[2]],a,o,[i[1],i[2]])]}case"Conv3D":{const s=Rl("strides",e,t,n),a=Rl("pad",e,t,n),i=Rl("dataFormat",e,t,n).toUpperCase(),o=Rl("dilations",e,t,n);return[r.conv3d(Rl("x",e,t,n),Rl("filter",e,t,n),[s[1],s[2],s[3]],a,i,[o[1],o[2],o[3]])]}case"AvgPool":{const s=Rl("strides",e,t,n),a=Rl("pad",e,t,n),i=Rl("kernelSize",e,t,n);return[r.avgPool(Rl("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPool":{const s=Rl("strides",e,t,n),a=Rl("pad",e,t,n),i=Rl("kernelSize",e,t,n);return[r.maxPool(Rl("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a)]}case"MaxPoolWithArgmax":{const s=Rl("strides",e,t,n),a=Rl("pad",e,t,n),i=Rl("kernelSize",e,t,n),o=Rl("includeBatchInIndex",e,t,n),{result:u,indexes:l}=r.maxPoolWithArgmax(Rl("x",e,t,n),[i[1],i[2]],[s[1],s[2]],a,o);return[u,l]}case"AvgPool3D":{const s=Rl("strides",e,t,n),a=Rl("pad",e,t,n),i=Rl("kernelSize",e,t,n);return[r.avgPool3d(Rl("x",e,t,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"MaxPool3D":{const s=Rl("strides",e,t,n),a=Rl("pad",e,t,n),i=Rl("kernelSize",e,t,n);return[r.maxPool3d(Rl("x",e,t,n),[i[1],i[2],i[3]],[s[1],s[2],s[3]],a)]}case"Dilation2D":{const s=Rl("strides",e,t,n),a=Rl("pad",e,t,n),i=Rl("dilations",e,t,n),o=s[1],u=s[2],l=i[1],c=i[2];return[r.dilation2d(Rl("x",e,t,n),Rl("filter",e,t,n),[o,u],a,[l,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"Fill":{const s=Rl("shape",e,t,n),a=Rl("dtype",e,t,n),i=Rl("value",e,t,n);return[r.fill(s,i,a)]}case"LinSpace":{const s=Rl("start",e,t,n),a=Rl("stop",e,t,n),i=Rl("num",e,t,n);return[r.linspace(s,a,i)]}case"Multinomial":{const s=Rl("logits",e,t,n),a=Rl("numSamples",e,t,n),i=Rl("seed",e,t,n);return[r.multinomial(s,a,i)]}case"OneHot":{const s=Rl("indices",e,t,n),a=Rl("depth",e,t,n),i=Rl("onValue",e,t,n),o=Rl("offValue",e,t,n),u=Rl("dtype",e,t,n);return[r.oneHot(s,a,i,o,u)]}case"Ones":return[r.ones(Rl("shape",e,t,n),Rl("dtype",e,t,n))];case"OnesLike":return[r.onesLike(Rl("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(Rl("shape",e,t,n),Rl("dtype",e,t,n),Rl("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(Rl("shape",e,t,n),Rl("minval",e,t,n),Rl("maxval",e,t,n),Rl("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(Rl("shape",e,t,n),Rl("minval",e,t,n),Rl("maxval",e,t,n),Rl("seed",e,t,n))];case"Range":{const s=Rl("start",e,t,n),a=Rl("stop",e,t,n),i=Rl("step",e,t,n);return[r.range(s,a,i,Rl("dtype",e,t,n))]}case"TruncatedNormal":{const s=Rl("shape",e,t,n),a=Rl("mean",e,t,n),i=Rl("stdDev",e,t,n),o=Rl("seed",e,t,n);return[r.truncatedNormal(s,a,i,Rl("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(Rl("shape",e,t,n),Rl("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(Rl("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n,r,s=k)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=_c(e,t,n),c=await s.image.nonMaxSuppressionWithScoreAsync(r,a,i,o,u,l);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=_c(e,t,n),l=Rl("padToMaxOutputSize",e,t,n),c=await s.image.nonMaxSuppressionPaddedAsync(r,a,i,o,u,l);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=_c(e,t,n);return[await s.image.nonMaxSuppressionAsync(r,a,i,o,u)]}case"Where":{const r=s.cast(Rl("condition",e,t,n),"bool"),a=[await s.whereAsync(r)];return r.dispose(),a}case"ListDiff":return s.setdiff1dAsync(Rl("x",e,t,n),Rl("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"LowerBound":{const s=Rl("sortedSequence",e,t,n),a=Rl("values",e,t,n);return[r.lowerBound(s,a)]}case"TopKV2":{const s=Rl("x",e,t,n),a=Rl("k",e,t,n),i=Rl("sorted",e,t,n),o=r.topk(s,a,i);return[o.values,o.indices]}case"UpperBound":{const s=Rl("sortedSequence",e,t,n),a=Rl("values",e,t,n);return[r.upperBound(s,a)]}case"Unique":{const s=Rl("x",e,t,n),a=r.unique(s);return[a.values,a.indices]}case"UniqueV2":{const s=Rl("x",e,t,n),a=Rl("axis",e,t,n),i=r.unique(s,a);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"ResizeBilinear":{const s=Rl("images",e,t,n),a=Rl("size",e,t,n),i=Rl("alignCorners",e,t,n),o=Rl("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(s,[a[0],a[1]],i,o)]}case"ResizeNearestNeighbor":{const s=Rl("images",e,t,n),a=Rl("size",e,t,n),i=Rl("alignCorners",e,t,n),o=Rl("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(s,[a[0],a[1]],i,o)]}case"CropAndResize":{const s=Rl("image",e,t,n),a=Rl("boxes",e,t,n),i=Rl("boxInd",e,t,n),o=Rl("cropSize",e,t,n),u=Rl("method",e,t,n),l=Rl("extrapolationValue",e,t,n);return[r.image.cropAndResize(s,a,i,o,u,l)]}case"ImageProjectiveTransformV3":{const s=Rl("images",e,t,n),a=Rl("transforms",e,t,n),i=Rl("outputShape",e,t,n),o=Rl("fillValue",e,t,n),u=Rl("interpolation",e,t,n),l=Rl("fillMode",e,t,n);return[r.image.transform(s,a,u.toLowerCase(),l.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const s=Rl("default",e,t,n);return[Ol(e.name,t,n)||s];case"Placeholder":return[Ol(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[Ul(Rl("x",e,t,n))];case"IdentityN":return Rl("x",e,t,n).map((e=>Ul(e)));case"Shape":return[r.tensor1d(Rl("x",e,t,n).shape,"int32")];case"ShapeN":return Rl("x",e,t,n).map((e=>r.tensor1d(e.shape)));case"Size":return[r.scalar(Rl("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(Rl("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":const a=Rl("x",e,t,n),i=Rl("data",e,t,n),o=Rl("message",e,t,n),u=Rl("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,u));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"Equal":return[r.equal(Rl("a",e,t,n),Rl("b",e,t,n))];case"NotEqual":return[r.notEqual(Rl("a",e,t,n),Rl("b",e,t,n))];case"Greater":return[r.greater(Rl("a",e,t,n),Rl("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(Rl("a",e,t,n),Rl("b",e,t,n))];case"Less":return[r.less(Rl("a",e,t,n),Rl("b",e,t,n))];case"LessEqual":return[r.lessEqual(Rl("a",e,t,n),Rl("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(Rl("a",e,t,n),Rl("b",e,t,n))];case"LogicalNot":return[r.logicalNot(Rl("a",e,t,n))];case"LogicalOr":return[r.logicalOr(Rl("a",e,t,n),Rl("b",e,t,n))];case"Select":case"SelectV2":return[r.where(Rl("condition",e,t,n),Rl("a",e,t,n),Rl("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(Rl("a",e,t,n),Rl("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(Rl("a",e,t,n),Rl("b",e,t,n),Rl("transposeA",e,t,n),Rl("transposeB",e,t,n))];case"Einsum":return[r.einsum(Rl("equation",e,t,n),...Rl("tensors",e,t,n))];case"Transpose":return[r.transpose(Rl("x",e,t,n),Rl("perm",e,t,n))];case"_FusedMatMul":const[s,a]=Rl("fusedOps",e,t,n),i="biasadd"===s,o="prelu"===a,u=Rl("numArgs",e,t,n),l=Rl("leakyreluAlpha",e,t,n);if(i){if(o&&2!==u)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==u)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,h]=Rl("args",e,t,n);return[r.fused.matMul({a:Rl("a",e,t,n),b:Rl("b",e,t,n),transposeA:Rl("transposeA",e,t,n),transposeB:Rl("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:h,leakyreluAlpha:l})];case"MatrixBandPart":return[r.linalg.bandPart(Rl("a",e,t,n),Rl("numLower",e,t,n),Rl("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(Rl("x",e,t,n),Rl("axis",e,t,n),Rl("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[r.batchNorm(Rl("x",e,t,n),Rl("mean",e,t,n),Rl("variance",e,t,n),Rl("offset",e,t,n),Rl("scale",e,t,n),Rl("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(Rl("x",e,t,n),Rl("radius",e,t,n),Rl("bias",e,t,n),Rl("alpha",e,t,n),Rl("beta",e,t,n))];case"Softmax":return[r.softmax(Rl("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(Rl("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"ragged":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"RaggedGather":{const{outputNestedSplits:s,outputDenseValues:a}=r.raggedGather(Rl("paramsNestedSplits",e,t,n),Rl("paramsDenseValues",e,t,n),Rl("indices",e,t,n),Rl("outputRaggedRank",e,t,n));return s.concat(a)}case"RaggedRange":{const{rtNestedSplits:s,rtDenseValues:a}=r.raggedRange(Rl("starts",e,t,n),Rl("limits",e,t,n),Rl("splits",e,t,n));return[s,a]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(Rl("shape",e,t,n),Rl("values",e,t,n),Rl("defaultValue",e,t,n),Rl("rowPartitionTensors",e,t,n),Rl("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"Max":{const s=Rl("axis",e,t,n),a=Rl("keepDims",e,t,n);return[r.max(Rl("x",e,t,n),s,a)]}case"Mean":{const s=Rl("axis",e,t,n),a=Rl("keepDims",e,t,n);return[r.mean(Rl("x",e,t,n),s,a)]}case"Min":{const s=Rl("axis",e,t,n),a=Rl("keepDims",e,t,n);return[r.min(Rl("x",e,t,n),s,a)]}case"Sum":{const s=Rl("axis",e,t,n),a=Rl("keepDims",e,t,n);return[r.sum(Rl("x",e,t,n),s,a)]}case"All":{const s=Rl("axis",e,t,n),a=Rl("keepDims",e,t,n);return[r.all(Rl("x",e,t,n),s,a)]}case"Any":{const s=Rl("axis",e,t,n),a=Rl("keepDims",e,t,n);return[r.any(Rl("x",e,t,n),s,a)]}case"ArgMax":{const s=Rl("axis",e,t,n);return[r.argMax(Rl("x",e,t,n),s)]}case"ArgMin":{const s=Rl("axis",e,t,n);return[r.argMin(Rl("x",e,t,n),s)]}case"Prod":{const s=Rl("axis",e,t,n),a=Rl("keepDims",e,t,n);return[r.prod(Rl("x",e,t,n),s,a)]}case"Cumprod":{const s=Rl("axis",e,t,n),a=Rl("exclusive",e,t,n),i=Rl("reverse",e,t,n);return[r.cumprod(Rl("x",e,t,n),s,a,i)]}case"Cumsum":{const s=Rl("axis",e,t,n),a=Rl("exclusive",e,t,n),i=Rl("reverse",e,t,n);return[r.cumsum(Rl("x",e,t,n),s,a,i)]}case"Bincount":const s=Rl("x",e,t,n),a=Rl("weights",e,t,n),i=Rl("size",e,t,n);return[r.bincount(s,a,i)];case"DenseBincount":{const s=Rl("x",e,t,n),a=Rl("weights",e,t,n),i=Rl("size",e,t,n),o=Rl("binaryOutput",e,t,n);return[r.denseBincount(s,a,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"ConcatV2":case"Concat":{const s=Rl("n",e,t,n),a=Rl("axis",e,t,n);let i=Rl("tensors",e,t,n);return i=i.slice(0,s),[r.concat(i,a)]}case"Gather":{const s=Rl("x",e,t,n),a=Rl("indices",e,t,n);return[r.gather(s,r.cast(a,"int32"),0)]}case"GatherV2":{const s=Rl("axis",e,t,n),a=Rl("batchDims",e,t,n),i=Rl("x",e,t,n),o=Rl("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),s,a)]}case"Reverse":{const s=Rl("dims",e,t,n),a=[];for(let e=0;e<s.length;e++)s[e]&&a.push(e);const i=Rl("x",e,t,n);return[r.reverse(i,a)]}case"ReverseV2":{const s=Rl("axis",e,t,n),a=Rl("x",e,t,n);return[r.reverse(a,s)]}case"Slice":{const s=Rl("begin",e,t,n),a=Rl("size",e,t,n);return[r.slice(Rl("x",e,t,n),s,a)]}case"StridedSlice":{const s=Rl("begin",e,t,n),a=Rl("end",e,t,n),i=Rl("strides",e,t,n),o=Rl("beginMask",e,t,n),u=Rl("endMask",e,t,n),l=Rl("ellipsisMask",e,t,n),c=Rl("newAxisMask",e,t,n),h=Rl("shrinkAxisMask",e,t,n),p=Rl("x",e,t,n);return[r.stridedSlice(p,s,a,i,o,u,l,c,h)]}case"Pack":return(0,I.lub)((()=>{const s=Rl("axis",e,t,n),a=Rl("tensors",e,t,n),i=a[0].shape,o=r.squeeze(a[0]).shape,u=a.map((e=>{const t=I.D5U.arraysEqual(e.shape,i);if(!t&&!I.D5U.arraysEqual(r.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:r.reshape(e,i)}));return[r.stack(u,s)]}));case"Unpack":{const s=Rl("axis",e,t,n),a=Rl("tensor",e,t,n);return r.unstack(a,s)}case"Tile":{const s=Rl("reps",e,t,n);return[r.tile(Rl("x",e,t,n),s)]}case"Split":case"SplitV":{const s=Rl("axis",e,t,n),a=Rl("numOrSizeSplits",e,t,n),i=Rl("x",e,t,n);return r.split(i,a,s)}case"ScatterNd":{const s=Rl("indices",e,t,n),a=Rl("values",e,t,n),i=Rl("shape",e,t,n);return[r.scatterND(s,a,i)]}case"GatherNd":{const s=Rl("x",e,t,n),a=Rl("indices",e,t,n);return[r.gatherND(s,a)]}case"SparseToDense":{const s=Rl("sparseIndices",e,t,n),a=Rl("outputShape",e,t,n),i=Rl("sparseValues",e,t,n),o=Rl("defaultValue",e,t,n);return[r.sparseToDense(s,i,a,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}case"TensorScatterUpdate":{const s=Rl("indices",e,t,n),a=Rl("values",e,t,n),i=Rl("tensor",e,t,n);return[r.tensorScatterUpdate(i,s,a)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:a,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(Rl("indices",e,t,n),Rl("values",e,t,n),Rl("denseShape",e,t,n),Rl("defaultValue",e,t,n));return[s,a,i,o]}case"SparseReshape":{const{outputIndices:s,outputShape:a}=r.sparse.sparseReshape(Rl("inputIndices",e,t,n),Rl("inputShape",e,t,n),Rl("newShape",e,t,n));return[s,a]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(Rl("data",e,t,n),Rl("indices",e,t,n),Rl("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(Rl("data",e,t,n),Rl("indices",e,t,n),Rl("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"FFT":return[r.fft(Rl("x",e,t,n))];case"IFFT":return[r.ifft(Rl("x",e,t,n))];case"RFFT":return[r.rfft(Rl("x",e,t,n))];case"IRFFT":return[r.irfft(Rl("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(Rl("input",e,t,n),Rl("pattern",e,t,n),Rl("rewrite",e,t,n),Rl("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:s,nGramsSplits:a}=r.string.stringNGrams(Rl("data",e,t,n),Rl("dataSplits",e,t,n),Rl("separator",e,t,n),Rl("nGramWidths",e,t,n),Rl("leftPad",e,t,n),Rl("rightPad",e,t,n),Rl("padWidth",e,t,n),Rl("preserveShortSequences",e,t,n));return[s,a]}case"StringSplit":{const{indices:s,values:a,shape:i}=r.string.stringSplit(Rl("input",e,t,n),Rl("delimiter",e,t,n),Rl("skipEmpty",e,t,n));return[s,a,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(Rl("input",e,t,n),Rl("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return s((()=>((e,t,n,r=k)=>{switch(e.op){case"Cast":return[r.cast(Rl("x",e,t,n),Rl("dtype",e,t,n))];case"ExpandDims":{const s=Rl("axis",e,t,n);return[r.expandDims(Rl("x",e,t,n),s)]}case"Squeeze":{const s=Rl("axis",e,t,n);return[r.squeeze(Rl("x",e,t,n),s)]}case"Reshape":return[r.reshape(Rl("x",e,t,n),Rl("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(Rl("x",e,t,n),Rl("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(Rl("x",e,t,n),Rl("padding",e,t,n),Rl("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(Rl("x",e,t,n),Rl("padding",e,t,n),Rl("constantValue",e,t,n))];case"SpaceToBatchND":{const s=Rl("blockShape",e,t,n),a=Rl("paddings",e,t,n);return[r.spaceToBatchND(Rl("x",e,t,n),s,a)]}case"BatchToSpaceND":{const s=Rl("blockShape",e,t,n),a=Rl("crops",e,t,n);return[r.batchToSpaceND(Rl("x",e,t,n),s,a)]}case"DepthToSpace":{const s=Rl("blockSize",e,t,n),a=Rl("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(Rl("x",e,t,n),s,a)]}case"BroadcastTo":return[r.broadcastTo(Rl("x",e,t,n),Rl("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(Rl("s0",e,t,n),Rl("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=r.getHashTableHandleByName(e.name);if(null!=s)return[s];{const s=Rl("keyDType",e,t,n),a=Rl("valueDType",e,t,n),i=new Dc(s,a);return r.addHashTable(e.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const s=Rl("tableHandle",e,t,n,r),a=Rl("keys",e,t,n),i=Rl("values",e,t,n),o=r.getHashTableById(s.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const s=Rl("tableHandle",e,t,n,r),a=Rl("keys",e,t,n),i=Rl("defaultValue",e,t,n),o=r.getHashTableById(s.id);return[await o.find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=Rl("tableHandle",e,t,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=Dl(e.op);if(a&&a.customExecutor)return a.customExecutor(new kc(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return I.D5U.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}class Oc{constructor(e={},t={},n={},r={},s){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Fc(e,t,n,r){const s=new Set,a=[];let i=null,o=null;const u=new Set,l=new Set(Object.keys(e).map((e=>Ll(e)[0])));r=r||[];const c=new Set(r.map((e=>Ll(e.name)[0]))),h=[...t];for(;h.length>0;){const e=h.pop();(Pc(e)||Vc(e)||Wc(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>s.has(e)))),s.add(e.name),null==n[e.name]&&(l.has(e.name)||c.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),h.push(e))})):a.push(e.name)))}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:i,syncInputs:o}}function Mc(e,t){const{usedNodes:n,inputs:r}=t,s=e=>n.has("string"===typeof e?e:e.name);function a(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const i=a([...Object.keys(r).map((e=>Ll(e)[0])).map((t=>e.nodes[t])),...e.weights,...e.initNodes||[]]).filter(s),o=a([...i,...Object.values(e.nodes)]).filter(s),u=new Map(o.map((e=>[e.name,e]))),l={};for(const d of o){l[d.name]=l[d.name]||0;for(const e of d.children)s(e)||(l[e.name]=Number.POSITIVE_INFINITY),l[e.name]=(l[e.name]||0)+1}const c=Object.entries(l).filter((([,e])=>0===e)).map((([e])=>e)),h=[...c];for(;c.length>0;){const e=c.pop(),t=u.get(e);for(const n of t.children.filter(s))0===--l[n.name]&&(h.push(n.name),c.push(n.name))}const p=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),r=t.map((e=>e.name)),s=new Set(r);for(;r.length>0;){const e=r.pop(),t=n.get(e);for(const a of t.children)n.has(a.name)&&!s.has(a.name)&&(s.add(a.name),r.push(a.name))}const a=e.filter((e=>s.has(e.name)));return a}(h.map((e=>u.get(e))),i);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),r=new Set(t.map((e=>e.name))),s=e=>r.has("string"===typeof e?e:e.name),a=new Set(e.map((e=>e.name))),i=e=>a.has("string"===typeof e?e:e.name);for(const o of e){for(const e of o.children.filter(i)){if(!n.has(e.name))throw new Bc(`Child ${e.name} of node ${o.name} is unreachable.`);if(n.get(o.name)>n.get(e.name))throw new Bc(`Node ${o.name} is scheduled to run after its child ${e.name}.`)}if(!s(o))for(const e of o.inputs){if(!n.has(e.name))throw new Bc(`Input ${e.name} of node ${o.name} is unreachable.`);if(n.get(e.name)>n.get(o.name))throw new Bc(`Node ${o.name} is scheduled to run before its input ${e.name}.`)}}}(p,i),p}class Bc extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}}const Lc=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),zc=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),Uc=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function Pc(e){return Lc.has(e.op)}function Vc(e){return zc.has(e.op)}function Wc(e){return Uc.has(e.op)}class Gc{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new Gc(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){const n=Fc(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=t.map((e=>e.name)),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}const i=Mc(this.graph,n),o=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,r=e.map(((e,t)=>Pc(e)?n:t)),s=e=>{const n=r[t.get(e.name)];return null==n?-1:n},a=e.map(((e,t)=>e.children.map(s).reduce(((e,t)=>Math.max(e,t)),r[t]))),i=new Map;for(let o=0;o<e.length;++o){const t=a[o];if(t===n)continue;const r=e[o],s=e[t];i.has(s.name)||i.set(s.name,[]),i.get(s.name).push(r)}return i}(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return(0,I.CnY)(t),t}cloneTensorList(e){if(!e)return null;return e.map((e=>this.cloneAndKeepTensor(e)))}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[e,this.cloneTensorList(t)])))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[Ll(e)[0]])),s=t.map((e=>Ll(e)[0])),a=new Set(s);let i=s.map((e=>this.graph.nodes[e]));0===i.length&&(i=this._outputs);const o=this.getCompilationKey(r,i);let u=this.compiledMap.get(o);null==u&&(u=this.compile(e,i),this.compiledMap.set(o,u));try{this.keepIntermediateTensors=(0,I.OBj)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const l={},c={};return(0,I.lub)((()=>{const n=new Oc(this.weightMap,l,c,this.functionExecutorMap,this.parseNodeNameCache),r=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[s,a]=Ll(t,n),i=[];i[a]=e[t],r[s]=i,this.keepIntermediateTensors&&(this.clonedTensorsMap[s]=this.cloneTensorList(i))}));const s=this.getFrozenTensorIds(r),{orderedNodes:i,nodeLiveUntilMap:o}=u;for(const e of i){if(r[e.name])continue;const t=Rc(e,r,n,this._resourceManager);if(I.D5U.isPromise(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,r,n,s,a,o.get(e.name))}return null==this.parent&&n.dispose(s),t.map((e=>Ol(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,i){if(!Pc(t)&&!a.has(e)){for(const r of n[e])null!=r&&(i[r.id]=(i[r.id]||0)+t.children.length);for(const e of t.inputs){if(Pc(e))continue;const t=Fl(e.name,n,r);if(null!=t)for(const e of t){if(!e||e.kept||s.has(e.id))continue;const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,s,a){function i(e){return Pc(e)||s.has(e.name)}if(!Pc(e)&&null!=a)for(const o of a){if(i(o))continue;const e=Fl(o.name,t,n);for(const t of e)!t||t.kept||r.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,r={},s={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=(0,I.OBj)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(h){this.keepIntermediateTensors=!1,console.warn(h.message)}const a=new Oc(this.weightMap,r,s,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const i=await this.executeWithControlFlow(e,a,t,n),o=t.map((e=>Ol(e,i,a))),u=o.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),c=new Set([...u,...l,...this.weightIds]);return Object.values(i).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&a.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),a=s.map((e=>this.graph.nodes[Ll(e)[0]])),i=n.map((e=>Ll(e)[0])),o=new Set(i);let u=i.map((e=>this.graph.nodes[e]));0===u.length&&(u=this._outputs);const{usedNodes:l,missingInputs:c,dynamicNode:h,syncInputs:p}=Fc(e,u,this.weightMap,this._initNodes),d=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=Ll(t),s=[];s[r]=e[t],f[n]=s}));const m={},g=this.getFrozenTensorIds(f),y={};for(;d.length>0;){const e=this.processStack(a,d,t,f,y,g,o,m,l);await Promise.all(e)}null!=h||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=u.filter((e=>!Pc(e)&&!Ol(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=h&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${s}]. Consider providing the following inputs: [${c}]. ${e}`)}return f}processStack(e,t,n,r,s,a,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&Rl("isConstant",e.node,r,n)&&([c]=Ml(e.node.name,n)),null==r[e.node.name]){const h=Rc(e.node,r,n,this._resourceManager);c||([c]=Ml(e.node.name,n));const p=n.currentContext;I.D5U.isPromise(h)?l.push(h.then((l=>(r[c]=l,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(l)),n.currentContext=p,this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,u),l)))):(r[c]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[c]=this.cloneTensorList(h)),this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,u))}else this.processChildNodes(e.node,t,n,r,s,u)}return l}processChildNodes(e,t,n,r,s,a){e.children.forEach((e=>{const[i]=Ml(e.name,n);!s[i]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!Ol(e,r,n)))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!Ol(e,r,n)))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=Ll(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));I.D5U.assert(t,(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&I.D5U.assert(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;const r={};for(const s in e){const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[s];null!=a?r[a.name]=e[s]:r[s]=e[s]}return r}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=Ll(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;const r=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=r?r.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=Ll(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Hc{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const jc="?tfjs-format=file",Xc="model.json";class qc{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=I.io){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new Hc}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return I.D5U.isPromise(e)?e.then((e=>this.loadSync(e))):this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(n=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Gc(oc.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=oc.Instance.transformGraph(e.modelInitializer);this.initializer=new Gc(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"===typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t={};return(e instanceof I.esB?[e]:e).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof I.esB)&&!Array.isArray(e)){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const r=n[t];null!=r.resourceId&&(e[t]=this.resourceIdToCapturedInput[r.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce(((t,n)=>{var s,a,i;const o=null===(i=null===(a=null===(s=this.signature)||void 0===s?void 0:s.inputs)||void 0===a?void 0:a[n])||void 0===i?void 0:i.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[r++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:this.initializer.execute({},null==this.initializerSignature?[]:Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:this.initializer.executeAsync({},null==this.initializerSignature?[]:Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){this.resourceIdToCapturedInput[t[n[r]].resourceId]=e[r]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&(0,I.B90)(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function Kc(e,t={},n=I.io){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"===typeof e&&(e=function(e){e.endsWith("/")||(e+="/");return`${e}${Xc}${jc}`}(e));const r=new qc(e,t,n);return await r.load(),r}var Yc,Qc=n(6377);function Zc(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(nh(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=Zc(e[a],t,n,r);s[a]=i}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function Jc(e,t=th){return eh(e,t)}function eh(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(nh(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=eh(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function th(e){return null===e?null:nh(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function nh(e){let t=!1;if(I.OBj().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(4977);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof I.esB)&&!(e instanceof Promise)&&!t)}function rh(e){return function(e,t){return Zc(e,t)}(e,sh)}function sh(e){return e instanceof I.esB?{value:e.clone(),recurse:!1}:nh(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class ah{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class ih extends ah{constructor(){super(ih.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function oh(e){return new hh(e)}function uh(e,t){return new kh(e,t)}ih.INITIAL_CAPACITY=32;class lh{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new bh(this,e)}filter(e){return new gh(this,e)}map(e){return new yh(this,e)}mapAsync(e){return new xh(this,e)}serialMapAsync(e){return new xh(this,e).serial()}flatmap(e){return new vh(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new mh(this,e,t)}columnMajorBatch(e,t=!0,n=th){return this.rowMajorBatch(e,t).map((e=>Jc(e,n)))}concatenate(e,t){return new kh(new ch([this,e]),t)}take(e){return e<0||null==e?this:new fh(this,e)}skip(e){return e<0||null==e?this:new dh(this,e)}prefetch(e){return new Ih(this,e)}shuffle(e,t){return new Sh(this,e,t)}serial(){return new ph(this)}}class ch extends lh{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:rh(e),done:!1}}}class hh extends lh{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class ph extends lh{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class dh extends lh{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;I.B90(e.value)}return this.upstream.next()}}class fh extends lh{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class mh extends lh{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class gh extends lh{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;I.B90(e.value)}}}class yh extends lh{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=I.piX.getTensorsInContainer(e.value),n=this.transform(e.value),r=I.piX.getTensorsInContainer(n);for(const s of t)I.piX.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}}class bh extends lh{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class xh extends lh{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=I.piX.getTensorsInContainer(e.value),n=await this.transform(e.value),r=I.piX.getTensorsInContainer(n);for(const s of t)I.piX.isTensorInList(s,r)||s.dispose();return{value:n,done:!1}}}class wh extends lh{constructor(){super(),this.outputQueue=new ih,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class vh extends wh{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=I.piX.getTensorsInContainer(e.value),n=this.transform(e.value),r=I.piX.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const s of t)I.piX.isTensorInList(s,r)||s.dispose();return!0}}class kh extends lh{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})(Yc||(Yc={}));class Ih extends lh{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new ah(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Sh extends Ih{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Qc.alea(n||I.D5U.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Nh{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return I.D5U.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Th((async()=>(await n.iterator()).columnMajorBatch(e,t,Ch)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Th((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Th((async()=>(await t.iterator()).filter((t=>I.lub((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Th((async()=>(await t.iterator()).map((t=>I.lub((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return Th((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Th((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Th((async()=>uh(oh((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Th((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=Qc.alea(t||I.D5U.now().toString());return Th((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Th((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Th(e,t=null){return new class extends Nh{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Ch(e){if(null===e)return null;if(function(e){return null==e||null===(t=e)||"object"!==typeof t&&"function"!==typeof t||Array.isArray(e)||"object"===typeof e&&e instanceof I.esB||I.D5U.isTypedArray(e);var t}(e[0])){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof I.esB?I.knu(e):I.XeE(e)}(e),recurse:!1}}return{value:null,recurse:!0}}Nh.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");n(8764);var $h=n(8166);const Eh=I.GDt.ZA;class Ah extends I.Zuw{nextDataId(){return Ah.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new I.JLz(this,(0,I.SRH)())}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,I.OBj)().get("IS_NODE")&&I.backend_util.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&I.D5U.isString(n[0])){const s=n.map((e=>I.D5U.encodeString(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return I.backend_util.mergeRealAndImagArrays(e,t)}return I.D5U.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>I.D5U.decodeString(e)));return(0,I.f3b)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,I.f3b)(e.shape,e.dtype,t)}makeOutput(e,t,n){return(0,I.SRH)().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=I.D5U.now();e();return{kernelMs:I.D5U.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){(0,$h.H)([e],"where");const t=this.readSync(e.dataId);return Eh(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Ah.nextDataId=0;n(5226);(0,I.jqO)("cpu",(()=>new Ah),1);var _h=n(6738);const Dh=(0,_h.A)(I.SX0,(e=>e>=0?e:Math.exp(e)-1)),Rh={kernelName:I.SX0,backendName:"cpu",kernelFunc:Dh};var Oh=n(1775);function Fh(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;(0,$h.H)([s],"leakyRelu");const i=I.D5U.sizeFromShape(s.shape),o=n.data.get(s.dataId).values,u=I.D5U.getTypedArrayFromDType("float32",i);for(let l=0;l<o.length;l++)u[l]=o[l]<0?a*o[l]:o[l];return n.makeTensorInfo(s.shape,"float32",u)}const Mh={kernelName:I.J$2,backendName:"cpu",kernelFunc:Fh};var Bh=n(3533);const Lh=(0,Bh.b)(((e,t)=>e<0?t*e:e));function zh(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;(0,$h.H)([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,u]=Lh(r.shape,s.shape,a,i,"float32");return n.makeTensorInfo(u,"float32",o)}const Uh={kernelName:I.o0g,backendName:"cpu",kernelFunc:zh},Ph=(0,_h.A)(I.qkr,(e=>Math.max(0,e))),Vh={kernelName:I.qkr,backendName:"cpu",kernelFunc:Ph},Wh=(0,_h.A)(I.SbG,(e=>Math.min(Math.max(0,e),6))),Gh={kernelName:I.SbG,backendName:"cpu",kernelFunc:Wh};var Hh=n(108);function jh(e,t,n,r,s){if("linear"===n)return(0,Oh.y)({inputs:{x:t},backend:e});if("relu"===n)return Ph({inputs:{x:t},backend:e});if("elu"===n)return Dh({inputs:{x:t},backend:e});if("relu6"===n)return Wh({inputs:{x:t},backend:e});if("prelu"===n)return zh({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return Fh({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return(0,Hh.XD)({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}var Xh=n(2779);function qh(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=I.D5U.sizeFromShape(s.shape),o=I.D5U.inferFromImplicitShape(a,i),u=I.D5U.sizeFromShape(o);I.D5U.assert(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.imag;l.complexTensorInfos.real.shape=o,e.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const Kh={kernelName:I.HZH,backendName:"cpu",kernelFunc:qh};function Yh(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;(0,$h.H)([s,a],"matMul");const u=s.shape.length,l=a.shape.length,c=i?s.shape[u-2]:s.shape[u-1],h=o?a.shape[l-1]:a.shape[l-2],p=i?s.shape[u-1]:s.shape[u-2],d=o?a.shape[l-2]:a.shape[l-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=I.D5U.sizeFromShape(f),y=I.D5U.sizeFromShape(m),b=I.Jyw.assertAndGetBroadcastShape(s.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,d]);I.D5U.assert(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,d,h]:[y,h,d],w=qh({inputs:{x:s},backend:n,attrs:{shape:i?[g,c,p]:[g,p,c]}}),v=qh({inputs:{x:a},backend:n,attrs:{shape:x}}),k=i?w.shape[1]:w.shape[2],S=i?w.shape[2]:w.shape[1],N=o?v.shape[1]:v.shape[2],T=Math.max(g,y),C=n.data.get(w.dataId).values,$=n.data.get(v.dataId).values,E=I.D5U.computeStrides(w.shape),A=I.D5U.computeStrides(v.shape),[_,D,R]=i?[E[0],1,E[1]]:[E[0],E[1],1],[O,F,M]=o?[1,A[1],A[0]]:[A[1],1,A[0]],B=S*N,L=(0,I.f3b)([T,S,N],w.dtype),z=L.values,U=n.blockSize;for(let I=0;I<T;I++){const e=I%g,t=I%y;for(let n=0;n<S;n+=U){const r=Math.min(n+U,S);for(let s=0;s<N;s+=U){const a=Math.min(s+U,N);for(let i=0;i<k;i+=U){const o=Math.min(i+U,k);for(let u=n;u<r;u++)for(let n=s;n<a;n++){let r=0;for(let s=i;s<o;s++){r+=C[e*_+u*D+s*R]*$[s*O+n*F+t*M]}z[I*B+(u*N+n)]+=r}}}}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(b,L.dtype,L.values)}const Qh={kernelName:I.XLW,backendName:"cpu",kernelFunc:Yh};const Zh={kernelName:I.usg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let p,d,f;const m=[];p=Yh({inputs:{a:s,b:a},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(d=(0,Xh.IH)({inputs:{a:p,b:i},backend:n}),m.push(p),p=d),c&&(f=jh(n,p,c,o,h),m.push(p),p=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return p}};var Jh=n(224);const ep=(0,_h.A)(I.VGw,(e=>Math.acos(e))),tp={kernelName:I.VGw,backendName:"cpu",kernelFunc:ep},np=(0,_h.A)(I.SpW,(e=>Math.acosh(e))),rp={kernelName:I.SpW,backendName:"cpu",kernelFunc:np};const sp={kernelName:I.Xze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;(0,$h.H)(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),a=(0,I.f3b)(r[0].shape,r[0].dtype),i=a.values;for(let o=0;o<r.length;o++){const e=s[o];for(let t=0;t<i.length;t++)i[t]+=e[t]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};var ap=n(4802);const ip={kernelName:I.oT6,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;(0,$h.H)(s,"all");const o=I.D5U.parseAxisParam(a,s.shape);let u=o;const l=I.backend_util.getAxesPermutation(u,s.shape.length);let c=s;null!=l&&(c=(0,ap.p)({inputs:{x:s},backend:n,attrs:{perm:l}}),u=I.backend_util.getInnerMostAxes(u.length,s.shape.length)),I.backend_util.assertAxesAreInnerMostDims("all",u,c.shape.length);const[h,p]=I.backend_util.computeOutAndReduceShapes(c.shape,u),d=I.D5U.sizeFromShape(p),f=I.D5U.makeZerosTypedArray(I.D5U.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*d;let t=m[e];for(let n=0;n<d;++n){t=t&&m[e+n]}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=qh({inputs:{x:g},backend:n,attrs:{shape:I.backend_util.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const op={kernelName:I.IKK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;(0,$h.H)(s,"any");const o=I.D5U.parseAxisParam(a,s.shape);let u=o;const l=I.backend_util.getAxesPermutation(u,s.shape.length);let c=s;null!=l&&(c=(0,ap.p)({inputs:{x:s},backend:n,attrs:{perm:l}}),u=I.backend_util.getInnerMostAxes(u.length,s.shape.length)),I.backend_util.assertAxesAreInnerMostDims("any",u,c.shape.length);const[h,p]=I.backend_util.computeOutAndReduceShapes(c.shape,u),d=I.D5U.sizeFromShape(p),f=I.D5U.makeZerosTypedArray(I.D5U.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*d;let t=m[e];for(let n=0;n<d;++n){t=t||m[e+n]}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=qh({inputs:{x:g},backend:n,attrs:{shape:I.backend_util.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const up={kernelName:I.sJF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;(0,$h.H)(s,"argMax");let i=I.D5U.parseAxisParam(a,s.shape);const o=I.backend_util.getAxesPermutation(i,s.shape.length);let u=s;const l=[];null!=o&&(u=(0,ap.p)({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=I.backend_util.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],I.backend_util.assertAxesAreInnerMostDims("argMax",i,u.shape.length);const[c,h]=I.backend_util.computeOutAndReduceShapes(u.shape,i),p=I.D5U.sizeFromShape(c),d=I.D5U.makeZerosTypedArray(p,"int32"),f=I.D5U.sizeFromShape(h),m=n.data.get(u.dataId).values;for(let g=0;g<d.length;++g){const e=g*f;let t=m[e],n=0;for(let r=0;r<f;++r){const s=m[e+r];s>t&&(t=s,n=r)}d[g]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}};const lp={kernelName:I.aJk,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;(0,$h.H)(s,"argMin");let i=I.D5U.parseAxisParam(a,s.shape);const o=I.backend_util.getAxesPermutation(i,s.shape.length);let u=s;const l=[];null!=o&&(u=(0,ap.p)({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=I.backend_util.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],I.backend_util.assertAxesAreInnerMostDims("argMin",i,u.shape.length);const[c,h]=I.backend_util.computeOutAndReduceShapes(u.shape,i),p=I.D5U.sizeFromShape(c),d=I.D5U.makeZerosTypedArray(p,"int32"),f=I.D5U.sizeFromShape(h),m=n.data.get(u.dataId).values;for(let g=0;g<d.length;++g){const e=g*f;let t=m[e],n=0;for(let r=0;r<f;++r){const s=m[e+r];s<t&&(t=s,n=r)}d[g]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},cp=(0,_h.A)(I.M2y,(e=>Math.asin(e))),hp={kernelName:I.M2y,backendName:"cpu",kernelFunc:cp},pp=(0,_h.A)(I.qw7,(e=>Math.asinh(e))),dp={kernelName:I.qw7,backendName:"cpu",kernelFunc:pp},fp=(0,_h.A)(I.jMg,(e=>Math.atan(e))),mp={kernelName:I.jMg,backendName:"cpu",kernelFunc:fp};var gp=n(6205);const yp=(0,Bh.b)(((e,t)=>Math.atan2(e,t))),bp=(0,gp.j)(I.QCc,yp),xp={kernelName:I.QCc,backendName:"cpu",kernelFunc:bp},wp=(0,_h.A)(I.Oyi,(e=>Math.atanh(e))),vp={kernelName:I.Oyi,backendName:"cpu",kernelFunc:wp};function kp(e,t,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,d=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=(0,I.f3b)(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let w=0;w<s.batchSize;++w){const t=w*y,n=w*r[0];for(let m=0;m<s.inChannels;++m)for(let y=0;y<s.outHeight;++y){const w=y*i-p,v=Math.max(0,w),k=Math.min(s.inHeight,c+w),I=t+y*b;for(let t=0;t<s.outWidth;++t){const i=t*o-d,c=Math.max(0,i),p=Math.min(s.inWidth,h+i);let y=f,b=0,w=0;for(let t=v;t<k;t+=u){const s=n+t*r[1];for(let t=c;t<p;t+=l){const n=e[s+t*r[2]+m];"max"===a&&n>y?y=n:"avg"===a&&(b+=n,w++)}if(isNaN(y))break}g[I+t*x+m]="avg"===a?b/w:y}}}return m}function Ip(e,t,n,r,s=!1,a=!1){const i=(0,I.f3b)(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=(0,I.f3b)(t,n,e);for(let g=0;g<r.batchSize;++g)for(let e=0;e<r.inChannels;++e)for(let t=0;t<r.outHeight;++t){const n=t*o-d;let y=n;for(;y<0;)y+=l;const b=Math.min(r.inHeight,h+n);for(let o=0;o<r.outWidth;++o){const h=o*u-f;let d=h;for(;d<0;)d+=c;const x=Math.min(r.inWidth,p+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let t=y;t<b;t+=l){const i=t-n;for(let n=d;n<x;n+=c){const o=n-h,u=m.get(g,t,n,e);u>w&&(w=u,v=s?a?((g*r.inHeight+t)*r.inWidth+n)*r.inChannels+e:(t*r.inWidth+n)*r.inChannels+e:i*p+o)}}i.set(v,g,t,o,e)}}return i}function Sp(e,t,n,r,s,a){const i=s.strideDepth,o=s.strideHeight,u=s.strideWidth,l=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,p=s.effectiveFilterDepth,d=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=(0,I.f3b)(s.outShape,n),w=x.values,v=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],S=s.outShape[3]*s.outShape[4],N=s.outShape[4];for(let I=0;I<s.batchSize;++I){const t=I*v,n=I*r[0];for(let x=0;x<s.inChannels;++x)for(let v=0;v<s.outDepth;++v){const I=v*i-m;let T=I;for(;T<0;)T+=l;const C=Math.min(s.inDepth,p+I),$=t+v*k;for(let t=0;t<s.outHeight;++t){const i=t*o-g;let p=i;for(;p<0;)p+=c;const m=Math.min(s.inHeight,d+i),v=$+t*S;for(let t=0;t<s.outWidth;++t){const i=t*u-y;let o=i;for(;o<0;)o+=h;const d=Math.min(s.inWidth,f+i),g=v+t*N;let k=b,I=0,S=0;for(let t=T;t<C;t+=l){const s=n+t*r[1];for(let t=p;t<m;t+=c){const n=s+t*r[2];for(let t=o;t<d;t+=h){const s=e[n+t*r[3]+x];if("max"===a&&s>k?k=s:"avg"===a&&(I+=s,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+x]="avg"===a?I/Math.max(S,1):k}}}}return x}const Np={kernelName:I.JhU,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;(0,$h.H)(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;I.D5U.assert(I.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=I.backend_util.computePool2DInfo(s.shape,a,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&I.D5U.arraysEqual(l.inShape,l.outShape))c=(0,Oh.y)({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=I.D5U.computeStrides(s.shape),r=kp(e,0,s.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}};const Tp={kernelName:I._k9,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;(0,$h.H)(s,"avgPool3d");const c=I.backend_util.computePool3DInfo(s.shape,a,i,1,o,u,l),h=Sp(n.data.get(s.dataId).values,0,s.dtype,I.D5U.computeStrides(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}};const Cp={kernelName:I.IMb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;(0,$h.H)([s,a],"avgPool3DGrad");const c=I.backend_util.computePool3DInfo(a.shape,i,o,1,u,l),h=c.strideDepth,p=c.strideHeight,d=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,S=w-1-c.padInfo.front,N=k-1-c.padInfo.left,T=v-1-c.padInfo.top,C=(0,I.f3b)(a.shape,"float32"),$=1/(f*m*g),E=n.bufferSync(s);for(let I=0;I<c.batchSize;++I)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=t-S,a=n-T,i=r-N;let o=0;for(let t=0;t<w;t+=y){const n=(s+t)/h;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let t=0;t<v;t+=b){const r=(a+t)/p;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let t=0;t<k;t+=x){const s=(i+t)/d;if(s<0||s>=c.outWidth||Math.floor(s)!==s)continue;o+=E.get(I,n,r,s,e)}}}C.set(o*$,I,t,n,r,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};const $p={kernelName:I.ROF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;(0,$h.H)([s,a],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=I.backend_util.computePool2DInfo(i.shape,o,u,1,l),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,v=(0,I.f3b)(i.shape,"float32"),k=1/(d*f),S=n.data.get(s.dataId).values,N=(0,I.f3b)(s.shape,"float32",S);for(let I=0;I<c.batchSize;++I)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inHeight;++t)for(let n=0;n<c.inWidth;++n){const r=t-w,s=n-x;let a=0;for(let t=0;t<y;t+=m){const n=(r+t)/h;if(!(n<0||n>=c.outHeight||Math.floor(n)!==n))for(let t=0;t<b;t+=g){const r=(s+t)/p;if(r<0||r>=c.outWidth||Math.floor(r)!==r)continue;a+=N.get(I,n,r,e)}}v.set(a*k,I,t,n,e)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const Ep={kernelName:I.sHE,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:i,mean:o,variance:u}=t;I.D5U.assert(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),I.D5U.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),I.D5U.assert(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),(0,$h.H)([s,o,u,a,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(u.dataId).values,d=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=p.length,x=h.length;let w=0,v=0,k=0,S=0;for(let I=0;I<c.length;++I)m[I]=f[w++]+(c[I]-h[v++])*d[k++]/Math.sqrt(p[S++]+l),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),S>=b&&(S=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};var Ap=n(2578);const _p={kernelName:I.zws,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;(0,$h.H)([s],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),u=I.backend_util.getReshaped(s.shape,a,o),l=I.backend_util.getPermuted(u.length,a.length),c=I.backend_util.getReshapedPermuted(s.shape,a,o),h=I.backend_util.getSliceBeginCoords(i,a.length),p=I.backend_util.getSliceSize(c,i,a.length),d=qh({inputs:{x:s},backend:n,attrs:{shape:u}}),f=(0,ap.p)({inputs:{x:d},backend:n,attrs:{perm:l}}),m=qh({inputs:{x:f},backend:n,attrs:{shape:c}}),g=(0,Ap.tP)({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};var Dp=n(8607);const Rp={kernelName:I.zvY,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,l=(0,Dp.W)(o,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,l)}};var Op=n(5003);const Fp={kernelName:I.eEB,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=I.backend_util.assertAndGetBroadcastShape(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}};var Mp=n(9258),Bp=n(4769);const Lp=(0,_h.A)(I.xnO,((e,t)=>e>t.clipValueMax?t.clipValueMax:e<t.clipValueMin?t.clipValueMin:e)),zp={kernelName:I.xnO,backendName:"cpu",kernelFunc:Lp};var Up=n(6961);const Pp={kernelName:I.yj2,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(I.D5U.sizeFromShape(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.imag,i=n.data.get(s.complexTensorInfos.real.dataId).values,o=n.data.get(a.dataId).values;for(let u=0;u<i.length;u++){r[u]=Math.hypot(i[u],o[u])}return n.makeOutput(r,t.shape,"float32")}};var Vp=n(8926);function Wp(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const Gp={kernelName:I.J_u,backendName:"cpu",kernelFunc:Wp};var Hp=n(2186);function jp(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=I.D5U.parseAxisParam(s,t[0].shape)[0],i=t.map((e=>e.shape));I.backend_util.assertParamsConsistent(i,a);let o=I.backend_util.computeOutShape(t.map((e=>e.shape)),a);if(0===I.D5U.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const u=t.filter((e=>I.D5U.sizeFromShape(e.shape)>0));if(1===u.length)return(0,Oh.y)({inputs:{x:u[0]},backend:n});if("complex64"===u[0].dtype){const e=u.map((e=>(0,Hp.k)({inputs:{input:e},backend:n}))),t=u.map((e=>Wp({inputs:{input:e},backend:n}))),r=jp({inputs:e,backend:n,attrs:{axis:a}}),s=jp({inputs:t,backend:n,attrs:{axis:a}}),i=(0,Up.P)({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const l=u.map((e=>{const t=I.D5U.sizeFromShape(e.shape.slice(a));return qh({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),c=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=I.backend_util.computeOutShape(l.map((e=>e.shape)),1);const h=(0,Vp.j)(c,o,t[0].dtype,1===l[0].shape[0]),p=I.backend_util.computeOutShape(u.map((e=>e.shape)),a),d=n.makeTensorInfo(p,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const Xp={kernelName:I.Eh3,backendName:"cpu",kernelFunc:jp};function qp(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;(0,$h.H)([s,a],"conv2d");const h=I.backend_util.convertConv2DDataFormat(u),p=I.backend_util.computeConv2DInfo(s.shape,a.shape,i,l,o,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,w=new I.YDk(p.outShape,s.dtype),v=I.D5U.computeStrides(s.shape),k=I.D5U.computeStrides(a.shape),S=v[0],N=x?v[1]:v[2],T=x?v[2]:1,C=x?1:v[1],$=w.strides[0],E=x?w.strides[1]:w.strides[2],A=x?w.strides[2]:1,_=x?1:w.strides[1],D=n.data.get(s.dataId).values,R=n.data.get(a.dataId).values,O=w.values;for(let I=0;I<p.batchSize;++I){const e=I*S,t=I*$;for(let n=0;n<p.outHeight;++n){const r=t+n*E,s=n*p.strideHeight-b;for(let t=0;t<d;++t){const n=s+t*m;if(n<0||n>=p.inHeight)continue;const a=t*k[0],i=e+n*N;for(let e=0;e<p.outWidth;++e){const t=r+e*A,n=e*p.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=p.inWidth)continue;const s=i+r*T;let o=a+e*k[1];for(let e=0;e<p.inChannels;++e){const n=D[s+e*C];for(let e=0;e<p.outChannels;++e)O[t+e*_]+=n*R[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,O)}const Kp={kernelName:I.mhS,backendName:"cpu",kernelFunc:qp};const Yp={kernelName:I.wUP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;(0,$h.H)([s,a],"conv2dBackpropFilter");const h=I.backend_util.convertConv2DDataFormat(u),p=I.backend_util.computeConv2DInfo(s.shape,c,i,1,o,l,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new I.YDk(p.filterShape,"float32"),x=p.padInfo.left,w=p.padInfo.top,v=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,S=new I.YDk(s.shape,s.dtype,v),N=new I.YDk(a.shape,a.dtype,k);for(let I=0;I<m;++I){const e=Math.max(0,Math.ceil((w-I)/d)),t=Math.min(p.outHeight,(p.inHeight+w-I)/d);for(let n=0;n<g;++n){const r=Math.max(0,Math.ceil((x-n)/f)),s=Math.min(p.outWidth,(p.inWidth+x-n)/f);for(let a=0;a<p.inChannels;++a)for(let i=0;i<p.outChannels;++i){let o=0;for(let u=0;u<p.batchSize;++u)for(let l=e;l<t;++l){const e=I+l*d-w;for(let t=r;t<s;++t){const r=n+t*f-x;o+=y?S.get(u,e,r,a)*N.get(u,l,t,i):S.get(u,a,e,r)*N.get(u,i,l,t)}}b.set(o,I,n,a,i)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const Qp={kernelName:I.wm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;(0,$h.H)([s,a],"conv2dBackpropInput");const h=I.D5U.computeStrides(a.shape),p=I.D5U.computeStrides(s.shape);let d=I.backend_util.convertConv2DDataFormat(l);const f=I.backend_util.computeConv2DInfo(i,a.shape,o,1,u,c,!1,d),m=new I.YDk(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(a.dataId).values,[x,w,v]=h,{batchSize:k,filterHeight:S,filterWidth:N,inChannels:T,inHeight:C,inWidth:$,outChannels:E,outHeight:A,outWidth:_,strideHeight:D,strideWidth:R}=f;d=f.dataFormat;const O=S-1-f.padInfo.top,F=N-1-f.padInfo.left,M="channelsLast"===d,B=m.strides[0],L=M?m.strides[1]:m.strides[2],z=M?m.strides[2]:1,U=M?1:m.strides[1],P=p[0],V=M?p[1]:p[2],W=M?p[2]:1,G=M?1:p[1];for(let I=0;I<k;++I)for(let e=0;e<T;++e)for(let t=0;t<C;++t){const n=t-O,r=Math.max(0,Math.ceil(n/D)),s=Math.min(A,(S+n)/D);for(let a=0;a<$;++a){const i=a-F,o=Math.max(0,Math.ceil(i/R)),u=Math.min(_,(N+i)/R);let l=0;for(let t=r;t<s;++t){const r=t*D-n;for(let n=o;n<u;++n){const s=P*I+V*t+W*n,a=x*(S-1-r)+w*(N-1-(n*R-i))+v*e;for(let e=0;e<E;++e){l+=y[s+G*e]*b[a+e]}}}g[B*I+L*t+z*a+U*e]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const Zp={kernelName:I.x12,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r;(0,$h.H)([s,a],"conv3d");const l=I.backend_util.computeConv3DInfo(s.shape,a.shape,i,u,o),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,w=new I.YDk(l.outShape,s.dtype),v=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,S=w.values,N=I.D5U.computeStrides(s.shape),T=I.D5U.computeStrides(a.shape);for(let I=0;I<l.batchSize;++I){const e=I*N[0],t=I*w.strides[0];for(let n=0;n<l.outDepth;++n){const r=t+n*w.strides[1],s=n*l.strideDepth-y;for(let t=0;t<c;++t){const n=s+t*d;if(n<0||n>=l.inDepth)continue;const a=t*T[0],i=e+n*N[1];for(let e=0;e<l.outHeight;++e){const t=r+e*w.strides[2],n=e*l.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const s=a+e*T[1],o=i+r*N[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-b;for(let e=0;e<p;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const a=o+t*l.inChannels;let i=s+e*T[2];for(let e=0;e<l.inChannels;++e){const t=v[a+e];for(let e=0;e<l.outChannels;++e)S[n+e]+=t*k[i+e];i+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const Jp={kernelName:I.o2y,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:u}=r;(0,$h.H)([s,a],"conv3dBackpropFilterV2");const l=I.D5U.computeStrides(s.shape),c=I.D5U.computeStrides(a.shape),h=I.backend_util.computeConv3DInfo(s.shape,u,i,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new I.YDk(h.filterShape,"float32"),x=b.values,[w,v,k,S]=b.strides,N=n.data.get(a.dataId).values,[T,C,$,E]=c,A=n.data.get(s.dataId).values,[_,D,R,O]=l,F=h.padInfo.front,M=h.padInfo.left,B=h.padInfo.top;for(let I=0;I<m;++I){const e=Math.max(0,Math.ceil((F-I)/p)),t=Math.min(h.outDepth,(h.inDepth+F-I)/p),n=I*w;for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((B-r)/d)),a=Math.min(h.outHeight,(h.inHeight+B-r)/d),i=r*v+n;for(let n=0;n<y;++n){const o=Math.max(0,Math.ceil((M-n)/f)),u=Math.min(h.outWidth,(h.inWidth+M-n)/f),l=n*k+i;for(let i=0;i<h.inChannels;++i){const c=i*S+l;for(let l=0;l<h.outChannels;++l){let m=0;for(let c=0;c<h.batchSize;++c){const h=c*_,g=c*T;for(let c=e;c<t;++c){const e=(I+c*p-F)*D+h,t=c*C+g;for(let c=s;c<a;++c){const s=(r+c*d-B)*R+e,a=c*$+t;for(let e=o;e<u;++e){m+=A[(n+e*f-M)*O+s+i]*N[e*E+a+l]}}}}x[c+l]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const ed={kernelName:I.ik2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:u}=r;(0,$h.H)([s],"conv3dBackpropInputV2");const l=I.D5U.computeStrides(s.shape),c=I.D5U.computeStrides(a.shape),h=I.backend_util.computeConv3DInfo(u,a.shape,o,1,i),p=new I.YDk(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(s.dataId).values,[x,w,v,k]=l,S=n.data.get(a.dataId).values,[N,T,C,$]=c,{batchSize:E,filterDepth:A,filterHeight:_,filterWidth:D,inChannels:R,inDepth:O,inHeight:F,inWidth:M,outChannels:B,outDepth:L,outHeight:z,outWidth:U,strideDepth:P,strideHeight:V,strideWidth:W}=h,G=A-1-h.padInfo.front,H=_-1-h.padInfo.top,j=D-1-h.padInfo.left;for(let I=0;I<E;++I)for(let e=0;e<R;++e)for(let t=0;t<O;++t){const n=t-G,r=Math.max(0,Math.ceil(n/P)),s=Math.min(L,(A+n)/P);for(let a=0;a<F;++a){const i=a-H,o=Math.max(0,Math.ceil(i/V)),u=Math.min(z,(_+i)/V);for(let l=0;l<M;++l){const c=l-j,h=Math.max(0,Math.ceil(c/W)),p=Math.min(U,(D+c)/W);let E=0;for(let t=r;t<s;++t){const r=t*P-n;for(let n=o;n<u;++n){const s=n*V-i;for(let a=h;a<p;++a){const i=x*I+w*t+v*n+k*a,o=N*(A-1-r)+T*(_-1-s)+C*(D-1-(a*W-c))+$*e;for(let e=0;e<B;++e){E+=b[i+e]*S[o+e]}}}}d[f*I+m*t+g*a+y*l+e]=E}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},td=(0,_h.A)(I.mc4,(e=>Math.cos(e))),nd={kernelName:I.mc4,backendName:"cpu",kernelFunc:td},rd=(0,_h.A)(I.TR1,(e=>Math.cosh(e))),sd={kernelName:I.TR1,backendName:"cpu",kernelFunc:rd};const ad={kernelName:I.VcC,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[c,h,p,d]=s.shape,f=a.shape[0],[m,g]=o,y=(0,I.f3b)([f,m,g,d],"float32"),b=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(s.dataId).values,v=I.D5U.computeStrides(s.shape),k=I.D5U.computeStrides(y.shape);for(let I=0;I<f;I++){const e=4*I,t=b[e],n=b[e+1],r=b[e+2],s=b[e+3],a=x[I];if(a>=c)continue;const i=m>1?(r-t)*(h-1)/(m-1):0,o=g>1?(s-n)*(p-1)/(g-1):0;for(let c=0;c<m;c++){const e=m>1?t*(h-1)+c*i:.5*(t+r)*(h-1);if(e<0||e>h-1)for(let t=0;t<g;t++)for(let e=0;e<d;e++){y.values[e+t*k[2]+c*k[1]+I*k[0]]=l}else if("bilinear"===u){const t=Math.floor(e),r=Math.ceil(e),i=e-t;for(let e=0;e<g;e++){const u=g>1?n*(p-1)+e*o:.5*(n+s)*(p-1);if(u<0||u>p-1){for(let t=0;t<d;t++){y.values[t+e*k[2]+c*k[1]+I*k[0]]=l}continue}const h=Math.floor(u),f=Math.ceil(u),m=u-h;for(let n=0;n<d;n++){let s=n+h*v[2]+t*v[1]+a*v[0];const o=w[s];s=n+f*v[2]+t*v[1]+a*v[0];const u=w[s];s=n+h*v[2]+r*v[1]+a*v[0];const l=w[s];s=n+f*v[2]+r*v[1]+a*v[0];const p=w[s],d=o+(u-o)*m;s=n+e*k[2]+c*k[1]+I*k[0],y.values[s]=d+(l+(p-l)*m-d)*i}}}else for(let t=0;t<g;++t){const r=g>1?n*(p-1)+t*o:.5*(n+s)*(p-1);if(r<0||r>p-1){for(let e=0;e<d;e++){y.values[e+t*k[2]+c*k[1]+I*k[0]]=l}continue}const i=Math.round(r),u=Math.round(e);for(let e=0;e<d;e++){y.values[e+t*k[2]+c*k[1]+I*k[0]]=w[e+i*v[2]+u*v[1]+a*v[0]]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const id={kernelName:I.Byc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;(0,$h.H)(s,"cumprod");const u=I.backend_util.getAxesPermutation([a],s.shape.length);let l=s;null!=u&&(l=(0,ap.p)({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=I.backend_util.getInnerMostAxes(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=(0,I.x8V)(l.dtype,"int32"),p=I.D5U.makeOnesTypedArray(I.D5U.sizeFromShape(l.shape),h),d=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<d.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)p[t]=i?1:d[t];else{const n=m(y,e-1);p[t]=i?d[n]*p[n]:d[t]*p[n]}}const g=n.makeTensorInfo(l.shape,h,p);if(null!=u){const e=I.backend_util.getUndoAxesPermutation(u),t=(0,ap.p)({inputs:{x:g},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),t}return g}};const od={kernelName:I.iHb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;(0,$h.H)(s,"cumsum");const u=I.backend_util.getAxesPermutation([a],s.shape.length);let l=s;null!=u&&(l=(0,ap.p)({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=I.backend_util.getInnerMostAxes(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=(0,I.x8V)(l.dtype,"int32"),p=I.D5U.makeZerosTypedArray(I.D5U.sizeFromShape(l.shape),h),d=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<d.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)p[t]=i?0:d[t];else{const n=m(y,e-1);p[t]=i?d[n]+p[n]:d[t]+p[n]}}const g=n.makeTensorInfo(l.shape,h,p);if(null!=u){const e=I.backend_util.getUndoAxesPermutation(u),t=(0,ap.p)({inputs:{x:g},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),t}return g}};const ud={kernelName:I.QRR,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.data.get(s.dataId).values,t=n.data.get(a.dataId).values,r=(0,Dp.W)(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=(0,Dp.i)(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};const ld={kernelName:I.T0n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;I.D5U.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=s.shape[0],u=s.shape[1],l=s.shape[2],c=s.shape[3],h=u*a,p=l*a,d=c/(a*a),f=n.data.get(s.dataId).values,m=new Float32Array(o*h*p*d);let g=0;for(let y=0;y<o;++y)for(let e=0;e<h;++e){const t=Math.floor(e/a),n=e%a;for(let e=0;e<p;++e){const r=Math.floor(e/a),s=(n*a+e%a)*d;for(let e=0;e<d;++e){m[g++]=f[e+s+c*(r+l*(t+u*y))]}}}return n.makeTensorInfo([o,h,p,d],s.dtype,m)}};function cd(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;(0,$h.H)([s,a],"depthwiseConv2DNative");const c=I.D5U.computeStrides(s.shape),h=I.D5U.computeStrides(a.shape);let p=u;null==p&&(p=[1,1]),I.D5U.assert(I.backend_util.eitherStridesOrDilationsAreOne(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));const d=I.backend_util.computeConv2DInfo(s.shape,a.shape,i,p,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,w=b.top,v=d.outChannels/d.inChannels,k=new I.YDk(d.outShape,s.dtype),S=n.data.get(s.dataId).values,N=n.data.get(a.dataId).values,T=k.values;for(let I=0;I<d.batchSize;++I){const e=I*c[0],t=I*k.strides[0];for(let n=0;n<d.outHeight;++n){const r=t+n*k.strides[1],s=n*d.strideHeight-w;for(let t=0;t<f;++t){const n=s+t*g;if(n<0||n>=d.inHeight)continue;const a=t*h[0],i=e+n*c[1];for(let e=0;e<d.outWidth;++e){const t=r+e*k.strides[2],n=e*d.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=d.inWidth)continue;const s=i+r*d.inChannels;let o=t,u=a+e*h[1];for(let e=0;e<d.inChannels;++e){const t=S[s+e];for(let e=0;e<v;++e)T[o+e]+=t*N[u+e];o+=v,u+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const hd={kernelName:I.cie,backendName:"cpu",kernelFunc:cd};const pd={kernelName:I.sL$,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;(0,$h.H)([s,a],"depthwiseConv2dNativeBackpropFilter");const h=I.backend_util.computeConv2DInfo(s.shape,c,i,o,u,l,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new I.YDk(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(s.dataId).values,v=new I.YDk(s.shape,s.dtype,w),k=n.data.get(a.dataId).values,S=new I.YDk(a.shape,a.dtype,k);for(let I=0;I<f;++I){const e=Math.max(0,Math.ceil((b-I)/p)),t=Math.min(h.outHeight,(h.inHeight+b-I)/p);for(let n=0;n<m;++n){const r=Math.max(0,Math.ceil((y-n)/d)),s=Math.min(h.outWidth,(h.inWidth+y-n)/d);for(let a=0;a<h.outChannels;++a){const i=Math.trunc(a/x),o=a%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let o=e;o<t;++o){const e=I+o*p-b;for(let t=r;t<s;++t){u+=v.get(l,e,n+t*d-y,i)*S.get(l,o,t,a)}}g.set(u,I,n,i,o)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const dd={kernelName:I.y7R,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;(0,$h.H)([s,a],"depthwiseConv2DNativeBackpropInput");const h=I.D5U.computeStrides(s.shape),p=I.D5U.computeStrides(a.shape),d=I.backend_util.computeConv2DInfo(c,a.shape,i,o,u,l,!0),f=new I.YDk(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(s.dataId).values,[w,v,k]=h,S=n.data.get(a.dataId).values,[N,T,C]=p,{batchSize:$,filterHeight:E,filterWidth:A,inChannels:_,inHeight:D,inWidth:R,outChannels:O,outHeight:F,outWidth:M,strideHeight:B,strideWidth:L}=d,z=E-1-d.padInfo.top,U=A-1-d.padInfo.left,P=O/_;for(let I=0;I<$;++I)for(let e=0;e<_;++e)for(let t=0;t<D;++t){const n=t-z,r=Math.max(0,Math.ceil(n/B)),s=Math.min(F,(E+n)/B);for(let a=0;a<R;++a){const i=a-U,o=Math.max(0,Math.ceil(i/L)),u=Math.min(M,(A+i)/L);let l=0;for(let t=r;t<s;++t){const r=t*B-n;for(let n=o;n<u;++n){const s=w*I+v*t+k*n,a=N*(E-1-r)+T*(A-1-(n*L-i))+C*e;for(let t=0;t<P;++t){l+=x[s+(e*P+t)]*S[a+t]}}}m[g*I+y*t+b*a+e]=l}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const fd={kernelName:I.$w,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=I.D5U.sizeFromShape(r.shape),a=n.data.get(r.dataId).values,i=(0,I.f3b)([s,s],r.dtype),o=i.values;for(let l=0;l<a.length;l++)o[l*s+l]=a[l];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},md={kernelName:I.p4S,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:i,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(s.dataId).values,p=s.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:S,dilationHeight:N,dilationWidth:T,outShape:C}=I.backend_util.computeDilation2DInfo(r.shape,s.shape,a,i,"NHWC",o),$=I.D5U.sizeFromShape(C),E=C.length,A=I.D5U.getArrayFromDType(r.dtype,$);for(let _=0;_<d;++_)for(let e=0;e<y;++e){const t=e*w-x.top;for(let n=0;n<b;++n){const a=n*v-x.left;for(let i=0;i<g;++i){let o=Number.MIN_SAFE_INTEGER;for(let e=0;e<k;++e){const n=t+e*N;if(n>=0&&n<f)for(let t=0;t<S;++t){const u=a+t*T;if(u>=0&&u<m){const a=I.D5U.locToIndex([_,n,u,i],c,I.D5U.computeStrides(r.shape)),d=I.D5U.locToIndex([e,t,i],p,I.D5U.computeStrides(s.shape)),f=l[a]+h[d];f>o&&(o=f)}}}A[I.D5U.locToIndex([_,e,n,i],E,I.D5U.computeStrides(C))]=o}}}return{dataId:u.write(I.D5U.toTypedArray(A,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},gd={kernelName:I.Vn9,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=I.D5U.toNestedArray(r.shape,l.data.get(r.dataId).values),h=I.D5U.toNestedArray(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:S,dilationWidth:N,outShape:T}=I.backend_util.computeDilation2DInfo(r.shape,s.shape,i,o,"NHWC",u);I.D5U.assert(a.rank===T.length,(()=>`Error in ${I.Vn9}, dy must have the same rank as output ${T.length}, but got ${a.rank}`));const C=I.D5U.toNestedArray(T,l.data.get(a.dataId).values),$=I.D5U.makeZerosNestedTypedArray(s.shape,s.dtype);for(let I=0;I<p;++I)for(let e=0;e<g;++e){const t=e*x-b.top;for(let n=0;n<y;++n){const r=n*w-b.left;for(let s=0;s<m;++s){let a=Number.MIN_SAFE_INTEGER,i=0,o=0;for(let e=0;e<v;++e){const n=t+e*S;if(n>=0&&n<d)for(let t=0;t<k;++t){const u=r+t*N;if(u>=0&&u<f){const r=c[I][n][u][s]+h[e][t][s];r>a&&(a=r,i=e,o=t)}}}$[i][o][s]+=C[I][e][n][s]}}}return{dataId:l.write(I.D5U.toTypedArray($,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},yd={kernelName:I.ekb,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=I.D5U.toNestedArray(r.shape,l.data.get(r.dataId).values),h=I.D5U.toNestedArray(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:S,dilationWidth:N,outShape:T}=I.backend_util.computeDilation2DInfo(r.shape,s.shape,i,o,"NHWC",u);I.D5U.assert(a.rank===T.length,(()=>`Error in ${I.ekb}, dy must have the same rank as output ${T.length}, but got ${a.rank}`));const C=I.D5U.toNestedArray(T,l.data.get(a.dataId).values),$=I.D5U.makeZerosNestedTypedArray(r.shape,r.dtype);for(let I=0;I<p;++I)for(let e=0;e<g;++e){const t=e*x-b.top;for(let n=0;n<y;++n){const r=n*w-b.left;for(let s=0;s<m;++s){let a=Number.MIN_SAFE_INTEGER,i=t<0?0:t,o=r<0?0:r;for(let e=0;e<v;++e){const n=t+e*S;if(n>=0&&n<d)for(let t=0;t<k;++t){const u=r+t*N;if(u>=0&&u<f){const r=c[I][n][u][s]+h[e][t][s];r>a&&(a=r,i=n,o=u)}}}$[I][i][o][s]+=C[I][e][n][s]}}}return{dataId:l.write(I.D5U.toTypedArray($,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const bd={kernelName:I.hGc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s}=t,{canvas:a,options:i}=r,{contextOptions:o,imageOptions:u}=i||{},l=(null===u||void 0===u?void 0:u.alpha)||1,c=(null===o||void 0===o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=a.getContext(c,(null===o||void 0===o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${c} type.`);const[p,d]=s.shape.slice(0,2),f=2===s.shape.length?1:s.shape[2],m=n.data.get(s.dataId).values,g="float32"===s.dtype?255:1,y=new Uint8ClampedArray(d*p*4);for(let x=0;x<p*d;++x){const e=[0,0,0,255*l];for(let n=0;n<f;n++){const t=m[x*f+n];if("float32"===s.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===s.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===f?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}const t=4*x;y[t+0]=Math.round(e[0]),y[t+1]=Math.round(e[1]),y[t+2]=Math.round(e[2]),y[t+3]=Math.round(e[3])}a.width=d,a.height=p;const b=new ImageData(y,d,p);return h.putImageData(b,0,0),s}};var xd=n(1917),wd=n(4391);function vd(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;let o;(0,$h.H)(s,"sum"),o="bool"===s.dtype?(0,Mp.pj)({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):(0,Oh.y)({inputs:{x:s},backend:n});const u=o.shape.length,l=I.D5U.parseAxisParam(a,o.shape),c=I.backend_util.getAxesPermutation(l,u);let h=l,p=o;null!=c&&(p=(0,ap.p)({inputs:{x:o},backend:n,attrs:{perm:c}}),h=I.backend_util.getInnerMostAxes(h.length,u)),I.backend_util.assertAxesAreInnerMostDims("sum",h,p.shape.length);const[d,f]=I.backend_util.computeOutAndReduceShapes(p.shape,h),m=I.backend_util.upcastType(p.dtype,"int32");let g=(0,wd.l)(n,d,m);const y=I.D5U.sizeFromShape(f),b=n.data.get(g.dataId).values,x=n.data.get(p.dataId).values;for(let w=0;w<b.length;++w){const e=w*y;let t=0;for(let n=0;n<y;++n)t+=x[e+n];b[w]=t}if(i){const e=g;g=qh({inputs:{x:g},backend:n,attrs:{shape:I.backend_util.expandShapeToKeepDim(g.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(p),g}const kd={kernelName:I.GBy,backendName:"cpu",kernelFunc:vd};const Id={kernelName:I.$g6,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:u}=I.backend_util.decodeEinsumEquation(s,a.length);I.backend_util.checkEinsumDimSizes(i.length,u,a);const{path:l,steps:c}=I.backend_util.getEinsumComputePath(o,u),h=c.length;let p=null,d=i.length;const f=[];for(let m=0;m<h;++m){for(const e of c[m]){const{permutationIndices:t,expandDims:r}=I.backend_util.getEinsumPermutation(d,u[e]);let s;I.backend_util.isIdentityPermutation(t)?s=a[e]:(s=(0,ap.p)({inputs:{x:a[e]},backend:n,attrs:{perm:t}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);I.D5U.arraysEqual(s.shape,i)||(s=qh({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===p?p=s:(p=(0,xd.Jp)({inputs:{a:s,b:p},backend:n}),f.push(p))}m<h-1&&(l[m]>=0&&(p=vd({inputs:{x:p},backend:n,attrs:{axis:l[m]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const m of f)m!==p&&n.disposeIntermediateTensorInfo(m);return p}};const Sd={kernelName:I.HEU,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;(0,$h.H)([r,s],"eluGrad");const a=new Float32Array(I.D5U.sizeFromShape(s.shape)),i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let u=0;u<i.length;++u){const e=i[u];a[u]=e>=0?o[u]:o[u]*(e+1)}return n.makeTensorInfo(s.shape,"float32",a)}};var Nd=n(7679);const Td=I.backend_util.ERF_P,Cd=I.backend_util.ERF_A1,$d=I.backend_util.ERF_A2,Ed=I.backend_util.ERF_A3,Ad=I.backend_util.ERF_A4,_d=I.backend_util.ERF_A5,Dd=(0,_h.A)(I.Omj,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Td*n);return t*(1-((((_d*r+Ad)*r+Ed)*r+$d)*r+Cd)*r*Math.exp(-n*n))})),Rd={kernelName:I.Omj,backendName:"cpu",kernelFunc:Dd};var Od=n(1211);function Fd(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,i=s.shape.length,o=s.shape.slice();let u=a;return a<0&&(I.D5U.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+a+1),o.splice(u,0,1),qh({inputs:{x:s},backend:n,attrs:{shape:o}})}const Md={kernelName:I.YFo,backendName:"cpu",kernelFunc:Fd};var Bd=n(969);const Ld=(0,Bh.b)(((e,t)=>e/t)),zd=(0,gp.j)(I.oHH,Ld),Ud={kernelName:I.oHH,backendName:"cpu",kernelFunc:zd};var Pd=n(1649);function Vd(e,t,n){const r=e.shape,s=r[0],a=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[s,a],c=I.D5U.sizeFromShape(l),h=I.D5U.getTypedArrayFromDType("float32",c),p=I.D5U.getTypedArrayFromDType("float32",c);for(let g=0;g<s;g++){const e=(0,Ap.tP)({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,a]}}),r=(0,Ap.tP)({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,a]}}),s=(0,Up.P)({inputs:{real:e,imag:r},backend:n}),{real:i,imag:l}=Wd(s,t,n),c=I.backend_util.mergeRealAndImagArrays(i,l);for(let t=0;t<a;t++){const e=I.backend_util.getComplexWithIndex(c,t);h[g*a+t]=e.real,p[g*a+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s)}const d=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",p),m=(0,Up.P)({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function Wd(e,t,n){const r=I.D5U.sizeFromShape(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0===((o=r)&o-1)){const s=Gd(a,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),a=n.makeTensorInfo([],"float32",I.D5U.createScalarValue(r,"float32")),i=(0,Oh.y)({inputs:{x:a},backend:n}),u=Ud.kernelFunc({inputs:{a:e,b:a},backend:n}),l=Ud.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return s}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let r=0;r<t;r++){const o=I.backend_util.exponent(s*r,t,n),u=I.backend_util.getComplexWithIndex(e,r);a+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(a/=t,i/=t),I.backend_util.assignToTypedArray(r,a,i,s)}return r}(I.backend_util.mergeRealAndImagArrays(a,i),r,t);return I.backend_util.splitRealAndImagArrays(e)}var o}function Gd(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=I.backend_util.mergeRealAndImagArrays(e,t),i=n/2,o=I.backend_util.complexWithEvenIndex(a),u=o.real,l=o.imag,c=[u.length],h=s.makeTensorInfo(c,"float32",u),p=s.makeTensorInfo(c,"float32",l),d=(0,Up.P)({inputs:{real:h,imag:p},backend:s}),f=I.backend_util.complexWithOddIndex(a),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),x=s.makeTensorInfo(y,"float32",g),w=(0,Up.P)({inputs:{real:b,imag:x},backend:s}),v=Gd(u,l,i,r,s),k=v.real,S=v.imag,N=[k.length],T=s.makeTensorInfo(N,"float32",k),C=s.makeTensorInfo(N,"float32",S),$=(0,Up.P)({inputs:{real:T,imag:C},backend:s}),E=Gd(m,g,i,r,s),A=E.real,_=E.imag,D=[A.length],R=s.makeTensorInfo(D,"float32",A),O=s.makeTensorInfo(D,"float32",_),F=(0,Up.P)({inputs:{real:R,imag:O},backend:s}),M=I.backend_util.exponents(n,r),B=[M.real.length],L=s.makeTensorInfo(B,"float32",M.real),z=s.makeTensorInfo(B,"float32",M.imag),U=(0,Up.P)({inputs:{real:L,imag:z},backend:s}),P=(0,xd.Jp)({inputs:{a:U,b:F},backend:s}),V=(0,Xh.IH)({inputs:{a:$,b:P},backend:s}),W=(0,Pd.lu)({inputs:{a:$,b:P},backend:s}),G=(0,Hp.k)({inputs:{input:V},backend:s}),H=(0,Hp.k)({inputs:{input:W},backend:s}),j=Wp({inputs:{input:V},backend:s}),X=Wp({inputs:{input:W},backend:s}),q=jp({inputs:[G,H],backend:s,attrs:{axis:0}}),K=jp({inputs:[j,X],backend:s,attrs:{axis:0}}),Y=s.data.get(q.dataId).values,Q=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(T),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(R),s.disposeIntermediateTensorInfo(O),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(X),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:Y,imag:Q}}const Hd={kernelName:I.vwp,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=I.D5U.sizeFromShape(r.shape),a=r.shape[r.shape.length-1],i=qh({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=Vd(i,!1,n),u=qh({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function jd(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,i=a||I.D5U.inferDtype(s),o=I.D5U.getArrayFromDType(i,I.D5U.sizeFromShape(r));return function(e,t,n){e.fill(t)}(o,s),t.makeTensorInfo(r,i,o)}const Xd={kernelName:I.deh,backendName:"cpu",kernelFunc:jd};const qd={kernelName:I.Uyb,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=I.D5U.getTypedArrayFromDType(n.dtype,I.D5U.sizeFromShape(n.shape)),[a,i,o,u]=n.shape,l=r.data.get(n.dataId).values;for(let c=0;c<a;c++){const e=c*o*i*u;for(let t=0;t<i;t++){const n=t*(o*u);for(let t=0;t<o;t++){const r=t*u;for(let a=0;a<u;a++){const i=Math.round(o-t-1),c=e+n+r+a;let h=l[c];if(i>=0&&i<o){h=l[e+n+i*u+a]}s[c]=h}}}}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var Kd=n(6574),Yd=n(4892);const Qd={kernelName:I._V0,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=qp({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=qh({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=(0,Xh.IH)({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=(0,Xh.IH)({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(d){const e=m;if("NCHW"===c&&"prelu"===d&&1===o.shape.length&&1!==o.shape[0]){const e=qh({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=jh(n,m,d,e,f),n.disposeIntermediateTensorInfo(e)}else m=jh(n,m,d,o,f);n.disposeIntermediateTensorInfo(e)}return m}};const Zd={kernelName:I.luS,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=cd({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=(0,Xh.IH)({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=jh(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}};var Jd=n(1820);const ef={kernelName:I.q1x,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=I.D5U.sizeFromShape(r.shape),i=s.shape,o=i[i.length-1],[u,l,c,h]=I.backend_util.prepareAndValidate(r,s);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const p=n.data.get(s.dataId).values,d=n.bufferSync(r),f=(0,Jd.m)(p,d,r.dtype,l,o,c,h,r.shape,a);return n.makeTensorInfo(u,r.dtype,f.values)}};var tf=n(4468);const nf={kernelName:I.qi_,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r;(0,$h.H)([s,a],"gatherV2");const u=I.D5U.parseAxisParam(i,s.shape)[0],l=n.data.get(a.dataId).values,c=s.shape[u];for(let w=0;w<l.length;++w){const e=l[w];I.D5U.assert(e<=c-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const p=I.D5U.sizeFromShape(a.shape),d=I.backend_util.segment_util.collectGatherOpShapeInfo(s,a,u,h),f=qh({inputs:{x:s},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=qh({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,p/d.batchSize]}}),g=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize],y=n.bufferSync(m),b=n.bufferSync(f),x=(0,tf.i)(b,y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(d.outputShape,x.dtype,x.values)}};var rf=n(6272),sf=n(6259);const af={kernelName:I.Qg5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=I.D5U.sizeFromShape(r.shape),a=r.shape[r.shape.length-1],i=qh({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=Vd(i,!0,n),u=qh({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},of=(0,_h.A)(I.avt,(e=>Number.isFinite(e)?1:0),"bool"),uf={kernelName:I.avt,backendName:"cpu",kernelFunc:of},lf=(0,_h.A)(I.iWB,(e=>Math.abs(e)===1/0?1:0),"bool"),cf={kernelName:I.iWB,backendName:"cpu",kernelFunc:lf},hf=(0,_h.A)(I.r7n,(e=>Number.isNaN(e)?1:0),"bool"),pf={kernelName:I.r7n,backendName:"cpu",kernelFunc:hf};var df=n(8405),ff=n(635),mf=n(1325);const gf={kernelName:I.e7N,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=(0,mf.b)(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}};var yf=n(5223);const bf=(0,_h.A)(I.kU,(e=>Math.log1p(e))),xf={kernelName:I.kU,backendName:"cpu",kernelFunc:bf},wf=(0,Bh.b)(((e,t)=>e&&t)),vf=(0,gp.j)(I.PYm,wf,null,"bool"),kf={kernelName:I.PYm,backendName:"cpu",kernelFunc:vf},If=(0,_h.A)(I.VfG,(e=>e?0:1),"bool"),Sf={kernelName:I.VfG,backendName:"cpu",kernelFunc:If},Nf=(0,Bh.b)(((e,t)=>e||t)),Tf=(0,gp.j)(I.MZg,Nf,null,"bool"),Cf={kernelName:I.MZg,backendName:"cpu",kernelFunc:Tf};const $f={kernelName:I.eZ0,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=r;(0,$h.H)(s,"LRN");const l=s.shape[3],c=l-1,h=n.data.get(s.dataId).values,p=I.D5U.sizeFromShape(s.shape),d=new Float32Array(p);function f(e){const t=e%l;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let m=0;m<p;m++){const e=f(m),t=h[m]*Math.pow(i+o*e,-u);d[m]=t}return n.makeTensorInfo(s.shape,s.dtype,d)}};const Ef={kernelName:I.Hhh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;(0,$h.H)(i,"LRNGrad");const h=I.D5U.sizeFromShape(i.shape),p=i.shape[3],d=n.data.get(i.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){const e=b%p,t=b-e+Math.max(0,e-o),n=b-e+Math.min(p,e+o+1);let r=0;for(let s=t;s<n;s++)r+=Math.pow(f[s],2);r=l*r+u;for(let s=t;s<n;s++){let e=-2*l*c*f[s]*m[b]/r;b===s&&(e+=Math.pow(r,-c)),e*=d[b],g[s]+=e}}return n.makeTensorInfo(i.shape,s.dtype,g)}};var Af=n(5126),_f=n(7107);function Df(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=n;let u=s.shape;const l=u.length,c=I.D5U.parseAxisParam(a,u);let h=c;const p=I.backend_util.getAxesPermutation(h,l);let d=o.data.get(s.dataId).values;if(null!=p){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[p[t]];d=(0,_f.H)(d,u,s.dtype,p,e),h=I.backend_util.getInnerMostAxes(h.length,l),u=e}(0,$h.H)(s,"max"),I.backend_util.assertAxesAreInnerMostDims("max",h,l);const[f,m]=I.backend_util.computeOutAndReduceShapes(u,h),g=I.D5U.sizeFromShape(m),y=(0,Af.B)(d,g,f,s.dtype),b=o.write(y,f,s.dtype);let x=f;if(i){x=I.backend_util.expandShapeToKeepDim(f,c)}return{dataId:b,shape:x,dtype:s.dtype}}const Rf={kernelName:I.YoZ,backendName:"cpu",kernelFunc:Df};var Of=n(1717);const Ff={kernelName:I.mTV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;(0,$h.H)(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;I.D5U.assert(I.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=I.backend_util.computePool2DInfo(s.shape,a,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&I.D5U.arraysEqual(l.inShape,l.outShape))c=(0,Oh.y)({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=I.D5U.computeStrides(s.shape),r=kp(e,0,s.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}};const Mf={kernelName:I.OAf,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;(0,$h.H)(s,"maxPool3d");const c=I.backend_util.computePool3DInfo(s.shape,a,i,1,o,u,l),h=Sp(n.data.get(s.dataId).values,0,s.dtype,I.D5U.computeStrides(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}};const Bf={kernelName:I.OU7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;(0,$h.H)([s,a],"maxPool3DGrad");const c=I.backend_util.computePool3DInfo(a.shape,i,o,1,u,l),h=function(e,t){const n=(0,I.f3b)(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-p;let x=b;for(;x<0;)x+=i;const w=Math.min(t.inDepth,l+b);for(let r=0;r<t.outHeight;++r){const l=r*s-d;let p=l;for(;p<0;)p+=o;const v=Math.min(t.inHeight,c+l);for(let s=0;s<t.outWidth;++s){const d=s*a-f;let k=d;for(;k<0;)k+=u;const I=Math.min(t.inWidth,h+d);let S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<w;t+=i){const n=t-b;for(let r=p;r<v;r+=o){const s=r-l;for(let a=k;a<I;a+=u){const i=a-d,o=e.get(m,t,r,a,g);o>=S&&(S=o,N=n*c*h+s*c+i)}}}n.set(N,m,y,r,s,g)}}}return n}(n.bufferSync(a),c),p=c.strideDepth,d=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=b-1-c.padInfo.front,k=w-1-c.padInfo.left,S=x-1-c.padInfo.top,N=(0,I.f3b)(a.shape,"float32"),T=n.bufferSync(s);for(let I=0;I<c.batchSize;++I)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=t-v,a=n-S,i=r-k;let o=0;for(let t=0;t<b;t+=m){const n=(s+t)/p;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let r=0;r<x;r+=g){const s=(a+r)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let a=0;a<w;a+=y){const u=(i+a)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const l=b*x*w-1-h.get(I,n,s,u,e)===t*x*w+r*w+a?1:0;if(0===l)continue;o+=T.get(I,n,s,u,e)*l}}}N.set(o,I,t,n,r,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const Lf={kernelName:I.OV7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;(0,$h.H)([a,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=I.backend_util.computePool2DInfo(o.shape,u,l,1,c,h),d=n.data.get(o.dataId).values,f=(0,I.f3b)(p.outShape,o.dtype,Ip(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,v=w-1-p.padInfo.left,k=x-1-p.padInfo.top,S=(0,I.f3b)(o.shape,"float32"),N=n.data.get(s.dataId).values,T=(0,I.f3b)(s.shape,"float32",N);for(let I=0;I<p.batchSize;++I)for(let e=0;e<p.inChannels;++e)for(let t=0;t<p.inHeight;++t)for(let n=0;n<p.inWidth;++n){const r=t-k,s=n-v;let a=0;for(let t=0;t<x;t+=y){const n=(r+t)/m;if(!(n<0||n>=p.outHeight||Math.floor(n)!==n))for(let r=0;r<w;r+=b){const i=(s+r)/g;if(i<0||i>=p.outWidth||Math.floor(i)!==i)continue;const o=x*w-1-f.get(I,n,i,e)===t*w+r?1:0;if(0===o)continue;a+=T.get(I,n,i,e)*o}}S.set(a,I,t,n,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const zf={kernelName:I.vFR,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;(0,$h.H)(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=I.backend_util.computePool2DInfo(r.shape,s,a,[1,1],i),[h,p]=function(e,t,n,r,s){const a=kp(e,0,n,I.D5U.computeStrides(t),s,"max"),i=Ip(e,t,n,s,!0,r);return[a.values,i.values]}(l,r.shape,r.dtype,o,c),d=u.write(h,c.outShape,r.dtype),f=u.write(p,c.outShape,r.dtype);return[{dataId:d,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};const Uf={kernelName:I.q2K,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=I.D5U.parseAxisParam(a,s.shape),u=I.backend_util.computeOutAndReduceShapes(s.shape,o),l=I.D5U.sizeFromShape(u[1]),c=[],h=n.makeTensorInfo([],"float32",new Float32Array([l]));c.push(h);const p=(0,Mp.pj)({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});c.push(p);const d=zd({inputs:{a:p,b:h},backend:n});c.push(d);const f=vd({inputs:{x:d},backend:n,attrs:{axis:a,keepDims:i}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};const Pf={kernelName:I.c17,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;(0,$h.H)(s,"min");const o=I.D5U.parseAxisParam(a,s.shape);let u=o;const l=I.backend_util.getAxesPermutation(u,s.shape.length);let c=s;null!=l&&(c=(0,ap.p)({inputs:{x:s},backend:n,attrs:{perm:l}}),u=I.backend_util.getInnerMostAxes(u.length,s.shape.length)),I.backend_util.assertAxesAreInnerMostDims("min",u,c.shape.length);const[h,p]=I.backend_util.computeOutAndReduceShapes(c.shape,u),d=I.D5U.sizeFromShape(p),f=I.D5U.makeZerosTypedArray(I.D5U.sizeFromShape(h),c.dtype),m=n.data.get(c.dataId).values;for(let y=0;y<f.length;++y){const e=y*d;let t=m[e];for(let n=0;n<d;++n){const r=m[e+n];(Number.isNaN(r)||r<t)&&(t=r)}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=qh({inputs:{x:g},backend:n,attrs:{shape:I.backend_util.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var Vf=n(612);const Wf={kernelName:I.jQs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:i}=r;(0,$h.H)(s,"mirrorPad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=a.map((e=>e[0])),l=a.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===i?0:1,h=n.data.get(s.dataId).values,p=s.shape.length,d=I.D5U.computeStrides(s.shape),f=I.D5U.sizeFromShape(o),m=o.length,g=I.D5U.computeStrides(o),y=I.D5U.getTypedArrayFromDType(s.dtype,f);for(let b=0;b<f;b++){let e=I.D5U.indexToLoc(b,m,g);for(let n=0;n<m;n++)e[n]<u[n]?e[n]=2*u[n]-e[n]-c:e[n]>=l[n]&&(e[n]=2*(l[n]-1)-e[n]+c);e=e.map(((e,t)=>e-u[t]));const t=I.D5U.locToIndex(e,p,d);y[b]=h[t]}return{dataId:n.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},Gf=(0,Bh.b)(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),Hf=(0,gp.j)(I.Vbg,Gf),jf={kernelName:I.Vbg,backendName:"cpu",kernelFunc:Hf};function Xf(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=s.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=I.D5U.parseAxisParam([o],s.shape),l=Df({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=I.backend_util.expandShapeToKeepDim(l.shape,u),h=qh({inputs:{x:l},backend:n,attrs:{shape:c}}),p=(0,Pd.lu)({inputs:{a:s,b:h},backend:n}),d=(0,Od.Qq)({inputs:{x:p},backend:n}),f=vd({inputs:{x:d},backend:n,attrs:{axis:u,keepDims:!1}}),m=qh({inputs:{x:f},backend:n,attrs:{shape:c}}),g=zd({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const qf={kernelName:I.Gcp,backendName:"cpu",kernelFunc:Xf};const Kf={kernelName:I.NZg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r;(0,$h.H)(s,"multinomial");const u=o?s:Xf({inputs:{logits:s},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,p=[l,a],d=I.D5U.makeZerosTypedArray(I.D5U.sizeFromShape(p),"int32");for(let f=0;f<l;++f){const e=f*c,t=new Float32Array(c-1);t[0]=h[e];for(let s=1;s<t.length;++s)t[s]=t[s-1]+h[e+s];const n=Qc.alea(i.toString()),r=f*a;for(let s=0;s<a;++s){const e=n();d[r+s]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){d[r+s]=n;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(p,"int32",d)}};var Yf=n(854);const Qf=I.GDt.GP;const Zf={kernelName:I.uv1,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;(0,$h.H)(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=Qf(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Jf=I.GDt.qP;const em={kernelName:I.cye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;(0,$h.H)(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:d}=Jf(c,h,i,o,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},tm=I.GDt.pA;const nm={kernelName:I.W0H,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;(0,$h.H)(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,p=i,d=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=tm(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};var rm=n(8584);const sm={kernelName:I.we_,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:u}=r;(0,$h.H)(s,"oneHot");const l=I.D5U.sizeFromShape(s.shape),c=new Float32Array(l*i);c.fill(u);const h=n.data.get(s.dataId).values;for(let p=0;p<l;++p)h[p]>=0&&h[p]<i&&(c[p*i+h[p]]=o);return n.makeTensorInfo([...s.shape,i],a,c)}};function am(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=(0,Hp.k)({inputs:{input:r},backend:n}),t=am({inputs:{x:e},backend:n}),s=Wp({inputs:{input:r},backend:n}),a=am({inputs:{x:s},backend:n}),i=(0,Up.P)({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return jd({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const im={kernelName:I.RuY,backendName:"cpu",kernelFunc:am};const om={kernelName:I.qWM,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=(0,Hp.k)({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=Wp({inputs:{input:s},backend:r}),i=am({inputs:{x:a},backend:r}),o=(0,Up.P)({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return jd({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function um(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return Fd({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{I.D5U.assertShapesMatch(a,e.shape,"All tensors passed to stack must have matching shapes"),I.D5U.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=jp({inputs:t.map((e=>{const t=Fd({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const lm={kernelName:I.QiL,backendName:"cpu",kernelFunc:um};const cm={kernelName:I.lyA,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;(0,$h.H)(s,"pad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=a.map((e=>e[0])),l=n.data.get(s.dataId).values,c=I.D5U.sizeFromShape(s.shape),h=s.shape.length,p=I.D5U.computeStrides(s.shape),d=I.D5U.sizeFromShape(o),f=o.length,m=I.D5U.computeStrides(o),g=I.D5U.getTypedArrayFromDType(s.dtype,d);0!==i&&g.fill(i);for(let y=0;y<c;y++){const e=I.D5U.indexToLoc(y,h,p).map(((e,t)=>e+u[t]));g[I.D5U.locToIndex(e,f,m)]=l[y]}return{dataId:n.write(g,o,s.dtype),shape:o,dtype:s.dtype}}},hm=(0,Bh.b)(((e,t)=>Math.pow(e,t))),pm=(0,gp.j)(I.pe_,hm),dm={kernelName:I.pe_,backendName:"cpu",kernelFunc:pm};var fm=n(9560),mm=n(9885);const gm={kernelName:I.dDz,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,u=s.map((e=>n.data.get(e.dataId).values)),l=s.map((e=>e.shape)),c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,[p,d,f]=(0,mm.c)(u,l,c,a.shape,a.dtype,h,i.shape,o),m=p.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,a.dtype,d);return m.concat([g])}};var ym=n(6486);const bm={kernelName:I.CQl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=(0,ym.S)(i,r.shape,r.dtype,o,s.shape,u,a.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([c.length],r.dtype,c)]}};var xm=n(8306);const wm={kernelName:I.BiW,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,l=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,p=o.map((e=>n.data.get(e.dataId).values)),d=o.map((e=>e.shape)),[f,m]=(0,xm.p)(l,s.shape,c,a.shape,a.dtype,h,i.shape,p,d,u);return n.makeTensorInfo(f,a.dtype,m)}};var vm=n(9230);const km={kernelName:I.e6w,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=(0,vm.b)(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},Im=(0,_h.A)(I.$HU,(e=>1/e)),Sm={kernelName:I.$HU,backendName:"cpu",kernelFunc:Im};const Nm={kernelName:I._Yw,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;(0,$h.H)(s,"resizeBilinear");const u=I.D5U.computeStrides(s.shape),[l,c]=o,[h,p,d,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(I.D5U.sizeFromShape([h,l,c,f])),y=[a&&l>1?p-1:p,a&&c>1?d-1:d],b=[a&&l>1?l-1:l,a&&c>1?c-1:c];let x=0;const w=y[0]/b[0],v=y[1]/b[1];for(let k=0;k<h;k++)for(let e=0;e<l;e++){let t;t=i?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(p-1,Math.ceil(t)),a=k*u[0]+n*u[1],o=k*u[0]+s*u[1];for(let e=0;e<c;e++){let t;t=i?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),s=t-n,l=Math.min(d-1,Math.ceil(t)),c=a+n*u[2],h=o+n*u[2],p=a+l*u[2],y=o+l*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],a=t+(m[p+e]-t)*s;g[x++]=a+(n+(m[y+e]-n)*s-a)*r}}}return n.makeTensorInfo([h,l,c,f],"float32",g)}};const Tm={kernelName:I.zbQ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;(0,$h.H)([a,s],"resizeBilinearGrad");const o=I.D5U.computeStrides(s.shape),[u,l,c,h]=s.shape,[,p,d]=a.shape,f=new Float32Array(u*l*c*h),m=[i&&p>1?l-1:l,i&&d>1?c-1:c],g=[i&&p>1?p-1:p,i&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(a.dataId).values;let w=0;for(let v=0;v<u;v++){const e=v*o[0];for(let t=0;t<p;t++){const n=t*y,r=Math.floor(n),s=Math.min(Math.ceil(n),l-1),a=e+r*o[1],i=e+s*o[1],u=n-r,p=1-u;for(let e=0;e<d;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,l=1-s,d=a+n*o[2],m=a+r*o[2],g=i+n*o[2],y=i+r*o[2],v=p*l,k=p*s,I=u*l,S=u*s;for(let e=0;e<h;e++){const t=x[w++];f[d+e]+=t*v,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}};const Cm={kernelName:I.dpD,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;(0,$h.H)(s,"resizeNearestNeighbor");const u=I.D5U.computeStrides(s.shape),[l,c]=o,[h,p,d,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(h*l*c*f),y=[a&&l>1?p-1:p,a&&c>1?d-1:d],b=[a&&l>1?l-1:l,a&&c>1?c-1:c],x=y[0]/b[0],w=y[1]/b[1];let v=0;for(let k=0;k<h;k++){const e=k*u[0];for(let t=0;t<l;t++){const n=i?x*(t+.5):x*t;let r=Math.min(p-1,a?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const s=e+r*u[1];for(let e=0;e<c;e++){const t=i?w*(e+.5):w*e;let n=Math.min(d-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=s+n*u[2];for(let e=0;e<f;e++){g[v++]=m[r+e]}}}}return n.makeTensorInfo([h,l,c,f],s.dtype,g)}};const $m={kernelName:I.Hmb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;(0,$h.H)([a,s],"resizeNearestNeighborGrad");const o=I.D5U.computeStrides(s.shape),u=I.D5U.computeStrides(a.shape),[l,c,h,p]=s.shape,[,d,f]=a.shape,m=new Float32Array(l*c*h*p),g=n.data.get(a.dataId).values,y=[i&&d>1?c-1:c,i&&f>1?h-1:h],b=[i&&d>1?d-1:d,i&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,k=1/w,S=2*Math.ceil(v)+2,N=2*Math.ceil(k)+2;for(let I=0;I<l;I++){const e=I*o[0];for(let t=0;t<c;t++){const n=e+t*o[1],r=Math.floor(t*v),s=Math.floor(r-S/2);for(let a=0;a<h;a++){const r=n+a*o[2],l=Math.floor(a*k),y=Math.floor(l-N/2);for(let n=0;n<p;n++){let o=0;for(let r=0;r<S;r++){const l=r+s;if(l<0||l>=d)continue;const p=e+l*u[1],m=l*x;if(t===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<N;e++){const t=e+y;if(t<0||t>=f)continue;const r=p+t*u[2],s=t*w;a===Math.min(h-1,i?Math.round(s):Math.floor(s))&&(o+=g[r+n])}}m[r+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}};const Em={kernelName:I.mKl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;(0,$h.H)(s,"reverse");const i=s.shape.length,o=I.D5U.parseAxisParam(a,s.shape);if(0===i)return(0,Oh.y)({inputs:{x:s},backend:n});const u=new I.YDk(s.shape,s.dtype),l=n.bufferSync(s);for(let c=0;c<u.size;c++){const e=u.indexToLoc(c),t=e.slice();o.forEach((e=>t[e]=s.shape[e]-1-t[e])),u.set(l.get(...t),...e)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},Am={kernelName:I.b9H,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,u=I.D5U.getTypedArrayFromDType(r.dtype,I.D5U.sizeFromShape(r.shape)),[l,c,h,p]=r.shape,[d,f]=I.backend_util.getImageCenter(i,c,h),m=Math.sin(s),g=Math.cos(s),y=o.data.get(r.dataId).values;for(let b=0;b<l;b++){const e=b*h*c*p;for(let t=0;t<c;t++){const n=t*(h*p);for(let r=0;r<h;r++){const s=r*p;for(let i=0;i<p;i++){const o=[l,t,r,i],b=o[2],x=o[1];let w=(b-d)*g-(x-f)*m,v=(b-d)*m+(x-f)*g;w=Math.round(w+d),v=Math.round(v+f);let k=a;if("number"!==typeof a&&(k=3===i?255:a[i]),w>=0&&w<h&&v>=0&&v<c){k=y[e+v*(h*p)+w*p+i]}u[e+n+s+i]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},_m=(0,_h.A)(I.e07,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),Dm={kernelName:I.e07,backendName:"cpu",kernelFunc:_m};var Rm=n(7742),Om=n(1);const Fm={kernelName:I.xQA,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=I.backend_util.calculateShapes(a,s,i),p=n.bufferSync(s),d=n.bufferSync(a),f=(0,Om.N)(p,d,i,h,l,u,o,c,0,!0);return n.makeTensorInfo(i,f.dtype,f.values)}};function Mm(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function Bm(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}const Lm={kernelName:I.nr8,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=function(e,t,n,r,s,a){const i=I.D5U.getArrayFromDType("int32",n*s);for(let o=0;o<n;++o){const n=e.slice(o*r,(o+1)*r),u=o*s;for(let e=0;e<s;++e)i[u+e]="left"===a?Mm(n,t[e+u]):Bm(n,t[e+u])}return i}(n.data.get(s.dataId).values,n.data.get(a.dataId).values,s.shape[0],s.shape[1],a.shape[1],i);return n.makeTensorInfo(a.shape,"int32",o)}};const zm={kernelName:I.PhF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;(0,$h.H)([r,s,a],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,c=(0,I.x8V)(s.dtype,a.dtype),h=I.D5U.makeZerosTypedArray(I.D5U.sizeFromShape(s.shape),c);let p=0;const d=0===i||i>1||1===s.shape.length?1:I.D5U.sizeFromShape(s.shape.slice(1));for(let f=0;f<o.length;f++)for(let e=0;e<d;e++)h[p++]=1===o[f]?u[f]:l[f];return n.makeTensorInfo(s.shape,c,h)}},Um=I.backend_util.SELU_SCALEALPHA,Pm=I.backend_util.SELU_SCALE,Vm=(0,_h.A)(I.oFR,(e=>e>=0?Pm*e:Um*(Math.exp(e)-1))),Wm={kernelName:I.oFR,backendName:"cpu",kernelFunc:Vm},Gm=(0,_h.A)(I.i5y,(e=>e<0?-1:e>0?1:0)),Hm={kernelName:I.i5y,backendName:"cpu",kernelFunc:Gm},jm=(0,_h.A)(I.RQH,(e=>Math.sin(e))),Xm={kernelName:I.RQH,backendName:"cpu",kernelFunc:jm},qm=(0,_h.A)(I.wYB,(e=>Math.sinh(e))),Km={kernelName:I.wYB,backendName:"cpu",kernelFunc:qm},Ym=Math.log(1.1920928955078125e-7)+2,Qm=(0,_h.A)(I.MRv,(e=>{const t=e>-Ym,n=e<Ym,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),Zm={kernelName:I.MRv,backendName:"cpu",kernelFunc:Qm};const Jm={kernelName:I.TQc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;(0,$h.H)([s],"spaceToBatchND");const o=I.D5U.sizeFromShape(a),u=[[0,0]];u.push(...i);for(let g=1+a.length;g<s.shape.length;++g)u.push([0,0]);const l=cm.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),c=I.backend_util.getReshaped(l.shape,a,o,!1),h=I.backend_util.getPermuted(c.length,a.length,!1),p=I.backend_util.getReshapedPermuted(l.shape,a,o,!1),d=qh({inputs:{x:l},backend:n,attrs:{shape:c}}),f=(0,ap.p)({inputs:{x:d},backend:n,attrs:{perm:h}}),m=qh({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};var eg=n(2123);const tg={kernelName:I.O3z,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,p,d,f,m]=(0,eg.c)(o,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],s.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var ng=n(3849);const rg={kernelName:I.nhH,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(a.dataId).values),[l,c,h]=(0,ng.U)(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};var sg=n(3989);const ag={kernelName:I.w3H,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=(0,sg.V)(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}};const ig={kernelName:I.ZjV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=(0,sg.V)(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}};const og={kernelName:I.D2d,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:p}=I.backend_util.calculateShapes(a,s,o),d=!1,f=n.bufferSync(s);let m;switch(a.dtype){case"bool":{const e=n.bufferSync(a),t=Boolean(n.data.get(i.dataId).values[0]);m=(0,Om.N)(f,e,o,p,c,l,u,h,t,d);break}case"float32":{const e=n.bufferSync(a),t=n.data.get(i.dataId).values[0];m=(0,Om.N)(f,e,o,p,c,l,u,h,t,d);break}case"int32":{const e=n.bufferSync(a),t=n.data.get(i.dataId).values[0];m=(0,Om.N)(f,e,o,p,c,l,u,h,t,d);break}case"string":{const e=n.bufferSync(a),t=I.D5U.decodeString(n.data.get(i.dataId).values[0]);m=(0,Om.N)(f,e,o,p,c,l,u,h,t,d);break}default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(o,m.dtype,m.values)}};const ug={kernelName:I.L8s,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=I.D5U.parseAxisParam(i,s.shape)[0],u=I.backend_util.prepareSplitSize(s,a,o),l=new Array(s.shape.length).fill(0),c=s.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const r=(0,Ap.tP)({inputs:{x:s},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r}))}};var lg=n(440);const cg={kernelName:I.bK0,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;(0,$h.H)(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let i=0;i<s.length;++i){const e=s[i];a[i]=e*e}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var hg=n(212),pg=n(7693);const dg=(0,_h.A)(I.h8e,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),fg={kernelName:I.h8e,backendName:"cpu",kernelFunc:dg};var mg=n(2210);const gg={kernelName:I.jQk,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r;(0,$h.H)(s,"stridedSlice");const{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=I.kuN.sliceInfo(s.shape,a,i,o,u,l,c,h,p);let v;if(m)v=qh({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){I.D5U.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=I.kuN.computeOutShape(b,x,w),t=(0,Ap.tP)({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});v=qh({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=n.bufferSync(s),t=(0,mg.t)(d,e,w,b);v=n.makeTensorInfo(f,t.dtype,t.values)}return v}};var yg=n(6841);const bg={kernelName:I._JP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,p=n.data.get(c.dataId).values,d=n.data.get(h.dataId).values,[f,m]=(0,yg.A)(p,d,s,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};var xg=n(8639);const wg={kernelName:I.s1s,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,h]=(0,xg.Q)(o,u,s),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};var vg=n(6626);const kg={kernelName:I.XkS,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=n.data.get(a.dataId).values,o=(0,vg.h)(i,s);return n.makeTensorInfo(a.shape,"int32",o)}},Ig=(0,_h.A)(I.sEM,(e=>Math.tan(e))),Sg={kernelName:I.sEM,backendName:"cpu",kernelFunc:Ig},Ng=(0,_h.A)(I.MIZ,(e=>Math.tanh(e))),Tg={kernelName:I.MIZ,backendName:"cpu",kernelFunc:Ng};const Cg={kernelName:I.SIB,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:r,indices:s,updates:a}=t,{sliceRank:i,numUpdates:o,sliceSize:u,strides:l,outputSize:c}=I.backend_util.calculateShapes(a,s,r.shape),h=n.bufferSync(s),p=n.bufferSync(a),d=n.bufferSync(r),f=(0,Om.N)(h,p,r.shape,c,u,o,i,l,d,!1);return n.makeTensorInfo(r.shape,f.dtype,f.values)}};var $g=n(7723);const Eg={kernelName:I.n9L,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;(0,$h.H)(s,"tile");const i=(0,$g.R)(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};var Ag=n(9556);const _g={kernelName:I.cWu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r;(0,$h.H)(s,"topk");const o=n.data.get(s.dataId).values,[u,l]=(0,Ag.W)(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};const Dg={kernelName:I.wx7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[c,h,p,d]=s.shape,[f,m]=null!=l?l:[h,p],g=[c,f,m,d],y=I.D5U.computeStrides(s.shape),b=y[0],x=y[1],w=y[2],v=I.D5U.computeStrides(g),k=v[0],S=v[1],N=v[2],T=I.D5U.getTypedArrayFromDType(s.dtype,I.D5U.sizeFromShape(g));T.fill(u);const C=r.data.get(s.dataId).values,$=r.data.get(a.dataId).values;for(let I=0;I<c;++I){const e=1===a.shape[0]?$:$.subarray(8*I,8*I+8);for(let t=0;t<f;++t)for(let n=0;n<m;++n)for(let r=0;r<d;++r){let s;const a=e[6]*n+e[7]*t+1;if(0===a)continue;const l=(e[3]*n+e[4]*t+e[5])/a,c=Rg((e[0]*n+e[1]*t+e[2])/a,p,o),d=Rg(l,h,o);switch(i){case"nearest":s=Fg(C,h,p,b,x,w,I,d,c,r,u);break;case"bilinear":s=Mg(C,h,p,b,x,w,I,d,c,r,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}T[I*k+t*S+n*N+r]=s}return r.makeTensorInfo(g,s.dtype,T)}return{dataId:r.write(T,g,s.dtype),shape:s.shape,dtype:s.dtype}}};function Rg(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return I.D5U.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{n+=t*(Math.trunc(-n/(t-1))+1)}else if(n>t-1)if(t<=1)n=0;else{n-=t*Math.trunc(n/(t-1))}return I.D5U.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return I.D5U.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function Og(e,t,n,r,s,a,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*s+u*a+l]:c}function Fg(e,t,n,r,s,a,i,o,u,l,c){return Og(e,t,n,r,s,a,i,Math.round(o),Math.round(u),l,c)}function Mg(e,t,n,r,s,a,i,o,u,l,c){const h=Math.floor(o),p=Math.floor(u),d=h+1,f=p+1;return(d-o)*((f-u)*Og(e,t,n,r,s,a,i,h,p,l,c)+(u-p)*Og(e,t,n,r,s,a,i,h,f,l,c))+(o-h)*((f-u)*Og(e,t,n,r,s,a,i,d,p,l,c)+(u-p)*Og(e,t,n,r,s,a,i,d,f,l,c))}var Bg=n(5638);const Lg={kernelName:I.kpP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;(0,$h.H)(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:u,indices:l}=(0,Bg.S)(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}};const zg={kernelName:I.ToN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],u=new Array(i-1);let l=0;for(let d=0;d<i;d++)d!==a&&(u[l++]=s.shape[d]);const c=new Array(i).fill(0),h=s.shape.slice();h[a]=1;const p=new Array(o);for(let d=0;d<p.length;d++){c[a]=d;const e=(0,Ap.tP)({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});p[d]=qh({inputs:{x:e},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(e)}return p}};const Ug={kernelName:I.Qvg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r;(0,$h.H)(s,"unsortedSegmentSum");const o=[],u=[],l=s.shape.length-a.shape.length;let c=a;for(let p=0;p<l;++p){const e=Fd({inputs:{input:c},backend:n,attrs:{dim:p+1}});c=e,u.push(e)}for(let p=0;p<i;++p){const e=I.D5U.createScalarValue(p,"int32"),t=n.makeTensorInfo([],"int32",e),r=(0,Nd.Dg)({inputs:{a:t,b:c},backend:n}),a=(0,Mp.pj)({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),i=(0,xd.Jp)({inputs:{a:a,b:s},backend:n}),l=vd({inputs:{x:i},backend:n,attrs:{axis:0,keepDims:!1}});o.push(l),u.push(t),u.push(r),u.push(a),u.push(i),u.push(l)}const h=um({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},Pg=[Zh,Jh.fC,tp,rp,Xh.j4,sp,ip,op,up,lp,hp,dp,mp,xp,vp,Np,Tp,Cp,$p,Qh,Ep,_p,Rp,Op.T0,Fp,Mp.Mq,Bp.y2,zp,Up.z,Pp,Xp,Kp,Yp,Qp,Zp,Jp,ed,nd,sd,ad,id,od,ud,ld,hd,pd,dd,fd,md,gd,yd,bd,Id,Rh,Sd,Nd.Kx,Rd,Od.SX,Md,Bd.Vu,Hd,Xd,qd,Kd.Ao,Yd.EE,Qd,Zd,ef,nf,rf.Ce,sf.V,Oh.I,af,Gp,uf,cf,pf,Mh,df.zh,ff.m3,gf,yf.xM,xf,kf,Sf,Cf,$f,Ef,Rf,Of.eJ,Ff,Mf,Bf,Lf,zf,Uf,Pf,Vf.u0,Wf,jf,Kf,xd.f$,Yf.AF,Zf,em,nm,rm.nP,sm,om,lm,cm,dm,Uh,fm.Iz,gm,bm,wm,km,Hp.O,Ud,Sm,Vh,Gh,Kh,Nm,Tm,Cm,$m,Em,Am,Dm,Rm.FY,Fm,Lm,zm,Wm,Hh.BP,Hm,Xm,Km,Ap.C6,qf,Zm,Jm,tg,rg,ag,ig,og,ug,lg.cz,cg,hg.MS,pg.j,fg,gg,bg,wg,kg,Pd.GR,kd,Sg,Tg,Cg,Eg,_g,Dg,ap.b,Lg,zg,Ug,im];for(const Vg of Pg)(0,I.wCN)(Vg);n(891)},258:function(e,t){t.byteLength=function(e){var t=o(e),n=t[1];return 3*(t[0]+n)/4-n},t.toByteArray=function(e){var t,n,a=o(e),i=a[0],u=a[1],l=new s(function(e,t,n){return 3*(t+n)/4-n}(0,i,u)),c=0,h=u>0?i-4:i;for(n=0;n<h;n+=4)t=r[e.charCodeAt(n)]<<18|r[e.charCodeAt(n+1)]<<12|r[e.charCodeAt(n+2)]<<6|r[e.charCodeAt(n+3)],l[c++]=t>>16&255,l[c++]=t>>8&255,l[c++]=255&t;2===u&&(t=r[e.charCodeAt(n)]<<2|r[e.charCodeAt(n+1)]>>4,l[c++]=255&t);1===u&&(t=r[e.charCodeAt(n)]<<10|r[e.charCodeAt(n+1)]<<4|r[e.charCodeAt(n+2)]>>2,l[c++]=t>>8&255,l[c++]=255&t);return l},t.fromByteArray=function(e){for(var t,r=e.length,s=r%3,a=[],i=16383,o=0,l=r-s;o<l;o+=i)a.push(u(e,o,o+i>l?l:o+i));1===s?a.push(n[(t=e[r-1])>>2]+n[t<<4&63]+"=="):2===s&&a.push(n[(t=(e[r-2]<<8)+e[r-1])>>10]+n[t>>4&63]+n[t<<2&63]+"=");return a.join("")};for(var n=[],r=[],s="undefined"!==typeof Uint8Array?Uint8Array:Array,a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0;i<64;++i)n[i]=a[i],r[a.charCodeAt(i)]=i;function o(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function u(e,t,r){for(var s,a=[],i=t;i<r;i+=3)a.push(n[(s=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(255&e[i+2]))>>18&63]+n[s>>12&63]+n[s>>6&63]+n[63&s]);return a.join("")}r["-".charCodeAt(0)]=62,r["_".charCodeAt(0)]=63},8764:function(e,t,n){const r=n(258),s=n(645),a="function"===typeof Symbol&&"function"===typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.lW=u,t.h2=50;const i=2147483647;function o(e){if(e>i)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,u.prototype),t}function u(e,t,n){if("number"===typeof e){if("string"===typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return h(e)}return l(e,t,n)}function l(e,t,n){if("string"===typeof e)return function(e,t){"string"===typeof t&&""!==t||(t="utf8");if(!u.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const n=0|m(e,t);let r=o(n);const s=r.write(e,t);s!==n&&(r=r.slice(0,s));return r}(e,t);if(ArrayBuffer.isView(e))return function(e){if(K(e,Uint8Array)){const t=new Uint8Array(e);return d(t.buffer,t.byteOffset,t.byteLength)}return p(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(K(e,ArrayBuffer)||e&&K(e.buffer,ArrayBuffer))return d(e,t,n);if("undefined"!==typeof SharedArrayBuffer&&(K(e,SharedArrayBuffer)||e&&K(e.buffer,SharedArrayBuffer)))return d(e,t,n);if("number"===typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const r=e.valueOf&&e.valueOf();if(null!=r&&r!==e)return u.from(r,t,n);const s=function(e){if(u.isBuffer(e)){const t=0|f(e.length),n=o(t);return 0===n.length||e.copy(n,0,0,t),n}if(void 0!==e.length)return"number"!==typeof e.length||Y(e.length)?o(0):p(e);if("Buffer"===e.type&&Array.isArray(e.data))return p(e.data)}(e);if(s)return s;if("undefined"!==typeof Symbol&&null!=Symbol.toPrimitive&&"function"===typeof e[Symbol.toPrimitive])return u.from(e[Symbol.toPrimitive]("string"),t,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function c(e){if("number"!==typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function h(e){return c(e),o(e<0?0:0|f(e))}function p(e){const t=e.length<0?0:0|f(e.length),n=o(t);for(let r=0;r<t;r+=1)n[r]=255&e[r];return n}function d(e,t,n){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(n||0))throw new RangeError('"length" is outside of buffer bounds');let r;return r=void 0===t&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,t):new Uint8Array(e,t,n),Object.setPrototypeOf(r,u.prototype),r}function f(e){if(e>=i)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i.toString(16)+" bytes");return 0|e}function m(e,t){if(u.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||K(e,ArrayBuffer))return e.byteLength;if("string"!==typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const n=e.length,r=arguments.length>2&&!0===arguments[2];if(!r&&0===n)return 0;let s=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return j(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return X(e).length;default:if(s)return r?-1:j(e).length;t=(""+t).toLowerCase(),s=!0}}function g(e,t,n){let r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return A(this,t,n);case"utf8":case"utf-8":return T(this,t,n);case"ascii":return $(this,t,n);case"latin1":case"binary":return E(this,t,n);case"base64":return N(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return _(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function y(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function b(e,t,n,r,s){if(0===e.length)return-1;if("string"===typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),Y(n=+n)&&(n=s?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(s)return-1;n=e.length-1}else if(n<0){if(!s)return-1;n=0}if("string"===typeof t&&(t=u.from(t,r)),u.isBuffer(t))return 0===t.length?-1:x(e,t,n,r,s);if("number"===typeof t)return t&=255,"function"===typeof Uint8Array.prototype.indexOf?s?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):x(e,[t],n,r,s);throw new TypeError("val must be string, number or Buffer")}function x(e,t,n,r,s){let a,i=1,o=e.length,u=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;i=2,o/=2,u/=2,n/=2}function l(e,t){return 1===i?e[t]:e.readUInt16BE(t*i)}if(s){let r=-1;for(a=n;a<o;a++)if(l(e,a)===l(t,-1===r?0:a-r)){if(-1===r&&(r=a),a-r+1===u)return r*i}else-1!==r&&(a-=a-r),r=-1}else for(n+u>o&&(n=o-u),a=n;a>=0;a--){let n=!0;for(let r=0;r<u;r++)if(l(e,a+r)!==l(t,r)){n=!1;break}if(n)return a}return-1}function w(e,t,n,r){n=Number(n)||0;const s=e.length-n;r?(r=Number(r))>s&&(r=s):r=s;const a=t.length;let i;for(r>a/2&&(r=a/2),i=0;i<r;++i){const r=parseInt(t.substr(2*i,2),16);if(Y(r))return i;e[n+i]=r}return i}function v(e,t,n,r){return q(j(t,e.length-n),e,n,r)}function k(e,t,n,r){return q(function(e){const t=[];for(let n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function I(e,t,n,r){return q(X(t),e,n,r)}function S(e,t,n,r){return q(function(e,t){let n,r,s;const a=[];for(let i=0;i<e.length&&!((t-=2)<0);++i)n=e.charCodeAt(i),r=n>>8,s=n%256,a.push(s),a.push(r);return a}(t,e.length-n),e,n,r)}function N(e,t,n){return r.fromByteArray(0===t&&n===e.length?e:e.slice(t,n))}function T(e,t,n){n=Math.min(e.length,n);const r=[];let s=t;for(;s<n;){const t=e[s];let a=null,i=t>239?4:t>223?3:t>191?2:1;if(s+i<=n){let n,r,o,u;switch(i){case 1:t<128&&(a=t);break;case 2:n=e[s+1],128===(192&n)&&(u=(31&t)<<6|63&n,u>127&&(a=u));break;case 3:n=e[s+1],r=e[s+2],128===(192&n)&&128===(192&r)&&(u=(15&t)<<12|(63&n)<<6|63&r,u>2047&&(u<55296||u>57343)&&(a=u));break;case 4:n=e[s+1],r=e[s+2],o=e[s+3],128===(192&n)&&128===(192&r)&&128===(192&o)&&(u=(15&t)<<18|(63&n)<<12|(63&r)<<6|63&o,u>65535&&u<1114112&&(a=u))}}null===a?(a=65533,i=1):a>65535&&(a-=65536,r.push(a>>>10&1023|55296),a=56320|1023&a),r.push(a),s+=i}return function(e){const t=e.length;if(t<=C)return String.fromCharCode.apply(String,e);let n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=C));return n}(r)}(u.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}())||"undefined"===typeof console||"function"!==typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(u.prototype,"parent",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.buffer}}),Object.defineProperty(u.prototype,"offset",{enumerable:!0,get:function(){if(u.isBuffer(this))return this.byteOffset}}),u.poolSize=8192,u.from=function(e,t,n){return l(e,t,n)},Object.setPrototypeOf(u.prototype,Uint8Array.prototype),Object.setPrototypeOf(u,Uint8Array),u.alloc=function(e,t,n){return function(e,t,n){return c(e),e<=0?o(e):void 0!==t?"string"===typeof n?o(e).fill(t,n):o(e).fill(t):o(e)}(e,t,n)},u.allocUnsafe=function(e){return h(e)},u.allocUnsafeSlow=function(e){return h(e)},u.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==u.prototype},u.compare=function(e,t){if(K(e,Uint8Array)&&(e=u.from(e,e.offset,e.byteLength)),K(t,Uint8Array)&&(t=u.from(t,t.offset,t.byteLength)),!u.isBuffer(e)||!u.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let n=e.length,r=t.length;for(let s=0,a=Math.min(n,r);s<a;++s)if(e[s]!==t[s]){n=e[s],r=t[s];break}return n<r?-1:r<n?1:0},u.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return u.alloc(0);let n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;const r=u.allocUnsafe(t);let s=0;for(n=0;n<e.length;++n){let t=e[n];if(K(t,Uint8Array))s+t.length>r.length?(u.isBuffer(t)||(t=u.from(t)),t.copy(r,s)):Uint8Array.prototype.set.call(r,t,s);else{if(!u.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(r,s)}s+=t.length}return r},u.byteLength=m,u.prototype._isBuffer=!0,u.prototype.swap16=function(){const e=this.length;if(e%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)y(this,t,t+1);return this},u.prototype.swap32=function(){const e=this.length;if(e%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)y(this,t,t+3),y(this,t+1,t+2);return this},u.prototype.swap64=function(){const e=this.length;if(e%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)y(this,t,t+7),y(this,t+1,t+6),y(this,t+2,t+5),y(this,t+3,t+4);return this},u.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?T(this,0,e):g.apply(this,arguments)},u.prototype.toLocaleString=u.prototype.toString,u.prototype.equals=function(e){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===u.compare(this,e)},u.prototype.inspect=function(){let e="";const n=t.h2;return e=this.toString("hex",0,n).replace(/(.{2})/g,"$1 ").trim(),this.length>n&&(e+=" ... "),"<Buffer "+e+">"},a&&(u.prototype[a]=u.prototype.inspect),u.prototype.compare=function(e,t,n,r,s){if(K(e,Uint8Array)&&(e=u.from(e,e.offset,e.byteLength)),!u.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===s&&(s=this.length),t<0||n>e.length||r<0||s>this.length)throw new RangeError("out of range index");if(r>=s&&t>=n)return 0;if(r>=s)return-1;if(t>=n)return 1;if(this===e)return 0;let a=(s>>>=0)-(r>>>=0),i=(n>>>=0)-(t>>>=0);const o=Math.min(a,i),l=this.slice(r,s),c=e.slice(t,n);for(let u=0;u<o;++u)if(l[u]!==c[u]){a=l[u],i=c[u];break}return a<i?-1:i<a?1:0},u.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},u.prototype.indexOf=function(e,t,n){return b(this,e,t,n,!0)},u.prototype.lastIndexOf=function(e,t,n){return b(this,e,t,n,!1)},u.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"===typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(n)?(n>>>=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}const s=this.length-t;if((void 0===n||n>s)&&(n=s),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");let a=!1;for(;;)switch(r){case"hex":return w(this,e,t,n);case"utf8":case"utf-8":return v(this,e,t,n);case"ascii":case"latin1":case"binary":return k(this,e,t,n);case"base64":return I(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return S(this,e,t,n);default:if(a)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),a=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const C=4096;function $(e,t,n){let r="";n=Math.min(e.length,n);for(let s=t;s<n;++s)r+=String.fromCharCode(127&e[s]);return r}function E(e,t,n){let r="";n=Math.min(e.length,n);for(let s=t;s<n;++s)r+=String.fromCharCode(e[s]);return r}function A(e,t,n){const r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);let s="";for(let a=t;a<n;++a)s+=Q[e[a]];return s}function _(e,t,n){const r=e.slice(t,n);let s="";for(let a=0;a<r.length-1;a+=2)s+=String.fromCharCode(r[a]+256*r[a+1]);return s}function D(e,t,n){if(e%1!==0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function R(e,t,n,r,s,a){if(!u.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>s||t<a)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function O(e,t,n,r,s){V(t,r,s,e,n,7);let a=Number(t&BigInt(4294967295));e[n++]=a,a>>=8,e[n++]=a,a>>=8,e[n++]=a,a>>=8,e[n++]=a;let i=Number(t>>BigInt(32)&BigInt(4294967295));return e[n++]=i,i>>=8,e[n++]=i,i>>=8,e[n++]=i,i>>=8,e[n++]=i,n}function F(e,t,n,r,s){V(t,r,s,e,n,7);let a=Number(t&BigInt(4294967295));e[n+7]=a,a>>=8,e[n+6]=a,a>>=8,e[n+5]=a,a>>=8,e[n+4]=a;let i=Number(t>>BigInt(32)&BigInt(4294967295));return e[n+3]=i,i>>=8,e[n+2]=i,i>>=8,e[n+1]=i,i>>=8,e[n]=i,n+8}function M(e,t,n,r,s,a){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function B(e,t,n,r,a){return t=+t,n>>>=0,a||M(e,0,n,4),s.write(e,t,n,r,23,4),n+4}function L(e,t,n,r,a){return t=+t,n>>>=0,a||M(e,0,n,8),s.write(e,t,n,r,52,8),n+8}u.prototype.slice=function(e,t){const n=this.length;(e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e);const r=this.subarray(e,t);return Object.setPrototypeOf(r,u.prototype),r},u.prototype.readUintLE=u.prototype.readUIntLE=function(e,t,n){e>>>=0,t>>>=0,n||D(e,t,this.length);let r=this[e],s=1,a=0;for(;++a<t&&(s*=256);)r+=this[e+a]*s;return r},u.prototype.readUintBE=u.prototype.readUIntBE=function(e,t,n){e>>>=0,t>>>=0,n||D(e,t,this.length);let r=this[e+--t],s=1;for(;t>0&&(s*=256);)r+=this[e+--t]*s;return r},u.prototype.readUint8=u.prototype.readUInt8=function(e,t){return e>>>=0,t||D(e,1,this.length),this[e]},u.prototype.readUint16LE=u.prototype.readUInt16LE=function(e,t){return e>>>=0,t||D(e,2,this.length),this[e]|this[e+1]<<8},u.prototype.readUint16BE=u.prototype.readUInt16BE=function(e,t){return e>>>=0,t||D(e,2,this.length),this[e]<<8|this[e+1]},u.prototype.readUint32LE=u.prototype.readUInt32LE=function(e,t){return e>>>=0,t||D(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},u.prototype.readUint32BE=u.prototype.readUInt32BE=function(e,t){return e>>>=0,t||D(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},u.prototype.readBigUInt64LE=Z((function(e){W(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||G(e,this.length-8);const r=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,s=this[++e]+256*this[++e]+65536*this[++e]+n*2**24;return BigInt(r)+(BigInt(s)<<BigInt(32))})),u.prototype.readBigUInt64BE=Z((function(e){W(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||G(e,this.length-8);const r=t*2**24+65536*this[++e]+256*this[++e]+this[++e],s=this[++e]*2**24+65536*this[++e]+256*this[++e]+n;return(BigInt(r)<<BigInt(32))+BigInt(s)})),u.prototype.readIntLE=function(e,t,n){e>>>=0,t>>>=0,n||D(e,t,this.length);let r=this[e],s=1,a=0;for(;++a<t&&(s*=256);)r+=this[e+a]*s;return s*=128,r>=s&&(r-=Math.pow(2,8*t)),r},u.prototype.readIntBE=function(e,t,n){e>>>=0,t>>>=0,n||D(e,t,this.length);let r=t,s=1,a=this[e+--r];for(;r>0&&(s*=256);)a+=this[e+--r]*s;return s*=128,a>=s&&(a-=Math.pow(2,8*t)),a},u.prototype.readInt8=function(e,t){return e>>>=0,t||D(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},u.prototype.readInt16LE=function(e,t){e>>>=0,t||D(e,2,this.length);const n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt16BE=function(e,t){e>>>=0,t||D(e,2,this.length);const n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt32LE=function(e,t){return e>>>=0,t||D(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},u.prototype.readInt32BE=function(e,t){return e>>>=0,t||D(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},u.prototype.readBigInt64LE=Z((function(e){W(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||G(e,this.length-8);return(BigInt(this[e+4]+256*this[e+5]+65536*this[e+6]+(n<<24))<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),u.prototype.readBigInt64BE=Z((function(e){W(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||G(e,this.length-8);const r=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(r)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+n)})),u.prototype.readFloatLE=function(e,t){return e>>>=0,t||D(e,4,this.length),s.read(this,e,!0,23,4)},u.prototype.readFloatBE=function(e,t){return e>>>=0,t||D(e,4,this.length),s.read(this,e,!1,23,4)},u.prototype.readDoubleLE=function(e,t){return e>>>=0,t||D(e,8,this.length),s.read(this,e,!0,52,8)},u.prototype.readDoubleBE=function(e,t){return e>>>=0,t||D(e,8,this.length),s.read(this,e,!1,52,8)},u.prototype.writeUintLE=u.prototype.writeUIntLE=function(e,t,n,r){if(e=+e,t>>>=0,n>>>=0,!r){R(this,e,t,n,Math.pow(2,8*n)-1,0)}let s=1,a=0;for(this[t]=255&e;++a<n&&(s*=256);)this[t+a]=e/s&255;return t+n},u.prototype.writeUintBE=u.prototype.writeUIntBE=function(e,t,n,r){if(e=+e,t>>>=0,n>>>=0,!r){R(this,e,t,n,Math.pow(2,8*n)-1,0)}let s=n-1,a=1;for(this[t+s]=255&e;--s>=0&&(a*=256);)this[t+s]=e/a&255;return t+n},u.prototype.writeUint8=u.prototype.writeUInt8=function(e,t,n){return e=+e,t>>>=0,n||R(this,e,t,1,255,0),this[t]=255&e,t+1},u.prototype.writeUint16LE=u.prototype.writeUInt16LE=function(e,t,n){return e=+e,t>>>=0,n||R(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},u.prototype.writeUint16BE=u.prototype.writeUInt16BE=function(e,t,n){return e=+e,t>>>=0,n||R(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},u.prototype.writeUint32LE=u.prototype.writeUInt32LE=function(e,t,n){return e=+e,t>>>=0,n||R(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},u.prototype.writeUint32BE=u.prototype.writeUInt32BE=function(e,t,n){return e=+e,t>>>=0,n||R(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},u.prototype.writeBigUInt64LE=Z((function(e,t=0){return O(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),u.prototype.writeBigUInt64BE=Z((function(e,t=0){return F(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),u.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t>>>=0,!r){const r=Math.pow(2,8*n-1);R(this,e,t,n,r-1,-r)}let s=0,a=1,i=0;for(this[t]=255&e;++s<n&&(a*=256);)e<0&&0===i&&0!==this[t+s-1]&&(i=1),this[t+s]=(e/a>>0)-i&255;return t+n},u.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t>>>=0,!r){const r=Math.pow(2,8*n-1);R(this,e,t,n,r-1,-r)}let s=n-1,a=1,i=0;for(this[t+s]=255&e;--s>=0&&(a*=256);)e<0&&0===i&&0!==this[t+s+1]&&(i=1),this[t+s]=(e/a>>0)-i&255;return t+n},u.prototype.writeInt8=function(e,t,n){return e=+e,t>>>=0,n||R(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},u.prototype.writeInt16LE=function(e,t,n){return e=+e,t>>>=0,n||R(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},u.prototype.writeInt16BE=function(e,t,n){return e=+e,t>>>=0,n||R(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},u.prototype.writeInt32LE=function(e,t,n){return e=+e,t>>>=0,n||R(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},u.prototype.writeInt32BE=function(e,t,n){return e=+e,t>>>=0,n||R(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},u.prototype.writeBigInt64LE=Z((function(e,t=0){return O(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),u.prototype.writeBigInt64BE=Z((function(e,t=0){return F(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),u.prototype.writeFloatLE=function(e,t,n){return B(this,e,t,!0,n)},u.prototype.writeFloatBE=function(e,t,n){return B(this,e,t,!1,n)},u.prototype.writeDoubleLE=function(e,t,n){return L(this,e,t,!0,n)},u.prototype.writeDoubleBE=function(e,t,n){return L(this,e,t,!1,n)},u.prototype.copy=function(e,t,n,r){if(!u.isBuffer(e))throw new TypeError("argument should be a Buffer");if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);const s=r-n;return this===e&&"function"===typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,n,r):Uint8Array.prototype.set.call(e,this.subarray(n,r),t),s},u.prototype.fill=function(e,t,n,r){if("string"===typeof e){if("string"===typeof t?(r=t,t=0,n=this.length):"string"===typeof n&&(r=n,n=this.length),void 0!==r&&"string"!==typeof r)throw new TypeError("encoding must be a string");if("string"===typeof r&&!u.isEncoding(r))throw new TypeError("Unknown encoding: "+r);if(1===e.length){const t=e.charCodeAt(0);("utf8"===r&&t<128||"latin1"===r)&&(e=t)}}else"number"===typeof e?e&=255:"boolean"===typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;let s;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"===typeof e)for(s=t;s<n;++s)this[s]=e;else{const a=u.isBuffer(e)?e:u.from(e,r),i=a.length;if(0===i)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(s=0;s<n-t;++s)this[s+t]=a[s%i]}return this};const z={};function U(e,t,n){z[e]=class extends n{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function P(e){let t="",n=e.length;const r="-"===e[0]?1:0;for(;n>=r+4;n-=3)t=`_${e.slice(n-3,n)}${t}`;return`${e.slice(0,n)}${t}`}function V(e,t,n,r,s,a){if(e>n||e<t){const r="bigint"===typeof t?"n":"";let s;throw s=a>3?0===t||t===BigInt(0)?`>= 0${r} and < 2${r} ** ${8*(a+1)}${r}`:`>= -(2${r} ** ${8*(a+1)-1}${r}) and < 2 ** ${8*(a+1)-1}${r}`:`>= ${t}${r} and <= ${n}${r}`,new z.ERR_OUT_OF_RANGE("value",s,e)}(function(e,t,n){W(t,"offset"),void 0!==e[t]&&void 0!==e[t+n]||G(t,e.length-(n+1))})(r,s,a)}function W(e,t){if("number"!==typeof e)throw new z.ERR_INVALID_ARG_TYPE(t,"number",e)}function G(e,t,n){if(Math.floor(e)!==e)throw W(e,n),new z.ERR_OUT_OF_RANGE(n||"offset","an integer",e);if(t<0)throw new z.ERR_BUFFER_OUT_OF_BOUNDS;throw new z.ERR_OUT_OF_RANGE(n||"offset",`>= ${n?1:0} and <= ${t}`,e)}U("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),U("ERR_INVALID_ARG_TYPE",(function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`}),TypeError),U("ERR_OUT_OF_RANGE",(function(e,t,n){let r=`The value of "${e}" is out of range.`,s=n;return Number.isInteger(n)&&Math.abs(n)>2**32?s=P(String(n)):"bigint"===typeof n&&(s=String(n),(n>BigInt(2)**BigInt(32)||n<-(BigInt(2)**BigInt(32)))&&(s=P(s)),s+="n"),r+=` It must be ${t}. Received ${s}`,r}),RangeError);const H=/[^+/0-9A-Za-z-_]/g;function j(e,t){let n;t=t||1/0;const r=e.length;let s=null;const a=[];for(let i=0;i<r;++i){if(n=e.charCodeAt(i),n>55295&&n<57344){if(!s){if(n>56319){(t-=3)>-1&&a.push(239,191,189);continue}if(i+1===r){(t-=3)>-1&&a.push(239,191,189);continue}s=n;continue}if(n<56320){(t-=3)>-1&&a.push(239,191,189),s=n;continue}n=65536+(s-55296<<10|n-56320)}else s&&(t-=3)>-1&&a.push(239,191,189);if(s=null,n<128){if((t-=1)<0)break;a.push(n)}else if(n<2048){if((t-=2)<0)break;a.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;a.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;a.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return a}function X(e){return r.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(H,"")).length<2)return"";for(;e.length%4!==0;)e+="=";return e}(e))}function q(e,t,n,r){let s;for(s=0;s<r&&!(s+n>=t.length||s>=e.length);++s)t[s+n]=e[s];return s}function K(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function Y(e){return e!==e}const Q=function(){const e="0123456789abcdef",t=new Array(256);for(let n=0;n<16;++n){const r=16*n;for(let s=0;s<16;++s)t[r+s]=e[n]+e[s]}return t}();function Z(e){return"undefined"===typeof BigInt?J:e}function J(){throw new Error("BigInt not supported")}},645:function(e,t){t.read=function(e,t,n,r,s){var a,i,o=8*s-r-1,u=(1<<o)-1,l=u>>1,c=-7,h=n?s-1:0,p=n?-1:1,d=e[t+h];for(h+=p,a=d&(1<<-c)-1,d>>=-c,c+=o;c>0;a=256*a+e[t+h],h+=p,c-=8);for(i=a&(1<<-c)-1,a>>=-c,c+=r;c>0;i=256*i+e[t+h],h+=p,c-=8);if(0===a)a=1-l;else{if(a===u)return i?NaN:1/0*(d?-1:1);i+=Math.pow(2,r),a-=l}return(d?-1:1)*i*Math.pow(2,a-r)},t.write=function(e,t,n,r,s,a){var i,o,u,l=8*a-s-1,c=(1<<l)-1,h=c>>1,p=23===s?Math.pow(2,-24)-Math.pow(2,-77):0,d=r?0:a-1,f=r?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(o=isNaN(t)?1:0,i=c):(i=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-i))<1&&(i--,u*=2),(t+=i+h>=1?p/u:p*Math.pow(2,1-h))*u>=2&&(i++,u/=2),i+h>=c?(o=0,i=c):i+h>=1?(o=(t*u-1)*Math.pow(2,s),i+=h):(o=t*Math.pow(2,h-1)*Math.pow(2,s),i=0));s>=8;e[n+d]=255&o,d+=f,o/=256,s-=8);for(i=i<<s|o,l+=s;l>0;e[n+d]=255&i,d+=f,i/=256,l-=8);e[n+d-f]|=128*m}},3720:function(e){e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(N){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},a={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=a[e])?r:(n=u(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=u(e,e<0?-1:0,!1),i&&(s[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=d)return k}else{if(e<=-f)return I;if(e+1>=f)return v}return e<0?o(-e,t).neg():u(e%p|0,e/p|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=o(l(n,8)),a=g,i=0;i<e.length;i+=8){var u=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+u),n);if(u<8){var p=o(l(n,u));a=a.mul(p).add(o(h))}else a=(a=a.mul(s)).add(o(h))}return a.unsigned=t,a}function h(e,t){return"number"===typeof e?o(e,t):"string"===typeof e?c(e,t):u(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var p=4294967296,d=p*p,f=d/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var x=i(1,!0);n.UONE=x;var w=i(-1);n.NEG_ONE=w;var v=u(-1,2147483647,!1);n.MAX_VALUE=v;var k=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=u(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=o(l(e,6),this.unsigned),a=this,i="";;){var u=a.div(s),c=(a.sub(u.mul(s)).toInt()>>>0).toString(e);if((a=u).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1===(1&this.low)},S.isEven=function(){return 0===(1&this.low)},S.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},S.neg=S.negate,S.add=function(e){r(e)||(e=h(e));var t=0,n=0,s=0,a=0;return s+=(a+=(65535&this.low)+(65535&e.low))>>>16,n+=(s+=(this.low>>>16)+(e.low>>>16))>>>16,t+=(n+=(65535&this.high)+(65535&e.high))>>>16,t+=(this.high>>>16)+(e.high>>>16),u((s&=65535)<<16|(a&=65535),(t&=65535)<<16|(n&=65535),this.unsigned)},S.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=h(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=65535&this.high,s=this.low>>>16,a=65535&this.low,i=65535&e.high,l=e.low>>>16,c=65535&e.low,p=0,d=0,f=0,y=0;return f+=(y+=a*c)>>>16,d+=(f+=s*c)>>>16,f&=65535,d+=(f+=a*l)>>>16,p+=(d+=n*c)>>>16,d&=65535,p+=(d+=s*l)>>>16,d&=65535,p+=(d+=a*i)>>>16,p+=(this.high>>>16)*c+n*l+s*i+a*(e.high>>>16),u((f&=65535)<<16|(y&=65535),(p&=65535)<<16|(d&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,s,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;a=y}else{if(this.eq(I))return e.eq(b)||e.eq(w)?I:e.eq(I)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:w:(s=this.sub(e.mul(n)),a=n.add(s.div(e)));if(e.eq(I))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:l(2,i-48),p=o(n),d=p.mul(e);d.isNegative()||d.gt(s);)d=(p=o(n-=c,this.unsigned)).mul(e);p.isZero()&&(p=b),a=a.add(p),s=s.sub(d)}return a},S.div=S.divide,S.modulo=function(e){return r(e)||(e=h(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return u(~this.low,~this.high,this.unsigned)},S.and=function(e){return r(e)||(e=h(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return r(e)||(e=h(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return r(e)||(e=h(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},4155:function(e){var t,n,r=e.exports={};function s(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function i(e){if(t===setTimeout)return setTimeout(e,0);if((t===s||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(n){try{return t.call(null,e,0)}catch(n){return t.call(this,e,0)}}}(function(){try{t="function"===typeof setTimeout?setTimeout:s}catch(e){t=s}try{n="function"===typeof clearTimeout?clearTimeout:a}catch(e){n=a}})();var o,u=[],l=!1,c=-1;function h(){l&&o&&(l=!1,o.length?u=o.concat(u):c=-1,u.length&&p())}function p(){if(!l){var e=i(h);l=!0;for(var t=u.length;t;){for(o=u,u=[];++c<t;)o&&o[c].run();c=-1,t=u.length}o=null,l=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===a||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{return n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function d(e,t){this.fun=e,this.array=t}function f(){}r.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];u.push(new d(e,t)),1!==u.length||l||i(p)},d.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=f,r.addListener=f,r.once=f,r.off=f,r.removeListener=f,r.removeAllListeners=f,r.emit=f,r.prependListener=f,r.prependOnceListener=f,r.listeners=function(e){return[]},r.binding=function(e){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(e){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},6377:function(e,t,n){var r=n(4832),s=n(8652),a=n(801),i=n(2030),o=n(3618),u=n(9049),l=n(1971);l.alea=r,l.xor128=s,l.xorwow=a,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},4832:function(e,t,n){var r;(function(e,s,a){function i(e){var t=this,n=function(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)};return t}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.alea=u})(0,e=n.nmd(e))},9049:function(e,t,n){var r;(function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.tychei=u})(0,e=n.nmd(e))},8652:function(e,t,n){var r;(function(e,s,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor128=u})(0,e=n.nmd(e))},3618:function(e,t,n){var r;(function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n=s[a]=(n^=n>>>15)^(e^=e>>>12),t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),s=0,a=-32;a<u;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(s=0==(n=o[127&a]^=r+(i=i+1640531527|0))?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,o[s]=(r^=r>>>15)^(n^=n>>>12);e.w=i,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor4096=u})(0,e=n.nmd(e))},2030:function(e,t,n){var r;(function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],r[s]=n^=(e^=e<<13)^e<<9,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorshift7=u})(0,e=n.nmd(e))},801:function(e,t,n){var r;(function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorwow=u})(0,e=n.nmd(e))},1971:function(e,t,n){var r;(function(s,a,i){var o,u=256,l=i.pow(u,6),c=i.pow(2,52),h=2*c,p=u-1;function d(e,t,n){var r=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(s.crypto||s.msCrypto).getRandomValues(e)),b(e)}catch(r){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,b(a)]}}():e,3),r),d=new f(r),x=function(){for(var e=d.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=d.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,d),e.state=function(){return m(d,{})}),n?(i.random=e,t):e})(x,p,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<u;)i[s]=s++;for(s=0;s<u;s++)i[s]=i[a=p&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=p&s+1],n=n*u+i[p&(i[s]=i[a=p&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(a){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[p&s]=p&(n^=19*t[p&s])+r.charCodeAt(s++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(i.random(),a),e.exports){e.exports=d;try{o=n(8938)}catch(x){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)})("undefined"!==typeof self?self:this,[],Math)},5861:function(e,t,n){function r(e,t,n,r,s,a,i){try{var o=e[a](i),u=o.value}catch(l){return void n(l)}o.done?t(u):Promise.resolve(u).then(r,s)}function s(e){return function(){var t=this,n=arguments;return new Promise((function(s,a){var i=e.apply(t,n);function o(e){r(i,s,a,o,u,"next",e)}function u(e){r(i,s,a,o,u,"throw",e)}o(void 0)}))}}n.d(t,{Z:function(){return s}})},5671:function(e,t,n){function r(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}n.d(t,{Z:function(){return r}})},3144:function(e,t,n){n.d(t,{Z:function(){return a}});var r=n(9142);function s(e,t){for(var n=0;n<t.length;n++){var s=t[n];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,(0,r.Z)(s.key),s)}}function a(e,t,n){return t&&s(e.prototype,t),n&&s(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}},2882:function(e,t,n){function r(e){return r=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},r(e)}n.d(t,{Z:function(){return i}});var s=n(1002);function a(e,t){if(t&&("object"===(0,s.Z)(t)||"function"===typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function i(e){var t=function(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,s=r(e);if(t){var i=r(this).constructor;n=Reflect.construct(s,arguments,i)}else n=s.apply(this,arguments);return a(this,n)}}},4942:function(e,t,n){n.d(t,{Z:function(){return s}});var r=n(9142);function s(e,t,n){return(t=(0,r.Z)(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}},9340:function(e,t,n){function r(e,t){return r=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},r(e,t)}function s(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&r(e,t)}n.d(t,{Z:function(){return s}})},4165:function(e,t,n){n.d(t,{Z:function(){return s}});var r=n(1002);function s(){s=function(){return e};var e={},t=Object.prototype,n=t.hasOwnProperty,a=Object.defineProperty||function(e,t,n){e[t]=n.value},i="function"==typeof Symbol?Symbol:{},o=i.iterator||"@@iterator",u=i.asyncIterator||"@@asyncIterator",l=i.toStringTag||"@@toStringTag";function c(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{c({},"")}catch(E){c=function(e,t,n){return e[t]=n}}function h(e,t,n,r){var s=Object.create((t&&t.prototype instanceof f?t:f).prototype),i=new C(r||[]);return a(s,"_invoke",{value:I(e,n,i)}),s}function p(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(E){return{type:"throw",arg:E}}}e.wrap=h;var d={};function f(){}function m(){}function g(){}var y={};c(y,o,(function(){return this}));var b=Object.getPrototypeOf,x=b&&b(b($([])));x&&x!==t&&n.call(x,o)&&(y=x);var w=g.prototype=f.prototype=Object.create(y);function v(e){["next","throw","return"].forEach((function(t){c(e,t,(function(e){return this._invoke(t,e)}))}))}function k(e,t){function s(a,i,o,u){var l=p(e[a],e,i);if("throw"!==l.type){var c=l.arg,h=c.value;return h&&"object"==(0,r.Z)(h)&&n.call(h,"__await")?t.resolve(h.__await).then((function(e){s("next",e,o,u)}),(function(e){s("throw",e,o,u)})):t.resolve(h).then((function(e){c.value=e,o(c)}),(function(e){return s("throw",e,o,u)}))}u(l.arg)}var i;a(this,"_invoke",{value:function(e,n){function r(){return new t((function(t,r){s(e,n,t,r)}))}return i=i?i.then(r,r):r()}})}function I(e,t,n){var r="suspendedStart";return function(s,a){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===s)throw a;return{value:void 0,done:!0}}for(n.method=s,n.arg=a;;){var i=n.delegate;if(i){var o=S(i,n);if(o){if(o===d)continue;return o}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var u=p(e,t,n);if("normal"===u.type){if(r=n.done?"completed":"suspendedYield",u.arg===d)continue;return{value:u.arg,done:n.done}}"throw"===u.type&&(r="completed",n.method="throw",n.arg=u.arg)}}}function S(e,t){var n=t.method,r=e.iterator[n];if(void 0===r)return t.delegate=null,"throw"===n&&e.iterator.return&&(t.method="return",t.arg=void 0,S(e,t),"throw"===t.method)||"return"!==n&&(t.method="throw",t.arg=new TypeError("The iterator does not provide a '"+n+"' method")),d;var s=p(r,e.iterator,t.arg);if("throw"===s.type)return t.method="throw",t.arg=s.arg,t.delegate=null,d;var a=s.arg;return a?a.done?(t[e.resultName]=a.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,d):a:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,d)}function N(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function T(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function C(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(N,this),this.reset(!0)}function $(e){if(e||""===e){var t=e[o];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var s=-1,a=function t(){for(;++s<e.length;)if(n.call(e,s))return t.value=e[s],t.done=!1,t;return t.value=void 0,t.done=!0,t};return a.next=a}}throw new TypeError((0,r.Z)(e)+" is not iterable")}return m.prototype=g,a(w,"constructor",{value:g,configurable:!0}),a(g,"constructor",{value:m,configurable:!0}),m.displayName=c(g,l,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===m||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,g):(e.__proto__=g,c(e,l,"GeneratorFunction")),e.prototype=Object.create(w),e},e.awrap=function(e){return{__await:e}},v(k.prototype),c(k.prototype,u,(function(){return this})),e.AsyncIterator=k,e.async=function(t,n,r,s,a){void 0===a&&(a=Promise);var i=new k(h(t,n,r,s),a);return e.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},v(w),c(w,l,"Generator"),c(w,o,(function(){return this})),c(w,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=Object(e),n=[];for(var r in t)n.push(r);return n.reverse(),function e(){for(;n.length;){var r=n.pop();if(r in t)return e.value=r,e.done=!1,e}return e.done=!0,e}},e.values=$,C.prototype={constructor:C,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(T),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function r(n,r){return i.type="throw",i.arg=e,t.next=n,r&&(t.method="next",t.arg=void 0),!!r}for(var s=this.tryEntries.length-1;s>=0;--s){var a=this.tryEntries[s],i=a.completion;if("root"===a.tryLoc)return r("end");if(a.tryLoc<=this.prev){var o=n.call(a,"catchLoc"),u=n.call(a,"finallyLoc");if(o&&u){if(this.prev<a.catchLoc)return r(a.catchLoc,!0);if(this.prev<a.finallyLoc)return r(a.finallyLoc)}else if(o){if(this.prev<a.catchLoc)return r(a.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return r(a.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var s=this.tryEntries[r];if(s.tryLoc<=this.prev&&n.call(s,"finallyLoc")&&this.prev<s.finallyLoc){var a=s;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,d):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),d},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),T(n),d}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var s=r.arg;T(n)}return s}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:$(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),d}},e}},8152:function(e,t,n){function r(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function s(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,s,a,i,o=[],u=!0,l=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=a.call(n)).done)&&(o.push(r.value),o.length!==t);u=!0);}catch(c){l=!0,s=c}finally{try{if(!u&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(l)throw s}}return o}}(e,t)||function(e,t){if(e){if("string"===typeof e)return r(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?r(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}n.d(t,{Z:function(){return s}})},9142:function(e,t,n){n.d(t,{Z:function(){return s}});var r=n(1002);function s(e){var t=function(e,t){if("object"!==(0,r.Z)(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var s=n.call(e,t||"default");if("object"!==(0,r.Z)(s))return s;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===(0,r.Z)(t)?t:String(t)}},1002:function(e,t,n){function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}n.d(t,{Z:function(){return r}})}}]);