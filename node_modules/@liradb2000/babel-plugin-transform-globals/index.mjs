function getImportIdentifiers(globals) {
  return Object.keys(Object(globals)).reduce((object, source) => Object.keys(globals[source]).reduce((object, alias) => {
    Object.assign(object[alias] = Object(object[alias]), {
      source: source,
      name: globals[source][alias]
    });
    return object;
  }, object), {});
}

var browserGlobals = ['AbortController', 'AbortSignal', 'AbsoluteOrientationSensor', 'Accelerometer', 'AnalyserNode', 'Animation', 'AnimationEffect', 'AnimationEvent', 'AnimationPlaybackEvent', 'ApplePayError', 'ApplePaySession', 'ApplicationCache', 'ApplicationCacheErrorEvent', 'Attr', 'Audio', 'AudioBuffer', 'AudioBufferSourceNode', 'AudioContext', 'AudioDestinationNode', 'AudioListener', 'AudioNode', 'AudioParam', 'AudioParamMap', 'AudioProcessingEvent', 'AudioScheduledSourceNode', 'AudioTrack', 'AudioTrackList', 'AudioWorklet', 'AudioWorkletNode', 'AuthenticatorAssertionResponse', 'AuthenticatorAttestationResponse', 'AuthenticatorResponse', 'BarProp', 'BaseAudioContext', 'BatteryManager', 'BeforeInstallPromptEvent', 'BeforeLoadEvent', 'BeforeUnloadEvent', 'BiquadFilterNode', 'Blob', 'BlobEvent', 'Bluetooth', 'BluetoothCharacteristicProperties', 'BluetoothDevice', 'BluetoothRemoteGATTCharacteristic', 'BluetoothRemoteGATTDescriptor', 'BluetoothRemoteGATTServer', 'BluetoothRemoteGATTService', 'BluetoothUUID', 'BroadcastChannel', 'ByteLengthQueuingStrategy', 'CDATASection', 'CSS', 'CSS2Properties', 'CSSConditionRule', 'CSSCounterStyleRule', 'CSSFontFaceRule', 'CSSFontFeatureValuesRule', 'CSSGroupingRule', 'CSSImageValue', 'CSSImportRule', 'CSSKeyframeRule', 'CSSKeyframesRule', 'CSSKeywordValue', 'CSSMathInvert', 'CSSMathMax', 'CSSMathMin', 'CSSMathNegate', 'CSSMathProduct', 'CSSMathSum', 'CSSMathValue', 'CSSMatrixComponent', 'CSSMediaRule', 'CSSMozDocumentRule', 'CSSNamespaceRule', 'CSSNumericArray', 'CSSNumericValue', 'CSSPageRule', 'CSSPerspective', 'CSSPositionValue', 'CSSPrimitiveValue', 'CSSRotate', 'CSSRule', 'CSSRuleList', 'CSSScale', 'CSSSkew', 'CSSSkewX', 'CSSSkewY', 'CSSStyleDeclaration', 'CSSStyleRule', 'CSSStyleSheet', 'CSSStyleValue', 'CSSSupportsRule', 'CSSTransformComponent', 'CSSTransformValue', 'CSSTranslate', 'CSSUnitValue', 'CSSUnparsedValue', 'CSSValue', 'CSSValueList', 'CSSVariableReferenceValue', 'Cache', 'CacheStorage', 'CanvasCaptureMediaStream', 'CanvasCaptureMediaStreamTrack', 'CanvasGradient', 'CanvasPattern', 'CanvasRenderingContext2D', 'CaretPosition', 'ChannelMergerNode', 'ChannelSplitterNode', 'CharacterData', 'Clipboard', 'ClipboardEvent', 'CloseEvent', 'Comment', 'CompositionEvent', 'ConstantSourceNode', 'ConvolverNode', 'CountQueuingStrategy', 'Counter', 'Credential', 'CredentialsContainer', 'Crypto', 'CryptoKey', 'CustomElementRegistry', 'CustomEvent', 'DOMError', 'DOMException', 'DOMImplementation', 'DOMMatrix', 'DOMMatrixReadOnly', 'DOMParser', 'DOMPoint', 'DOMPointReadOnly', 'DOMQuad', 'DOMRect', 'DOMRectList', 'DOMRectReadOnly', 'DOMRequest', 'DOMStringList', 'DOMStringMap', 'DOMTokenList', 'DataCue', 'DataTransfer', 'DataTransferItem', 'DataTransferItemList', 'Database', 'DelayNode', 'DeviceMotionEvent', 'DeviceOrientationEvent', 'Directory', 'Document', 'DocumentFragment', 'DocumentType', 'DragEvent', 'DynamicsCompressorNode', 'Element', 'EnterPictureInPictureEvent', 'ErrorEvent', 'Event', 'EventSource', 'EventTarget', 'External', 'FederatedCredential', 'File', 'FileError', 'FileList', 'FileReader', 'FileSystem', 'FileSystemDirectoryEntry', 'FileSystemDirectoryReader', 'FileSystemEntry', 'FileSystemFileEntry', 'FocusEvent', 'FontFace', 'FontFaceSet', 'FontFaceSetLoadEvent', 'FormData', 'GainNode', 'Gamepad', 'GamepadButton', 'GamepadEvent', 'GamepadHapticActuator', 'GamepadPose', 'GestureEvent', 'Gyroscope', 'HTMLAllCollection', 'HTMLAnchorElement', 'HTMLAppletElement', 'HTMLAreaElement', 'HTMLAudioElement', 'HTMLBRElement', 'HTMLBaseElement', 'HTMLBodyElement', 'HTMLButtonElement', 'HTMLCanvasElement', 'HTMLCollection', 'HTMLContentElement', 'HTMLDListElement', 'HTMLDataElement', 'HTMLDataListElement', 'HTMLDetailsElement', 'HTMLDialogElement', 'HTMLDirectoryElement', 'HTMLDivElement', 'HTMLDocument', 'HTMLElement', 'HTMLEmbedElement', 'HTMLFieldSetElement', 'HTMLFontElement', 'HTMLFormControlsCollection', 'HTMLFormElement', 'HTMLFrameElement', 'HTMLFrameSetElement', 'HTMLHRElement', 'HTMLHeadElement', 'HTMLHeadingElement', 'HTMLHtmlElement', 'HTMLIFrameElement', 'HTMLImageElement', 'HTMLInputElement', 'HTMLKeygenElement', 'HTMLLIElement', 'HTMLLabelElement', 'HTMLLegendElement', 'HTMLLinkElement', 'HTMLMapElement', 'HTMLMarqueeElement', 'HTMLMediaElement', 'HTMLMenuElement', 'HTMLMenuItemElement', 'HTMLMetaElement', 'HTMLMeterElement', 'HTMLModElement', 'HTMLOListElement', 'HTMLObjectElement', 'HTMLOptGroupElement', 'HTMLOptionElement', 'HTMLOptionsCollection', 'HTMLOutputElement', 'HTMLParagraphElement', 'HTMLParamElement', 'HTMLPictureElement', 'HTMLPreElement', 'HTMLProgressElement', 'HTMLQuoteElement', 'HTMLScriptElement', 'HTMLSelectElement', 'HTMLShadowElement', 'HTMLSlotElement', 'HTMLSourceElement', 'HTMLSpanElement', 'HTMLStyleElement', 'HTMLTableCaptionElement', 'HTMLTableCellElement', 'HTMLTableColElement', 'HTMLTableElement', 'HTMLTableRowElement', 'HTMLTableSectionElement', 'HTMLTemplateElement', 'HTMLTextAreaElement', 'HTMLTimeElement', 'HTMLTitleElement', 'HTMLTrackElement', 'HTMLUListElement', 'HTMLUnknownElement', 'HTMLVideoElement', 'HashChangeEvent', 'Headers', 'History', 'IDBCursor', 'IDBCursorWithValue', 'IDBDatabase', 'IDBFactory', 'IDBFileHandle', 'IDBFileRequest', 'IDBIndex', 'IDBKeyRange', 'IDBMutableFile', 'IDBObjectStore', 'IDBOpenDBRequest', 'IDBRequest', 'IDBTransaction', 'IDBVersionChangeEvent', 'IIRFilterNode', 'IdleDeadline', 'Image', 'ImageBitmap', 'ImageBitmapRenderingContext', 'ImageCapture', 'ImageData', 'InputDeviceCapabilities', 'InputDeviceInfo', 'InputEvent', 'InstallTrigger', 'InternalError', 'IntersectionObserver', 'IntersectionObserverEntry', 'KeyEvent', 'Keyboard', 'KeyboardEvent', 'KeyboardLayoutMap', 'KeyframeEffect', 'LinearAccelerationSensor', 'Location', 'Lock', 'LockManager', 'MIDIAccess', 'MIDIConnectionEvent', 'MIDIInput', 'MIDIInputMap', 'MIDIMessageEvent', 'MIDIOutput', 'MIDIOutputMap', 'MIDIPort', 'MediaCapabilities', 'MediaCapabilitiesInfo', 'MediaController', 'MediaDeviceInfo', 'MediaDevices', 'MediaElementAudioSourceNode', 'MediaEncryptedEvent', 'MediaError', 'MediaKeyError', 'MediaKeyMessageEvent', 'MediaKeySession', 'MediaKeyStatusMap', 'MediaKeySystemAccess', 'MediaKeys', 'MediaList', 'MediaMetadata', 'MediaQueryList', 'MediaQueryListEvent', 'MediaRecorder', 'MediaRecorderErrorEvent', 'MediaSession', 'MediaSettingsRange', 'MediaSource', 'MediaStream', 'MediaStreamAudioDestinationNode', 'MediaStreamAudioSourceNode', 'MediaStreamEvent', 'MediaStreamTrack', 'MediaStreamTrackEvent', 'MerchantValidationEvent', 'MessageChannel', 'MessageEvent', 'MessagePort', 'MimeType', 'MimeTypeArray', 'MouseEvent', 'MouseScrollEvent', 'MutationEvent', 'MutationObserver', 'MutationRecord', 'NamedNodeMap', 'NavigationPreloadManager', 'Navigator', 'NetworkInformation', 'Node', 'NodeFilter', 'NodeIterator', 'NodeList', 'Notification', 'OfflineAudioCompletionEvent', 'OfflineAudioContext', 'OfflineResourceList', 'OffscreenCanvas', 'OffscreenCanvasRenderingContext2D', 'Option', 'OrientationSensor', 'OscillatorNode', 'OverconstrainedError', 'OverconstrainedErrorEvent', 'OverflowEvent', 'PageTransitionEvent', 'PaintRequest', 'PaintRequestList', 'PannerNode', 'PasswordCredential', 'Path2D', 'PaymentAddress', 'PaymentInstruments', 'PaymentManager', 'PaymentMethodChangeEvent', 'PaymentRequest', 'PaymentRequestUpdateEvent', 'PaymentResponse', 'Performance', 'PerformanceEntry', 'PerformanceLongTaskTiming', 'PerformanceMark', 'PerformanceMeasure', 'PerformanceNavigation', 'PerformanceNavigationTiming', 'PerformanceObserver', 'PerformanceObserverEntryList', 'PerformancePaintTiming', 'PerformanceResourceTiming', 'PerformanceServerTiming', 'PerformanceTiming', 'PeriodicWave', 'PermissionStatus', 'Permissions', 'PhotoCapabilities', 'PictureInPictureWindow', 'Plugin', 'PluginArray', 'PointerEvent', 'PopStateEvent', 'PopupBlockedEvent', 'Presentation', 'PresentationAvailability', 'PresentationConnection', 'PresentationConnectionAvailableEvent', 'PresentationConnectionCloseEvent', 'PresentationConnectionList', 'PresentationReceiver', 'PresentationRequest', 'ProcessingInstruction', 'ProgressEvent', 'PromiseRejectionEvent', 'PublicKeyCredential', 'PushManager', 'PushSubscription', 'PushSubscriptionOptions', 'RGBColor', 'RTCCertificate', 'RTCDTMFSender', 'RTCDTMFToneChangeEvent', 'RTCDataChannel', 'RTCDataChannelEvent', 'RTCIceCandidate', 'RTCIceTransport', 'RTCPeerConnection', 'RTCPeerConnectionIceEvent', 'RTCRtpReceiver', 'RTCRtpSender', 'RTCRtpTransceiver', 'RTCSessionDescription', 'RTCStatsReport', 'RTCTrackEvent', 'RadioNodeList', 'Range', 'ReadableStream', 'Rect', 'RelativeOrientationSensor', 'RemotePlayback', 'ReportingObserver', 'Request', 'ResizeObserver', 'ResizeObserverEntry', 'Response', 'SQLError', 'SQLResultSet', 'SQLResultSetRowList', 'SQLTransaction', 'SVGAElement', 'SVGAltGlyphDefElement', 'SVGAltGlyphElement', 'SVGAltGlyphItemElement', 'SVGAngle', 'SVGAnimateColorElement', 'SVGAnimateElement', 'SVGAnimateMotionElement', 'SVGAnimateTransformElement', 'SVGAnimatedAngle', 'SVGAnimatedBoolean', 'SVGAnimatedEnumeration', 'SVGAnimatedInteger', 'SVGAnimatedLength', 'SVGAnimatedLengthList', 'SVGAnimatedNumber', 'SVGAnimatedNumberList', 'SVGAnimatedPreserveAspectRatio', 'SVGAnimatedRect', 'SVGAnimatedString', 'SVGAnimatedTransformList', 'SVGAnimationElement', 'SVGCircleElement', 'SVGClipPathElement', 'SVGComponentTransferFunctionElement', 'SVGCursorElement', 'SVGDefsElement', 'SVGDescElement', 'SVGDiscardElement', 'SVGDocument', 'SVGElement', 'SVGEllipseElement', 'SVGFEBlendElement', 'SVGFEColorMatrixElement', 'SVGFEComponentTransferElement', 'SVGFECompositeElement', 'SVGFEConvolveMatrixElement', 'SVGFEDiffuseLightingElement', 'SVGFEDisplacementMapElement', 'SVGFEDistantLightElement', 'SVGFEDropShadowElement', 'SVGFEFloodElement', 'SVGFEFuncAElement', 'SVGFEFuncBElement', 'SVGFEFuncGElement', 'SVGFEFuncRElement', 'SVGFEGaussianBlurElement', 'SVGFEImageElement', 'SVGFEMergeElement', 'SVGFEMergeNodeElement', 'SVGFEMorphologyElement', 'SVGFEOffsetElement', 'SVGFEPointLightElement', 'SVGFESpecularLightingElement', 'SVGFESpotLightElement', 'SVGFETileElement', 'SVGFETurbulenceElement', 'SVGFilterElement', 'SVGFontElement', 'SVGFontFaceElement', 'SVGFontFaceFormatElement', 'SVGFontFaceNameElement', 'SVGFontFaceSrcElement', 'SVGFontFaceUriElement', 'SVGForeignObjectElement', 'SVGGElement', 'SVGGeometryElement', 'SVGGlyphElement', 'SVGGlyphRefElement', 'SVGGradientElement', 'SVGGraphicsElement', 'SVGHKernElement', 'SVGImageElement', 'SVGLength', 'SVGLengthList', 'SVGLineElement', 'SVGLinearGradientElement', 'SVGMPathElement', 'SVGMarkerElement', 'SVGMaskElement', 'SVGMatrix', 'SVGMetadataElement', 'SVGMissingGlyphElement', 'SVGNumber', 'SVGNumberList', 'SVGPathElement', 'SVGPathSeg', 'SVGPathSegArcAbs', 'SVGPathSegArcRel', 'SVGPathSegClosePath', 'SVGPathSegCurvetoCubicAbs', 'SVGPathSegCurvetoCubicRel', 'SVGPathSegCurvetoCubicSmoothAbs', 'SVGPathSegCurvetoCubicSmoothRel', 'SVGPathSegCurvetoQuadraticAbs', 'SVGPathSegCurvetoQuadraticRel', 'SVGPathSegCurvetoQuadraticSmoothAbs', 'SVGPathSegCurvetoQuadraticSmoothRel', 'SVGPathSegLinetoAbs', 'SVGPathSegLinetoHorizontalAbs', 'SVGPathSegLinetoHorizontalRel', 'SVGPathSegLinetoRel', 'SVGPathSegLinetoVerticalAbs', 'SVGPathSegLinetoVerticalRel', 'SVGPathSegList', 'SVGPathSegMovetoAbs', 'SVGPathSegMovetoRel', 'SVGPatternElement', 'SVGPoint', 'SVGPointList', 'SVGPolygonElement', 'SVGPolylineElement', 'SVGPreserveAspectRatio', 'SVGRadialGradientElement', 'SVGRect', 'SVGRectElement', 'SVGRenderingIntent', 'SVGSVGElement', 'SVGScriptElement', 'SVGSetElement', 'SVGStopElement', 'SVGStringList', 'SVGStyleElement', 'SVGSwitchElement', 'SVGSymbolElement', 'SVGTRefElement', 'SVGTSpanElement', 'SVGTextContentElement', 'SVGTextElement', 'SVGTextPathElement', 'SVGTextPositioningElement', 'SVGTitleElement', 'SVGTransform', 'SVGTransformList', 'SVGUnitTypes', 'SVGUseElement', 'SVGVKernElement', 'SVGViewElement', 'SVGViewSpec', 'SVGZoomAndPan', 'SVGZoomEvent', 'Screen', 'ScreenOrientation', 'ScriptProcessorNode', 'ScrollAreaEvent', 'SecurityPolicyViolationEvent', 'Selection', 'Sensor', 'SensorErrorEvent', 'ServiceWorker', 'ServiceWorkerContainer', 'ServiceWorkerRegistration', 'ShadowRoot', 'SharedWorker', 'SourceBuffer', 'SourceBufferList', 'SpeechSynthesis', 'SpeechSynthesisErrorEvent', 'SpeechSynthesisEvent', 'SpeechSynthesisUtterance', 'SpeechSynthesisVoice', 'StaticRange', 'StereoPannerNode', 'Storage', 'StorageEvent', 'StorageManager', 'StylePropertyMap', 'StylePropertyMapReadOnly', 'StyleSheet', 'StyleSheetList', 'SubtleCrypto', 'SyncManager', 'TaskAttributionTiming', 'Text', 'TextDecoderStream', 'TextEncoderStream', 'TextEvent', 'TextMetrics', 'TextTrack', 'TextTrackCue', 'TextTrackCueList', 'TextTrackList', 'TimeEvent', 'TimeRanges', 'Touch', 'TouchEvent', 'TouchList', 'TrackEvent', 'TransformStream', 'TransitionEvent', 'TreeWalker', 'UIEvent', 'USB', 'USBAlternateInterface', 'USBConfiguration', 'USBConnectionEvent', 'USBDevice', 'USBEndpoint', 'USBInTransferResult', 'USBInterface', 'USBIsochronousInTransferPacket', 'USBIsochronousInTransferResult', 'USBIsochronousOutTransferPacket', 'USBIsochronousOutTransferResult', 'USBOutTransferResult', 'UserActivation', 'UserMessageHandler', 'UserMessageHandlersNamespace', 'VRDisplay', 'VRDisplayCapabilities', 'VRDisplayEvent', 'VREyeParameters', 'VRFieldOfView', 'VRFrameData', 'VRPose', 'VRStageParameters', 'VTTCue', 'VTTRegion', 'ValidityState', 'VideoPlaybackQuality', 'VideoTrack', 'VideoTrackList', 'VisualViewport', 'WaveShaperNode', 'WebGL2RenderingContext', 'WebGLActiveInfo', 'WebGLBuffer', 'WebGLContextEvent', 'WebGLFramebuffer', 'WebGLProgram', 'WebGLQuery', 'WebGLRenderbuffer', 'WebGLRenderingContext', 'WebGLSampler', 'WebGLShader', 'WebGLShaderPrecisionFormat', 'WebGLSync', 'WebGLTexture', 'WebGLTransformFeedback', 'WebGLUniformLocation', 'WebGLVertexArrayObject', 'WebKitAnimationEvent', 'WebKitCSSMatrix', 'WebKitMediaKeyError', 'WebKitMediaKeyMessageEvent', 'WebKitMediaKeyNeededEvent', 'WebKitMediaKeySession', 'WebKitMediaKeys', 'WebKitMutationObserver', 'WebKitNamespace', 'WebKitPlaybackTargetAvailabilityEvent', 'WebKitPoint', 'WebKitTransitionEvent', 'WebSocket', 'WheelEvent', 'Window', 'Worker', 'Worklet', 'WritableStream', 'XMLDocument', 'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'XMLHttpRequestProgressEvent', 'XMLHttpRequestUpload', 'XMLSerializer', 'XPathEvaluator', 'XPathExpression', 'XPathResult', 'XSLTProcessor', 'alert', 'applicationCache', 'atob', 'blur', 'btoa', 'caches', 'cancelAnimationFrame', 'cancelIdleCallback', 'captureEvents', 'chrome', 'clientInformation', 'close', 'closed', 'confirm', 'content', 'createImageBitmap', 'crypto', 'customElements', 'defaultStatus', 'defaultstatus', 'devicePixelRatio', 'document', 'dump', 'event', 'external', 'fetch', 'find', 'focus', 'frameElement', 'frames', 'fullScreen', 'getComputedStyle', 'getDefaultComputedStyle', 'getMatchedCSSRules', 'getSelection', 'globalThis', 'history', 'indexedDB', 'innerHeight', 'innerWidth', 'isSecureContext', 'localStorage', 'location', 'locationbar', 'matchMedia', 'menubar', 'moveBy', 'moveTo', 'mozInnerScreenX', 'mozInnerScreenY', 'mozPaintCount', 'mozRTCIceCandidate', 'mozRTCPeerConnection', 'mozRTCSessionDescription', 'navigator', 'netscape', 'offscreenBuffering', 'onabort', 'onabsolutedeviceorientation', 'onafterprint', 'onanimationcancel', 'onanimationend', 'onanimationiteration', 'onanimationstart', 'onappinstalled', 'onauxclick', 'onbeforeinstallprompt', 'onbeforeprint', 'onbeforeunload', 'onblur', 'oncancel', 'oncanplay', 'oncanplaythrough', 'onchange', 'onclick', 'onclose', 'oncontextmenu', 'oncuechange', 'ondblclick', 'ondevicelight', 'ondevicemotion', 'ondeviceorientation', 'ondeviceorientationabsolute', 'ondeviceproximity', 'ondrag', 'ondragend', 'ondragenter', 'ondragexit', 'ondragleave', 'ondragover', 'ondragstart', 'ondrop', 'ondurationchange', 'onemptied', 'onended', 'onerror', 'onfocus', 'ongotpointercapture', 'onhashchange', 'oninput', 'oninvalid', 'onkeydown', 'onkeypress', 'onkeyup', 'onlanguagechange', 'onload', 'onloadeddata', 'onloadedmetadata', 'onloadend', 'onloadstart', 'onlostpointercapture', 'onmessage', 'onmessageerror', 'onmousedown', 'onmouseenter', 'onmouseleave', 'onmousemove', 'onmouseout', 'onmouseover', 'onmouseup', 'onmousewheel', 'onmozfullscreenchange', 'onmozfullscreenerror', 'onoffline', 'ononline', 'onpagehide', 'onpageshow', 'onpause', 'onplay', 'onplaying', 'onpointercancel', 'onpointerdown', 'onpointerenter', 'onpointerleave', 'onpointermove', 'onpointerout', 'onpointerover', 'onpointerup', 'onpopstate', 'onprogress', 'onratechange', 'onrejectionhandled', 'onreset', 'onresize', 'onscroll', 'onsearch', 'onseeked', 'onseeking', 'onselect', 'onselectionchange', 'onselectstart', 'onshow', 'onstalled', 'onstorage', 'onsubmit', 'onsuspend', 'ontimeupdate', 'ontoggle', 'ontransitioncancel', 'ontransitionend', 'ontransitionrun', 'ontransitionstart', 'onunhandledrejection', 'onunload', 'onuserproximity', 'onvolumechange', 'onvrdisplayactivate', 'onvrdisplayconnect', 'onvrdisplaydeactivate', 'onvrdisplaydisconnect', 'onvrdisplaypresentchange', 'onwaiting', 'onwebkitanimationend', 'onwebkitanimationiteration', 'onwebkitanimationstart', 'onwebkitmouseforcechanged', 'onwebkitmouseforcedown', 'onwebkitmouseforceup', 'onwebkitmouseforcewillbegin', 'onwebkittransitionend', 'onwheel', 'open', 'openDatabase', 'opener', 'origin', 'outerHeight', 'outerWidth', 'pageXOffset', 'pageYOffset', 'parent', 'performance', 'personalbar', 'postMessage', 'print', 'prompt', 'releaseEvents', 'requestAnimationFrame', 'requestIdleCallback', 'resizeBy', 'resizeTo', 'safari', 'screen', 'screenLeft', 'screenTop', 'screenX', 'screenY', 'scroll', 'scrollBy', 'scrollByLines', 'scrollByPages', 'scrollMaxX', 'scrollMaxY', 'scrollTo', 'scrollX', 'scrollY', 'scrollbars', 'self', 'sessionStorage', 'setResizable', 'showModalDialog', 'sidebar', 'sizeToContent', 'speechSynthesis', 'status', 'statusbar', 'stop', 'styleMedia', 'toolbar', 'top', 'uneval', 'updateCommands', 'visualViewport', 'webkitAudioContext', 'webkitAudioPannerNode', 'webkitCancelAnimationFrame', 'webkitCancelRequestAnimationFrame', 'webkitConvertPointFromNodeToPage', 'webkitConvertPointFromPageToNode', 'webkitIndexedDB', 'webkitMediaStream', 'webkitOfflineAudioContext', 'webkitRTCPeerConnection', 'webkitRequestAnimationFrame', 'webkitRequestFileSystem', 'webkitResolveLocalFileSystemURL', 'webkitSpeechGrammar', 'webkitSpeechGrammarList', 'webkitSpeechRecognition', 'webkitSpeechRecognitionError', 'webkitSpeechRecognitionEvent', 'webkitStorageInfo', 'webkitURL'];

function getReplacementIdentifiers(globals, t) {
  return globals === 'browser' ? browserGlobals.reduce((object, name) => Object.assign(object, {
    [name]: createMemberExpressionFromString(`window.${name}`, t)
  }), {}) : Object.keys(Object(globals)).reduce((object, name) => Object.assign(object, {
    [name]: createMemberExpressionFromString(globals[name], t)
  }), {});
}

function createMemberExpressionFromString(string, t) {
  return string.split('.').reduce((node, identifier) => node ? t.memberExpression(node, t.identifier(identifier)) : t.identifier(identifier), null);
}

function isImportableIdentifier(path, identifiers) {
  return identifiers.hasOwnProperty(path.node.name) && !path.scope.hasBinding(path.node.name) && !path.parentPath.isMemberExpression({
    property: path.node
  });
}

function isReplaceableIdentifier(path, identifiers) {
  return identifiers.hasOwnProperty(path.node.name) && !path.scope.hasBinding(path.node.name) && !path.parentPath.isMemberExpression({
    property: path.node
  }) && !path.parentPath.isOptionalMemberExpression({
    property: path.node
  }) && !path.parentPath.isFunctionParent() && !path.parentPath.isProperty() && !path.parentPath.isModuleSpecifier();
}

function setImportNodes(importNodes, path, file, t) {
  Object.keys(importNodes).forEach(source => {
    const importDeclaration = t.importDeclaration(Object.keys(importNodes[source]).map(name => importNodes[source][name] === 'default' ? t.importDefaultSpecifier(t.identifier(name)) : t.importSpecifier(t.identifier(name), t.identifier(importNodes[source][name]))), t.stringLiteral(source));
    file.set('ourPath', path.unshiftContainer('body', importDeclaration)[0]);
  });
}

function setRequireNodes(requireNodes, path, file, t) {
  Object.keys(requireNodes).forEach(source => {
    const requires = requireNodes[source];
    const aliases = Object.keys(requires);
    const defaultIndex = aliases.findIndex(alias => requires[alias] === 'default');
    const defaultKey = defaultIndex === -1 ? null : aliases.splice(defaultIndex, 1).pop();
    const requireCallExpression = t.callExpression( // callee, arguments
    t.identifier('require'), [t.stringLiteral(source)]);
    const variableDeclaratorInit = defaultKey ? t.identifier(defaultKey) : requireCallExpression;

    if (aliases.length) {
      file.set('ourPath', path.unshiftContainer('body', t.variableDeclaration('const', [t.variableDeclarator( // id, init
      t.objectPattern( // properties
      aliases.map(alias => {
        const name = requires[alias];
        return t.objectProperty( // key, value, computed, shorthand, decorators
        t.identifier(name), t.identifier(alias), false, true);
      })), variableDeclaratorInit)]))[0]);
    }

    if (defaultKey) {
      file.set('ourPath', path.unshiftContainer('body', t.variableDeclaration('const', [t.variableDeclarator( // id, init
      t.identifier(defaultKey), requireCallExpression)]))[0]);
    }
  });
}

function babelPluginTransformGlobals(api, opts) {
  const {
    types: t
  } = api; // options

  const replacementIdentifiers = getReplacementIdentifiers(opts.replace, t);
  const importIdentifiers = getImportIdentifiers(opts.import);
  const requireIdentifiers = getImportIdentifiers(opts.require); // cache

  const importNodes = {};
  const requireNodes = {};
  return {
    name: 'transform-globals',
    visitor: {
      Identifier(path) {
        if (isReplaceableIdentifier(path, replacementIdentifiers)) {
          const name = path.node.name;
          const replacementIdentifier = replacementIdentifiers[name];
          path.replaceWith(replacementIdentifier);
        }

        if (isImportableIdentifier(path, importIdentifiers)) {
          const alias = path.node.name;
          const source = importIdentifiers[alias].source;
          importNodes[source] = importNodes[source] || {};
          importNodes[source][alias] = importIdentifiers[alias].name;
        }

        if (isImportableIdentifier(path, requireIdentifiers)) {
          const alias = path.node.name;
          const source = requireIdentifiers[alias].source;
          requireNodes[source] = requireNodes[source] || {};
          requireNodes[source][alias] = requireIdentifiers[alias].name;
        }
      },

      Program: {
        exit(path, {
          file
        }) {
          setRequireNodes(requireNodes, path, file, t);
          setImportNodes(importNodes, path, file, t);
        }

      }
    }
  };
}

export default babelPluginTransformGlobals;
//# sourceMappingURL=index.mjs.map
