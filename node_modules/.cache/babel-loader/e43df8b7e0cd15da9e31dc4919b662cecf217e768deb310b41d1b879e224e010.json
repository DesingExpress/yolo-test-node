{"ast":null,"code":"import LiteGraph from \"litegraph.js\";\nimport * as nodes_node from \"./nodes/+node.js\";\nconst nodeSymbol = /*#__PURE__*/Symbol.for(\"fabrica.node\");\nfunction _extendNodeClassGenerator(t) {\n  return class extendNodeClass extends t {\n    constructor() {\n      super(...arguments);\n      this.$$develop = nodeSymbol;\n    }\n  };\n}\nfor (let key in nodes_node) {\n  var _t$path, _t$title;\n  let t = nodes_node[key];\n  LiteGraph.registerNodeType(`${(_t$path = t.path) != null ? _t$path : \"testmodule\"}/${(_t$title = t.title) != null ? _t$title : key}`, _extendNodeClassGenerator(t));\n}\nif (module.hot) {\n  module.hot.accept([\"./nodes/+node.js\"], function (deps) {\n    for (let dep of deps) {\n      switch (dep.replace(\"/src\", \"\")) {\n        case \"./nodes/+node.js\":\n          console.log(\"./nodes/+node.js\");\n          for (let key in nodes_node) {\n            var _t$path2, _t$title2;\n            let t = nodes_node[key];\n            LiteGraph.registerNodeType(`${(_t$path2 = t.path) != null ? _t$path2 : \"testmodule\"}/${(_t$title2 = t.title) != null ? _t$title2 : key}`, _extendNodeClassGenerator(t));\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }, function (err, md) {\n    console.log(\"EROROR\");\n  });\n  module.hot.dispose(data => {\n    // 데이터를 정리하고 업데이트된 모듈로 전달합니다.\n    console.log(\"removed: \", data);\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}