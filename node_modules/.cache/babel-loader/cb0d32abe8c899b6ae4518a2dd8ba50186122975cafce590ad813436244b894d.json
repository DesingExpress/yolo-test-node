{"ast":null,"code":"import _createClass from \"/Users/kim-euntae/Documents/Dev/yolov8-nxv/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/kim-euntae/Documents/Dev/yolov8-nxv/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _slicedToArray from \"/Users/kim-euntae/Documents/Dev/yolov8-nxv/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport labels from \"./labels.json\";\n\n/**\n * Render prediction boxes\n * @param {HTMLCanvasElement} canvasRef canvas tag reference\n * @param {Array} boxes_data boxes array\n * @param {Array} scores_data scores array\n * @param {Array} classes_data class array\n * @param {Array[Number]} ratios boxes ratio [xRatio, yRatio]\n */\nexport var renderBoxes = function renderBoxes(canvasRef, boxes_data, scores_data, classes_data, ratios) {\n  var ctx = canvasRef.getContext(\"2d\");\n  ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height); // clean canvas\n\n  var colors = new Colors();\n\n  // font configs\n  var font = \"\".concat(Math.max(Math.round(Math.max(ctx.canvas.width, ctx.canvas.height) / 40), 14), \"px Arial\");\n  ctx.font = font;\n  ctx.textBaseline = \"top\";\n  for (var i = 0; i < scores_data.length; ++i) {\n    // filter based on class threshold\n    var klass = labels[classes_data[i]];\n    var color = colors.get(classes_data[i]);\n    var score = (scores_data[i] * 100).toFixed(1);\n    var _boxes_data$slice = boxes_data.slice(i * 4, (i + 1) * 4),\n      _boxes_data$slice2 = _slicedToArray(_boxes_data$slice, 4),\n      y1 = _boxes_data$slice2[0],\n      x1 = _boxes_data$slice2[1],\n      y2 = _boxes_data$slice2[2],\n      x2 = _boxes_data$slice2[3];\n    x1 *= ratios[0];\n    x2 *= ratios[0];\n    y1 *= ratios[1];\n    y2 *= ratios[1];\n    var width = x2 - x1;\n    var height = y2 - y1;\n\n    // draw box.\n    ctx.fillStyle = Colors.hexToRgba(color, 0.2);\n    ctx.fillRect(x1, y1, width, height);\n\n    // draw border box.\n    ctx.strokeStyle = color;\n    ctx.lineWidth = Math.max(Math.min(ctx.canvas.width, ctx.canvas.height) / 200, 2.5);\n    ctx.strokeRect(x1, y1, width, height);\n\n    // Draw the label background.\n    ctx.fillStyle = color;\n    var textWidth = ctx.measureText(klass + \" - \" + score + \"%\").width;\n    var textHeight = parseInt(font, 10); // base 10\n    var yText = y1 - (textHeight + ctx.lineWidth);\n    ctx.fillRect(x1 - 1, yText < 0 ? 0 : yText,\n    // handle overflow label box\n    textWidth + ctx.lineWidth, textHeight + ctx.lineWidth);\n\n    // Draw labels\n    ctx.fillStyle = \"#ffffff\";\n    ctx.fillText(klass + \" - \" + score + \"%\", x1 - 1, yText < 0 ? 0 : yText);\n  }\n};\nvar Colors = /*#__PURE__*/function () {\n  var Colors = /*#__PURE__*/_createClass(\n  // ultralytics color palette https://ultralytics.com/\n  function Colors() {\n    var _this = this;\n    _classCallCheck(this, Colors);\n    this.get = function (i) {\n      return _this.palette[Math.floor(i) % _this.n];\n    };\n    this.palette = [\"#FF3838\", \"#FF9D97\", \"#FF701F\", \"#FFB21D\", \"#CFD231\", \"#48F90A\", \"#92CC17\", \"#3DDB86\", \"#1A9334\", \"#00D4BB\", \"#2C99A8\", \"#00C2FF\", \"#344593\", \"#6473FF\", \"#0018EC\", \"#8438FF\", \"#520085\", \"#CB38FF\", \"#FF95C8\", \"#FF37C7\"];\n    this.n = this.palette.length;\n  });\n  Colors.hexToRgba = function (hex, alpha) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? \"rgba(\".concat([parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)].join(\", \"), \", \").concat(alpha, \")\") : null;\n  };\n  return Colors;\n}();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}