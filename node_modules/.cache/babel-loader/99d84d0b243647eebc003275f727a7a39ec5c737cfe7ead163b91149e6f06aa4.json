{"ast":null,"code":"var _jsxFileName = \"/Users/kim-euntae/Documents/Dev/yolov8-nxv/src/components/ContentsBox.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { styled } from \"@mui/material\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport \"@tensorflow/tfjs-backend-webgl\";\nimport { detect, detectVideo } from \"../shared/detect\";\nimport ButtonHandler from \"./BtnHandler\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Content = /*#__PURE__*/styled(\"div\")(({\n  theme\n}) => ({\n  width: \"100%\",\n  height: \"100%\"\n}));\n_c = Content;\nfunction ContentsBox({\n  file\n}) {\n  _s();\n  const [model, setModel] = useState({\n    net: null,\n    inputShape: [1, 0, 0, 3]\n  }); // init model & input shape\n\n  const imageRef = useRef(null);\n  const cameraRef = useRef(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // model configs\n  const modelName = \"yolov8n-nxv\";\n  useEffect(() => {\n    tf.ready().then(async () => {\n      const yolov8 = await tf.loadGraphModel(`${window.location.href}//model.json`, {\n        onProgress: fractions => {\n          // setLoading({ loading: true, progress: fractions }); // set loading fractions\n        }\n      }); // load model\n\n      // warming up model\n      const dummyInput = tf.ones(yolov8.inputs[0].shape);\n      const warmupResults = yolov8.execute(dummyInput);\n\n      // setLoading({ loading: false, progress: 1 });\n      setModel({\n        net: yolov8,\n        inputShape: yolov8.inputs[0].shape\n      }); // set model & input shape\n\n      tf.dispose([warmupResults, dummyInput]); // cleanup memory\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Content, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"image\", {\n        src: \"#\",\n        alt: \"image-result\",\n        onLoad: () => detect(imageRef.current, model, canvasRef.current)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        autoPlay: true,\n        muted: true,\n        onPlay: () => detectVideo(cameraRef.current, model, canvasRef.current)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        autoPlay: true,\n        muted: true,\n        onPlay: () => detectVideo(videoRef.current, model, canvasRef.current)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        width: model.inputShape[1],\n        height: model.inputShape[2],\n        ref: canvasRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonHandler, {\n      imageRef: imageRef,\n      cameraRef: cameraRef,\n      videoRef: videoRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(ContentsBox, \"ARypJciIB5BSNdIIrjek3TlETV8=\");\n_c2 = ContentsBox;\nexport default ContentsBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"Content\");\n$RefreshReg$(_c2, \"ContentsBox\");","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}