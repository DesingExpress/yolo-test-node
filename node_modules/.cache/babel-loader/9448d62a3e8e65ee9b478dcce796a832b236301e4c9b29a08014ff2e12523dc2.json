{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kim-euntae/Documents/Dev/yolov8-nxv/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/kim-euntae/Documents/Dev/yolov8-nxv/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/kim-euntae/Documents/Dev/yolov8-nxv/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/kim-euntae/Documents/Dev/yolov8-nxv/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/kim-euntae/Documents/Dev/yolov8-nxv/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/kim-euntae/Documents/Dev/yolov8-nxv/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _ContentsBox;\nimport { Pure } from \"@design-express/fabrica\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport \"@tensorflow/tfjs-backend-webgl\";\nimport ContentsBox from \"../components/ContentsBox\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var YOLOv8NXV = /*#__PURE__*/function () {\n  var YOLOv8NXV = /*#__PURE__*/function (_Pure) {\n    _inherits(YOLOv8NXV, _Pure);\n    var _super = /*#__PURE__*/_createSuper(YOLOv8NXV);\n    //your node constructor class\n    function YOLOv8NXV() {\n      var _this;\n      _classCallCheck(this, YOLOv8NXV);\n      _this = _super.call(this);\n      _this.addInput(\"Get Image\", \"\");\n      _this.addOutput(\"Results\", \"jsx\");\n      _this.widget = _this.addWidget(\"button\", \"Execute\", null, function () {\n        _this.onExecute();\n      });\n      return _this;\n    }\n\n    //function to call when the node is executed\n    _createClass(YOLOv8NXV, [{\n      key: \"onExecute\",\n      value: function () {\n        var _onExecute = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                tf.ready().then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                  var yolov8, dummyInput, warmupResults;\n                  return _regeneratorRuntime().wrap(function _callee$(_context) {\n                    while (1) switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return tf.loadGraphModel(\"\".concat(window.location.href, \"/yolov8n-nxv/model.json\"), {\n                          onProgress: function onProgress(fractions) {\n                            // setLoading({ loading: true, progress: fractions }); // set loading fractions\n                          }\n                        });\n                      case 2:\n                        yolov8 = _context.sent;\n                        // load model\n                        // warming up model\n                        dummyInput = tf.ones(yolov8.inputs[0].shape);\n                        warmupResults = yolov8.execute(dummyInput); // setLoading({ loading: false, progress: 1 });\n                        // setModel({\n                        //   net: yolov8,\n                        //   inputShape: yolov8.inputs[0].shape,\n                        // }); // set model & input shape\n                        tf.dispose([warmupResults, dummyInput]); // cleanup memory\n                      case 6:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }, _callee);\n                })));\n                this.setOutputData(1, _ContentsBox || (_ContentsBox = /*#__PURE__*/_jsx(ContentsBox, {})));\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2, this);\n        }));\n        function onExecute() {\n          return _onExecute.apply(this, arguments);\n        }\n        return onExecute;\n      }()\n    }, {\n      key: \"onAction\",\n      value: function onAction(action, param) {\n        if (action === \"play\") this.triggerSlot(1, param);\n      }\n    }]);\n    return YOLOv8NXV;\n  }(Pure);\n  //name to show on the canvas\n  YOLOv8NXV.path = \"YOLOv8\";\n  YOLOv8NXV.title = \"YOLOv8 NXV\";\n  YOLOv8NXV.description = \"Object Detection using YOLOv8 and Tensorflow.js\";\n  return YOLOv8NXV;\n}();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}