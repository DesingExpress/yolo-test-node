{"ast":null,"code":"var _jsxFileName = \"/Users/kim-euntae/Documents/Dev/yolov8-nxv/src/components/BtnHandler.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef } from \"react\";\nimport { Webcam } from \"../shared/webcam\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonHandler = ({\n  imageRef,\n  cameraRef,\n  videoRef\n}) => {\n  _s();\n  const [streaming, setStreaming] = useState(null); // streaming state\n  const inputImageRef = useRef(null); // video input reference\n  const inputVideoRef = useRef(null); // video input reference\n  const webcam = new Webcam(); // webcam handler\n\n  // closing image\n  const closeImage = () => {\n    // const url = imageRef.current.src;\n    const url = imageRef.src;\n    imageRef.src = \"#\"; // restore image source\n    URL.revokeObjectURL(url); // revoke url\n\n    setStreaming(null); // set streaming to null\n    inputImageRef.current.value = \"\"; // reset input image\n    imageRef.current.style.display = \"none\"; // hide image\n  };\n\n  // closing video streaming\n  const closeVideo = () => {\n    const url = videoRef.current.src;\n    videoRef.current.src = \"\"; // restore video source\n    URL.revokeObjectURL(url); // revoke url\n\n    setStreaming(null); // set streaming to null\n    inputVideoRef.current.value = \"\"; // reset input video\n    videoRef.current.style.display = \"none\"; // hide video\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"btn-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      style: {\n        display: \"none\"\n      },\n      onChange: e => {\n        const url = URL.createObjectURL(e.target.files[0]); // create blob url\n        imageRef.current.src = url; // set video source\n        imageRef.current.style.display = \"block\"; // show video\n        setStreaming(\"image\"); // set streaming to video\n      },\n\n      ref: inputImageRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        // if not streaming\n        if (streaming === null) inputImageRef.current.click();\n        // closing image streaming\n        else if (streaming === \"image\") closeImage();else window.alert(`Can't handle more than 1 stream\\nCurrently streaming : ${streaming}`); // if streaming video or webcam\n      },\n      children: [streaming === \"image\" ? \"Close\" : \"Open\", \" Image\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"video/*\",\n      style: {\n        display: \"none\"\n      },\n      onChange: e => {\n        if (streaming === \"image\") closeImage(); // closing image streaming\n        const url = URL.createObjectURL(e.target.files[0]); // create blob url\n        videoRef.current.src = url; // set video source\n        videoRef.current.addEventListener(\"ended\", () => closeVideo()); // add ended video listener\n        videoRef.current.style.display = \"block\"; // show video\n        setStreaming(\"video\"); // set streaming to video\n      },\n\n      ref: inputVideoRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        // if not streaming\n        if (streaming === null || streaming === \"image\") inputVideoRef.current.click();\n        // closing video streaming\n        else if (streaming === \"video\") closeVideo();else window.alert(`Can't handle more than 1 stream\\nCurrently streaming : ${streaming}`); // if streaming webcam\n      },\n      children: [streaming === \"video\" ? \"Close\" : \"Open\", \" Video\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        // if not streaming\n        if (streaming === null || streaming === \"image\") {\n          // closing image streaming\n          if (streaming === \"image\") closeImage();\n          webcam.open(cameraRef.current); // open webcam\n          cameraRef.current.style.display = \"block\"; // show camera\n          setStreaming(\"camera\"); // set streaming to camera\n        }\n        // closing video streaming\n        else if (streaming === \"camera\") {\n          webcam.close(cameraRef.current);\n          cameraRef.current.style.display = \"none\";\n          setStreaming(null);\n        } else window.alert(`Can't handle more than 1 stream\\nCurrently streaming : ${streaming}`); // if streaming video\n      },\n      children: [streaming === \"camera\" ? \"Close\" : \"Open\", \" Webcam\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ButtonHandler, \"WHx51jxOPaxSBh7jlQ916uxcLY4=\");\n_c = ButtonHandler;\nexport default ButtonHandler;\nvar _c;\n$RefreshReg$(_c, \"ButtonHandler\");","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}