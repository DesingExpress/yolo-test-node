{"ast":null,"code":"import _slicedToArray from \"/Users/kim-euntae/Documents/Dev/yolov8-nxv/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState, useRef } from \"react\";\nimport { Webcam } from \"../shared/webcam\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ButtonHandler = function ButtonHandler(_ref) {\n  var imageRef = _ref.imageRef,\n    cameraRef = _ref.cameraRef,\n    videoRef = _ref.videoRef;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    streaming = _useState2[0],\n    setStreaming = _useState2[1]; // streaming state\n  var inputImageRef = useRef(null); // video input reference\n  var inputVideoRef = useRef(null); // video input reference\n  var webcam = new Webcam(); // webcam handler\n\n  // closing image\n  var closeImage = function closeImage() {\n    var url = imageRef.current.src;\n    imageRef.current.src = \"#\"; // restore image source\n    URL.revokeObjectURL(url); // revoke url\n\n    setStreaming(null); // set streaming to null\n    inputImageRef.current.value = \"\"; // reset input image\n    imageRef.current.style.display = \"none\"; // hide image\n  };\n\n  // closing video streaming\n  var closeVideo = function closeVideo() {\n    var url = videoRef.current.src;\n    videoRef.current.src = \"\"; // restore video source\n    URL.revokeObjectURL(url); // revoke url\n\n    setStreaming(null); // set streaming to null\n    inputVideoRef.current.value = \"\"; // reset input video\n    videoRef.current.style.display = \"none\"; // hide video\n  };\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: \"btn-container\",\n    children: [/*#__PURE__*/_jsx(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      style: {\n        display: \"none\"\n      },\n      onChange: function onChange(e) {\n        var url = URL.createObjectURL(e.target.files[0]); // create blob url\n        imageRef.current.src = url; // set video source\n        imageRef.current.style.display = \"block\"; // show video\n        setStreaming(\"image\"); // set streaming to video\n      },\n\n      ref: inputImageRef\n    }), /*#__PURE__*/_jsxs(\"button\", {\n      onClick: function onClick() {\n        // if not streaming\n        if (streaming === null) inputImageRef.current.click();\n        // closing image streaming\n        else if (streaming === \"image\") closeImage();else window.alert(\"Can't handle more than 1 stream\\nCurrently streaming : \".concat(streaming)); // if streaming video or webcam\n      },\n      children: [streaming === \"image\" ? \"Close\" : \"Open\", \" Image\"]\n    }), /*#__PURE__*/_jsx(\"input\", {\n      type: \"file\",\n      accept: \"video/*\",\n      style: {\n        display: \"none\"\n      },\n      onChange: function onChange(e) {\n        if (streaming === \"image\") closeImage(); // closing image streaming\n        var url = URL.createObjectURL(e.target.files[0]); // create blob url\n        videoRef.current.src = url; // set video source\n        videoRef.current.addEventListener(\"ended\", function () {\n          return closeVideo();\n        }); // add ended video listener\n        videoRef.current.style.display = \"block\"; // show video\n        setStreaming(\"video\"); // set streaming to video\n      },\n\n      ref: inputVideoRef\n    }), /*#__PURE__*/_jsxs(\"button\", {\n      onClick: function onClick() {\n        // if not streaming\n        if (streaming === null || streaming === \"image\") inputVideoRef.current.click();\n        // closing video streaming\n        else if (streaming === \"video\") closeVideo();else window.alert(\"Can't handle more than 1 stream\\nCurrently streaming : \".concat(streaming)); // if streaming webcam\n      },\n      children: [streaming === \"video\" ? \"Close\" : \"Open\", \" Video\"]\n    }), /*#__PURE__*/_jsxs(\"button\", {\n      onClick: function onClick() {\n        // if not streaming\n        if (streaming === null || streaming === \"image\") {\n          // closing image streaming\n          if (streaming === \"image\") closeImage();\n          webcam.open(cameraRef.current); // open webcam\n          cameraRef.current.style.display = \"block\"; // show camera\n          setStreaming(\"camera\"); // set streaming to camera\n        }\n        // closing video streaming\n        else if (streaming === \"camera\") {\n          webcam.close(cameraRef.current);\n          cameraRef.current.style.display = \"none\";\n          setStreaming(null);\n        } else window.alert(\"Can't handle more than 1 stream\\nCurrently streaming : \".concat(streaming)); // if streaming video\n      },\n      children: [streaming === \"camera\" ? \"Close\" : \"Open\", \" Webcam\"]\n    })]\n  });\n};\nexport default ButtonHandler;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}